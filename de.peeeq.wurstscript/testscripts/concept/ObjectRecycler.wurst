package ObjectRecycler
import Stack
import TypeCasting
import MapBounds

Table objectLists = new Table()

public function unit.recycle()
	let id = GetUnitTypeId(this)
	if objectLists.hasInt(id)
		let stack = objectLists.loadInt(id) castTo Stack<unit>
		stack.push(this)
		this.hide()
		this.setPos(mapMinX, mapMinY)
	else
		printError("trying to recycle a unit not created by 'getUnit'!")
	

public function getUnit(player p, int id, vec2 pos, angle facing) returns unit
	if objectLists.hasInt(id)
		let stack = objectLists.loadInt(id) castTo Stack<unit>
		return stack.pop().setFacing(facing).show()
	else
		objectLists.saveInt(id, (new Stack<unit>() )castTo int)
		return createUnit(p, id, pos, facing)
		
init
	unit u = getUnit(Player(0), 0, vec2(0,0), angle(0))
	u.recycle()