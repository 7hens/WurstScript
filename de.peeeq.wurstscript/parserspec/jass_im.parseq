package de.peeeq.wurstscript.jassIm


abstract syntax:
	
ImProg(ImVars globals, ImFunctions functions, java.util.Map<ImVar, ImExpr> globalInits)

ImVars * ImVar
ImFunctions * ImFunction

ImVar(&ImType type, String name, boolean isBJ)

ImType = 
	  ImSimpleType(String typename)
	| ImArrayType(String typename)
	| ImTupleType(java.util.List<ImType> types, java.util.List<String> names)
	| ImTupleArrayType(java.util.List<ImType> types, java.util.List<String> names)
	| ImVoid()
	
ImFunction(de.peeeq.wurstscript.ast.AstElement trace, String name, ImVars parameters, &ImType returnType, ImVars locals, ImStmts body, java.util.List<de.peeeq.wurstscript.translation.imtranslation.FunctionFlag> flags)
	
	
ImStmts * ImStmt

ImStmt = 
	  ImIf(de.peeeq.wurstscript.ast.AstElement trace, ImExpr condition, ImStmts thenBlock, ImStmts elseBlock)
	| ImLoop(de.peeeq.wurstscript.ast.AstElement trace, ImStmts body)
	| ImExitwhen(de.peeeq.wurstscript.ast.AstElement trace, ImExpr condition)
	| ImReturn(de.peeeq.wurstscript.ast.AstElement trace, ImExprOpt returnValue)
	| ImSet(de.peeeq.wurstscript.ast.AstElement trace, &ImVar left, ImExpr right)
	| ImSetTuple(de.peeeq.wurstscript.ast.AstElement trace, &ImVar left, int tupleIndex, ImExpr right)
	| ImSetArray(de.peeeq.wurstscript.ast.AstElement trace, &ImVar left, ImExpr index, ImExpr right)
	| ImSetArrayTuple(de.peeeq.wurstscript.ast.AstElement trace, &ImVar left, ImExpr index, int tupleIndex, ImExpr right)
	| ImExpr
	
	
ImExprOpt = 
	  ImExpr
	| ImFlatExprOpt

ImFlatExprOpt = 
	  ImFlatExpr
	| ImNoExpr()
	
ImExprs * ImExpr
	
ImExpr = 
	  ImStatementExpr(ImStmts statements, ImExpr expr)
	| ImFlatExpr

ImFlatExpr = 
	  ImCall
	| ImVarAccess(&ImVar var)
	| ImVarArrayAccess(&ImVar var, ImExpr index)
	| ImTupleExpr(ImExprs exprs)
	| ImTupleSelection(ImExpr tupleExpr, int tupleIndex)
	| ImConst
	
ImCall = 
	  ImFunctionCall(de.peeeq.wurstscript.ast.AstElement trace, &ImFunction func, ImExprs arguments, boolean tuplesEliminated)
	| ImOperatorCall(de.peeeq.wurstscript.WurstOperator op, ImExprs arguments)
	
ImConst = 
	  ImIntVal(int valI)
	| ImRealVal(String valR)
	| ImStringVal(String valS)
	| ImBoolVal(boolean valB)
	| ImFuncRef(&ImFunction func)
	| ImNull()

// helper types:

	
ImPrintable = ImStmt | ImFunction | ImProg | ImVar | ImType | ImStmts | ImExprOpt
	
ImVarWrite = ImSet | ImSetArray | ImSetArrayTuple | ImSetTuple
ImVarRead = ImVarAccess | ImVarArrayAccess	
	
attributes:
	
ImType.defaultValue
	returns de.peeeq.wurstscript.intermediateLang.ILconst
	implemented by de.peeeq.wurstscript.translation.imtojass.DefaultValue.get

ImPrintable.print(java.lang.StringBuilder sb, int indent)
	returns void
	implemented by de.peeeq.wurstscript.translation.imtranslation.ImPrinter.print

ImPrintable.toString()
	returns String
	implemented by de.peeeq.wurstscript.translation.imtranslation.ImPrinter.asString


ImProg.flatten(de.peeeq.wurstscript.translation.imtranslation.ImTranslator translator)
	returns void
	implemented by de.peeeq.wurstscript.translation.imtranslation.Flatten.flattenProg

ImFunction.flatten(de.peeeq.wurstscript.translation.imtranslation.ImTranslator translator)
	returns void
	implemented by de.peeeq.wurstscript.translation.imtranslation.Flatten.flattenFunc
	
ImStmt.flatten(
		de.peeeq.wurstscript.translation.imtranslation.ImTranslator translator, 
		de.peeeq.wurstscript.jassIm.ImFunction f	
	)
	returns de.peeeq.wurstscript.translation.imtranslation.Flatten.Result
	implemented by de.peeeq.wurstscript.translation.imtranslation.Flatten.flatten
	
ImStmt.attrPurity
	returns de.peeeq.wurstscript.translation.imtranslation.purity.PurityLevel
	implemented by de.peeeq.wurstscript.translation.imtranslation.purity.PurityLevels.calculate

ImProg.eliminateTuples(de.peeeq.wurstscript.translation.imtranslation.ImTranslator translator)
	returns void
	implemented by de.peeeq.wurstscript.translation.imtranslation.EliminateTuples.eliminateTuplesProg

ImFunction.eliminateTuples(de.peeeq.wurstscript.translation.imtranslation.ImTranslator translator)
	returns void
	implemented by de.peeeq.wurstscript.translation.imtranslation.EliminateTuples.eliminateTuplesFunc
	
ImStmt.eliminateTuples(
		de.peeeq.wurstscript.translation.imtranslation.ImTranslator translator, 
		de.peeeq.wurstscript.jassIm.ImFunction f	
	)
	returns ImStmt
	implemented by de.peeeq.wurstscript.translation.imtranslation.EliminateTuples.eliminateTuples
	
ImExpr.eliminateTuplesExpr(
		de.peeeq.wurstscript.translation.imtranslation.ImTranslator translator, 
		de.peeeq.wurstscript.jassIm.ImFunction f	
	)
	returns ImExpr
	implemented by de.peeeq.wurstscript.translation.imtranslation.EliminateTuples.eliminateTuplesExpr
	
ImExprOpt.eliminateTuplesExprOpt(
		de.peeeq.wurstscript.translation.imtranslation.ImTranslator translator, 
		de.peeeq.wurstscript.jassIm.ImFunction f	
	)
	returns ImExprOpt
	implemented by de.peeeq.wurstscript.translation.imtranslation.EliminateTuples.eliminateTuplesExpr
	
	
ImStmts.translate(
		java.util.List<de.peeeq.wurstscript.jassAst.JassStatement> stmts,
		de.peeeq.wurstscript.jassAst.JassFunction f,
		de.peeeq.wurstscript.translation.imtojass.ImToJassTranslator translator
		)
		returns void
		implemented by de.peeeq.wurstscript.translation.imtojass.StatementTranslation.translate
	
ImStmt.translate(
		java.util.List<de.peeeq.wurstscript.jassAst.JassStatement> stmts,
		de.peeeq.wurstscript.jassAst.JassFunction f,
		de.peeeq.wurstscript.translation.imtojass.ImToJassTranslator translator
		)
		returns void
		implemented by de.peeeq.wurstscript.translation.imtojass.StatementTranslation.translate

ImExpr.translate(
		de.peeeq.wurstscript.translation.imtojass.ImToJassTranslator translator
		)
		returns de.peeeq.wurstscript.jassAst.JassExpr
		implemented by de.peeeq.wurstscript.translation.imtojass.ExprTranslation.translate

		
	
ImExpr.attrTyp
	returns ImType
	implemented by de.peeeq.wurstscript.translation.imtojass.ImAttrType.getType

JassImElement.getNearestFunc()
	returns ImFunction
	implemented by de.peeeq.wurstscript.translation.imtojass.ImAttributes.getNearestFunc
	
	
ImType.translateType()
	returns String
	implemented by de.peeeq.wurstscript.translation.imtojass.ImAttributes.translateType
	
ImVar.isGlobal
	returns boolean
	implemented by de.peeeq.wurstscript.translation.imtojass.ImAttributes.isGlobal
	
ImStmts.runStatements(de.peeeq.wurstscript.intermediateLang.interpreter.ProgramState globalState
		, de.peeeq.wurstscript.intermediateLang.interpreter.LocalState localState)
	returns void
	implemented by de.peeeq.wurstscript.intermediateLang.interpreter.RunStatement.run
	
ImStmt.runStatement(de.peeeq.wurstscript.intermediateLang.interpreter.ProgramState globalState
		, de.peeeq.wurstscript.intermediateLang.interpreter.LocalState localState)
	returns void
	implemented by de.peeeq.wurstscript.intermediateLang.interpreter.RunStatement.run
	
ImExpr.evaluate(de.peeeq.wurstscript.intermediateLang.interpreter.ProgramState globalState
		, de.peeeq.wurstscript.intermediateLang.interpreter.LocalState localState)
	returns de.peeeq.wurstscript.intermediateLang.ILconst
	implemented by de.peeeq.wurstscript.intermediateLang.interpreter.EvaluateExpr.eval
	
ImFunction.isNative()
	returns boolean
	implemented by de.peeeq.wurstscript.translation.imtojass.ImAttributes.isNative

ImFunction.isBj()
	returns boolean
	implemented by de.peeeq.wurstscript.translation.imtojass.ImAttributes.isBj
	
ImFunction.isCompiletime()
	returns boolean
	implemented by de.peeeq.wurstscript.translation.imtojass.ImAttributes.isCompiletime

ImFunction.hasFlag(de.peeeq.wurstscript.translation.imtranslation.FunctionFlag flag)
	returns boolean
	implemented by de.peeeq.wurstscript.translation.imtojass.ImAttributes.hasFlag

JassImElement.attrTrace()
	returns de.peeeq.wurstscript.ast.AstElement
	implemented by de.peeeq.wurstscript.translation.imtojass.ImAttributes.getTrace
	
JassImElement.replaceWith(JassImElement other) "replaces this element with some new element"
	returns void
	implemented by de.peeeq.wurstscript.translation.imtranslation.ImHelper.replaceElem

JassImElement.attrProg()
	returns ImProg
	implemented by de.peeeq.wurstscript.translation.imtojass.ImAttributes.getProg
	
ImProg.attrVariableUses
	returns de.peeeq.wurstscript.translation.imoptimizer.VariableUses.Uses
	implemented by de.peeeq.wurstscript.translation.imoptimizer.VariableUses.calcVarUses
	
ImVar.attrWrites
	returns java.util.Collection<ImVarWrite>
	implemented by de.peeeq.wurstscript.translation.imoptimizer.VariableUses.getVarWrites
	
	
ImVar.attrReads
	returns java.util.Collection<ImVarRead>
	implemented by de.peeeq.wurstscript.translation.imoptimizer.VariableUses.getVarReads
	
	
ImFunction.calcUsedVariables()
	returns java.util.Set<ImVar>
	implemented by de.peeeq.wurstscript.translation.imtranslation.UsedVariables.calculate
	
ImFunction.calcUsedFunctions()
	returns java.util.Set<ImFunction>
	implemented by de.peeeq.wurstscript.translation.imtranslation.UsedFunctions.calculate
	

	
	