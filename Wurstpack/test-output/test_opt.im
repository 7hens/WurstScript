boolean FALSE806
boolean TRUE223
integer JASS_MAX_ARRAY_SIZE987
integer PLAYER_NEUTRAL_PASSIVE452
integer PLAYER_NEUTRAL_AGGRESSIVE139
playercolor PLAYER_COLOR_RED257
playercolor PLAYER_COLOR_BLUE158
playercolor PLAYER_COLOR_CYAN933
playercolor PLAYER_COLOR_PURPLE189
playercolor PLAYER_COLOR_YELLOW504
playercolor PLAYER_COLOR_ORANGE748
playercolor PLAYER_COLOR_GREEN464
playercolor PLAYER_COLOR_PINK293
playercolor PLAYER_COLOR_LIGHT_GRAY191
playercolor PLAYER_COLOR_LIGHT_BLUE234
playercolor PLAYER_COLOR_AQUA228
playercolor PLAYER_COLOR_BROWN258
race RACE_HUMAN790
race RACE_ORC107
race RACE_UNDEAD456
race RACE_NIGHTELF389
race RACE_DEMON134
race RACE_OTHER196
playergameresult PLAYER_GAME_RESULT_VICTORY166
playergameresult PLAYER_GAME_RESULT_DEFEAT231
playergameresult PLAYER_GAME_RESULT_TIE140
playergameresult PLAYER_GAME_RESULT_NEUTRAL324
alliancetype ALLIANCE_PASSIVE213
alliancetype ALLIANCE_HELP_REQUEST332
alliancetype ALLIANCE_HELP_RESPONSE216
alliancetype ALLIANCE_SHARED_XP325
alliancetype ALLIANCE_SHARED_SPELLS284
alliancetype ALLIANCE_SHARED_VISION130
alliancetype ALLIANCE_SHARED_CONTROL326
alliancetype ALLIANCE_SHARED_ADVANCED_CONTROL194
alliancetype ALLIANCE_RESCUABLE307
alliancetype ALLIANCE_SHARED_VISION_FORCED211
version VERSION_REIGN_OF_CHAOS265
version VERSION_FROZEN_THRONE102
attacktype ATTACK_TYPE_NORMAL189
attacktype ATTACK_TYPE_MELEE283
attacktype ATTACK_TYPE_PIERCE142
attacktype ATTACK_TYPE_SIEGE290
attacktype ATTACK_TYPE_MAGIC255
attacktype ATTACK_TYPE_CHAOS328
attacktype ATTACK_TYPE_HERO190
damagetype DAMAGE_TYPE_UNKNOWN663
damagetype DAMAGE_TYPE_NORMAL155
damagetype DAMAGE_TYPE_ENHANCED256
damagetype DAMAGE_TYPE_FIRE256
damagetype DAMAGE_TYPE_COLD276
damagetype DAMAGE_TYPE_LIGHTNING328
damagetype DAMAGE_TYPE_POISON685
damagetype DAMAGE_TYPE_DISEASE159
damagetype DAMAGE_TYPE_DIVINE848
damagetype DAMAGE_TYPE_MAGIC267
damagetype DAMAGE_TYPE_SONIC105
damagetype DAMAGE_TYPE_ACID825
damagetype DAMAGE_TYPE_FORCE247
damagetype DAMAGE_TYPE_DEATH831
damagetype DAMAGE_TYPE_MIND234
damagetype DAMAGE_TYPE_PLANT826
damagetype DAMAGE_TYPE_DEFENSIVE144
damagetype DAMAGE_TYPE_DEMOLITION104
damagetype DAMAGE_TYPE_SLOW_POISON919
damagetype DAMAGE_TYPE_SPIRIT_LINK298
damagetype DAMAGE_TYPE_SHADOW_STRIKE316
damagetype DAMAGE_TYPE_UNIVERSAL877
weapontype WEAPON_TYPE_WHOKNOWS185
weapontype WEAPON_TYPE_METAL_LIGHT_CHOP258
weapontype WEAPON_TYPE_METAL_MEDIUM_CHOP207
weapontype WEAPON_TYPE_METAL_HEAVY_CHOP128
weapontype WEAPON_TYPE_METAL_LIGHT_SLICE287
weapontype WEAPON_TYPE_METAL_MEDIUM_SLICE142
weapontype WEAPON_TYPE_METAL_HEAVY_SLICE305
weapontype WEAPON_TYPE_METAL_MEDIUM_BASH229
weapontype WEAPON_TYPE_METAL_HEAVY_BASH202
weapontype WEAPON_TYPE_METAL_MEDIUM_STAB330
weapontype WEAPON_TYPE_METAL_HEAVY_STAB263
weapontype WEAPON_TYPE_WOOD_LIGHT_SLICE672
weapontype WEAPON_TYPE_WOOD_MEDIUM_SLICE150
weapontype WEAPON_TYPE_WOOD_HEAVY_SLICE112
weapontype WEAPON_TYPE_WOOD_LIGHT_BASH183
weapontype WEAPON_TYPE_WOOD_MEDIUM_BASH216
weapontype WEAPON_TYPE_WOOD_HEAVY_BASH307
weapontype WEAPON_TYPE_WOOD_LIGHT_STAB255
weapontype WEAPON_TYPE_WOOD_MEDIUM_STAB270
weapontype WEAPON_TYPE_CLAW_LIGHT_SLICE170
weapontype WEAPON_TYPE_CLAW_MEDIUM_SLICE106
weapontype WEAPON_TYPE_CLAW_HEAVY_SLICE319
weapontype WEAPON_TYPE_AXE_MEDIUM_CHOP889
weapontype WEAPON_TYPE_ROCK_HEAVY_BASH324
pathingtype PATHING_TYPE_ANY152
pathingtype PATHING_TYPE_WALKABILITY266
pathingtype PATHING_TYPE_FLYABILITY184
pathingtype PATHING_TYPE_BUILDABILITY265
pathingtype PATHING_TYPE_PEONHARVESTPATHING168
pathingtype PATHING_TYPE_BLIGHTPATHING195
pathingtype PATHING_TYPE_FLOATABILITY916
pathingtype PATHING_TYPE_AMPHIBIOUSPATHING294
racepreference RACE_PREF_HUMAN158
racepreference RACE_PREF_ORC197
racepreference RACE_PREF_NIGHTELF329
racepreference RACE_PREF_UNDEAD275
racepreference RACE_PREF_DEMON997
racepreference RACE_PREF_RANDOM329
racepreference RACE_PREF_USER_SELECTABLE773
mapcontrol MAP_CONTROL_USER160
mapcontrol MAP_CONTROL_COMPUTER289
mapcontrol MAP_CONTROL_RESCUABLE264
mapcontrol MAP_CONTROL_NEUTRAL217
mapcontrol MAP_CONTROL_CREEP270
mapcontrol MAP_CONTROL_NONE325
gametype GAME_TYPE_MELEE271
gametype GAME_TYPE_FFA479
gametype GAME_TYPE_USE_MAP_SETTINGS166
gametype GAME_TYPE_BLIZ765
gametype GAME_TYPE_ONE_ON_ONE518
gametype GAME_TYPE_TWO_TEAM_PLAY152
gametype GAME_TYPE_THREE_TEAM_PLAY327
gametype GAME_TYPE_FOUR_TEAM_PLAY485
mapflag MAP_FOG_HIDE_TERRAIN344
mapflag MAP_FOG_MAP_EXPLORED394
mapflag MAP_FOG_ALWAYS_VISIBLE248
mapflag MAP_USE_HANDICAPS350
mapflag MAP_OBSERVERS888
mapflag MAP_OBSERVERS_ON_DEATH506
mapflag MAP_FIXED_COLORS212
mapflag MAP_LOCK_RESOURCE_TRADING147
mapflag MAP_RESOURCE_TRADING_ALLIES_ONLY188
mapflag MAP_LOCK_ALLIANCE_CHANGES202
mapflag MAP_ALLIANCE_CHANGES_HIDDEN205
mapflag MAP_CHEATS252
mapflag MAP_CHEATS_HIDDEN142
mapflag MAP_LOCK_SPEED243
mapflag MAP_LOCK_RANDOM_SEED135
mapflag MAP_SHARED_ADVANCED_CONTROL253
mapflag MAP_RANDOM_HERO272
mapflag MAP_RANDOM_RACES724
mapflag MAP_RELOADED894
placement MAP_PLACEMENT_RANDOM830
placement MAP_PLACEMENT_FIXED842
placement MAP_PLACEMENT_USE_MAP_SETTINGS187
placement MAP_PLACEMENT_TEAMS_TOGETHER179
startlocprio MAP_LOC_PRIO_LOW250
startlocprio MAP_LOC_PRIO_HIGH242
startlocprio MAP_LOC_PRIO_NOT183
mapdensity MAP_DENSITY_NONE327
mapdensity MAP_DENSITY_LIGHT180
mapdensity MAP_DENSITY_MEDIUM316
mapdensity MAP_DENSITY_HEAVY247
gamedifficulty MAP_DIFFICULTY_EASY285
gamedifficulty MAP_DIFFICULTY_NORMAL234
gamedifficulty MAP_DIFFICULTY_HARD193
gamedifficulty MAP_DIFFICULTY_INSANE163
gamespeed MAP_SPEED_SLOWEST274
gamespeed MAP_SPEED_SLOW298
gamespeed MAP_SPEED_NORMAL109
gamespeed MAP_SPEED_FAST245
gamespeed MAP_SPEED_FASTEST105
playerslotstate PLAYER_SLOT_STATE_EMPTY323
playerslotstate PLAYER_SLOT_STATE_PLAYING211
playerslotstate PLAYER_SLOT_STATE_LEFT260
volumegroup SOUND_VOLUMEGROUP_UNITMOVEMENT253
volumegroup SOUND_VOLUMEGROUP_UNITSOUNDS602
volumegroup SOUND_VOLUMEGROUP_COMBAT238
volumegroup SOUND_VOLUMEGROUP_SPELLS178
volumegroup SOUND_VOLUMEGROUP_UI152
volumegroup SOUND_VOLUMEGROUP_MUSIC135
volumegroup SOUND_VOLUMEGROUP_AMBIENTSOUNDS209
volumegroup SOUND_VOLUMEGROUP_FIRE302
igamestate GAME_STATE_DIVINE_INTERVENTION321
igamestate GAME_STATE_DISCONNECTED233
fgamestate GAME_STATE_TIME_OF_DAY906
playerstate PLAYER_STATE_GAME_RESULT301
playerstate PLAYER_STATE_RESOURCE_GOLD332
playerstate PLAYER_STATE_RESOURCE_LUMBER277
playerstate PLAYER_STATE_RESOURCE_HERO_TOKENS173
playerstate PLAYER_STATE_RESOURCE_FOOD_CAP283
playerstate PLAYER_STATE_RESOURCE_FOOD_USED170
playerstate PLAYER_STATE_FOOD_CAP_CEILING281
playerstate PLAYER_STATE_GIVES_BOUNTY278
playerstate PLAYER_STATE_ALLIED_VICTORY212
playerstate PLAYER_STATE_PLACED131
playerstate PLAYER_STATE_OBSERVER_ON_DEATH209
playerstate PLAYER_STATE_OBSERVER117
playerstate PLAYER_STATE_UNFOLLOWABLE107
playerstate PLAYER_STATE_GOLD_UPKEEP_RATE118
playerstate PLAYER_STATE_LUMBER_UPKEEP_RATE243
playerstate PLAYER_STATE_GOLD_GATHERED132
playerstate PLAYER_STATE_LUMBER_GATHERED136
playerstate PLAYER_STATE_NO_CREEP_SLEEP922
unitstate UNIT_STATE_LIFE161
unitstate UNIT_STATE_MAX_LIFE166
unitstate UNIT_STATE_MANA273
unitstate UNIT_STATE_MAX_MANA300
aidifficulty AI_DIFFICULTY_NEWBIE299
aidifficulty AI_DIFFICULTY_NORMAL208
aidifficulty AI_DIFFICULTY_INSANE151
playerscore PLAYER_SCORE_UNITS_TRAINED685
playerscore PLAYER_SCORE_UNITS_KILLED261
playerscore PLAYER_SCORE_STRUCT_BUILT282
playerscore PLAYER_SCORE_STRUCT_RAZED224
playerscore PLAYER_SCORE_TECH_PERCENT153
playerscore PLAYER_SCORE_FOOD_MAXPROD413
playerscore PLAYER_SCORE_FOOD_MAXUSED219
playerscore PLAYER_SCORE_HEROES_KILLED167
playerscore PLAYER_SCORE_ITEMS_GAINED611
playerscore PLAYER_SCORE_MERCS_HIRED291
playerscore PLAYER_SCORE_GOLD_MINED_TOTAL214
playerscore PLAYER_SCORE_GOLD_MINED_UPKEEP220
playerscore PLAYER_SCORE_GOLD_LOST_UPKEEP496
playerscore PLAYER_SCORE_GOLD_LOST_TAX623
playerscore PLAYER_SCORE_GOLD_GIVEN295
playerscore PLAYER_SCORE_GOLD_RECEIVED579
playerscore PLAYER_SCORE_LUMBER_TOTAL486
playerscore PLAYER_SCORE_LUMBER_LOST_UPKEEP332
playerscore PLAYER_SCORE_LUMBER_LOST_TAX279
playerscore PLAYER_SCORE_LUMBER_GIVEN923
playerscore PLAYER_SCORE_LUMBER_RECEIVED256
playerscore PLAYER_SCORE_UNIT_TOTAL158
playerscore PLAYER_SCORE_HERO_TOTAL135
playerscore PLAYER_SCORE_RESOURCE_TOTAL322
playerscore PLAYER_SCORE_TOTAL829
gameevent EVENT_GAME_VICTORY831
gameevent EVENT_GAME_END_LEVEL535
gameevent EVENT_GAME_VARIABLE_LIMIT293
gameevent EVENT_GAME_STATE_LIMIT228
gameevent EVENT_GAME_TIMER_EXPIRED185
gameevent EVENT_GAME_ENTER_REGION984
gameevent EVENT_GAME_LEAVE_REGION323
gameevent EVENT_GAME_TRACKABLE_HIT500
gameevent EVENT_GAME_TRACKABLE_TRACK194
gameevent EVENT_GAME_SHOW_SKILL242
gameevent EVENT_GAME_BUILD_SUBMENU645
playerevent EVENT_PLAYER_STATE_LIMIT189
playerevent EVENT_PLAYER_ALLIANCE_CHANGED784
playerevent EVENT_PLAYER_DEFEAT331
playerevent EVENT_PLAYER_VICTORY164
playerevent EVENT_PLAYER_LEAVE148
playerevent EVENT_PLAYER_CHAT320
playerevent EVENT_PLAYER_END_CINEMATIC128
playerunitevent EVENT_PLAYER_UNIT_ATTACKED225
playerunitevent EVENT_PLAYER_UNIT_RESCUED197
playerunitevent EVENT_PLAYER_UNIT_DEATH916
playerunitevent EVENT_PLAYER_UNIT_DECAY706
playerunitevent EVENT_PLAYER_UNIT_DETECTED216
playerunitevent EVENT_PLAYER_UNIT_HIDDEN751
playerunitevent EVENT_PLAYER_UNIT_SELECTED733
playerunitevent EVENT_PLAYER_UNIT_DESELECTED273
playerunitevent EVENT_PLAYER_UNIT_CONSTRUCT_START166
playerunitevent EVENT_PLAYER_UNIT_CONSTRUCT_CANCEL172
playerunitevent EVENT_PLAYER_UNIT_CONSTRUCT_FINISH215
playerunitevent EVENT_PLAYER_UNIT_UPGRADE_START291
playerunitevent EVENT_PLAYER_UNIT_UPGRADE_CANCEL229
playerunitevent EVENT_PLAYER_UNIT_UPGRADE_FINISH133
playerunitevent EVENT_PLAYER_UNIT_TRAIN_START162
playerunitevent EVENT_PLAYER_UNIT_TRAIN_CANCEL151
playerunitevent EVENT_PLAYER_UNIT_TRAIN_FINISH137
playerunitevent EVENT_PLAYER_UNIT_RESEARCH_START319
playerunitevent EVENT_PLAYER_UNIT_RESEARCH_CANCEL304
playerunitevent EVENT_PLAYER_UNIT_RESEARCH_FINISH232
playerunitevent EVENT_PLAYER_UNIT_ISSUED_ORDER637
playerunitevent EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER193
playerunitevent EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER277
playerunitevent EVENT_PLAYER_UNIT_ISSUED_UNIT_ORDER305
playerunitevent EVENT_PLAYER_HERO_LEVEL333
playerunitevent EVENT_PLAYER_HERO_SKILL105
playerunitevent EVENT_PLAYER_HERO_REVIVABLE333
playerunitevent EVENT_PLAYER_HERO_REVIVE_START600
playerunitevent EVENT_PLAYER_HERO_REVIVE_CANCEL163
playerunitevent EVENT_PLAYER_HERO_REVIVE_FINISH322
playerunitevent EVENT_PLAYER_UNIT_SUMMON153
playerunitevent EVENT_PLAYER_UNIT_DROP_ITEM896
playerunitevent EVENT_PLAYER_UNIT_PICKUP_ITEM428
playerunitevent EVENT_PLAYER_UNIT_USE_ITEM259
playerunitevent EVENT_PLAYER_UNIT_LOADED131
unitevent EVENT_UNIT_DAMAGED149
unitevent EVENT_UNIT_DEATH155
unitevent EVENT_UNIT_DECAY126
unitevent EVENT_UNIT_DETECTED128
unitevent EVENT_UNIT_HIDDEN153
unitevent EVENT_UNIT_SELECTED955
unitevent EVENT_UNIT_DESELECTED266
unitevent EVENT_UNIT_STATE_LIMIT295
unitevent EVENT_UNIT_ACQUIRED_TARGET249
unitevent EVENT_UNIT_TARGET_IN_RANGE240
unitevent EVENT_UNIT_ATTACKED171
unitevent EVENT_UNIT_RESCUED197
unitevent EVENT_UNIT_CONSTRUCT_CANCEL209
unitevent EVENT_UNIT_CONSTRUCT_FINISH153
unitevent EVENT_UNIT_UPGRADE_START170
unitevent EVENT_UNIT_UPGRADE_CANCEL925
unitevent EVENT_UNIT_UPGRADE_FINISH279
unitevent EVENT_UNIT_TRAIN_START205
unitevent EVENT_UNIT_TRAIN_CANCEL350
unitevent EVENT_UNIT_TRAIN_FINISH290
unitevent EVENT_UNIT_RESEARCH_START188
unitevent EVENT_UNIT_RESEARCH_CANCEL175
unitevent EVENT_UNIT_RESEARCH_FINISH272
unitevent EVENT_UNIT_ISSUED_ORDER195
unitevent EVENT_UNIT_ISSUED_POINT_ORDER789
unitevent EVENT_UNIT_ISSUED_TARGET_ORDER199
unitevent EVENT_UNIT_HERO_LEVEL240
unitevent EVENT_UNIT_HERO_SKILL189
unitevent EVENT_UNIT_HERO_REVIVABLE169
unitevent EVENT_UNIT_HERO_REVIVE_START778
unitevent EVENT_UNIT_HERO_REVIVE_CANCEL242
unitevent EVENT_UNIT_HERO_REVIVE_FINISH185
unitevent EVENT_UNIT_SUMMON319
unitevent EVENT_UNIT_DROP_ITEM308
unitevent EVENT_UNIT_PICKUP_ITEM312
unitevent EVENT_UNIT_USE_ITEM290
unitevent EVENT_UNIT_LOADED100
widgetevent EVENT_WIDGET_DEATH233
dialogevent EVENT_DIALOG_BUTTON_CLICK559
dialogevent EVENT_DIALOG_CLICK793
gameevent EVENT_GAME_LOADED331
gameevent EVENT_GAME_TOURNAMENT_FINISH_SOON112
gameevent EVENT_GAME_TOURNAMENT_FINISH_NOW738
gameevent EVENT_GAME_SAVE359
playerevent EVENT_PLAYER_ARROW_LEFT_DOWN227
playerevent EVENT_PLAYER_ARROW_LEFT_UP138
playerevent EVENT_PLAYER_ARROW_RIGHT_DOWN194
playerevent EVENT_PLAYER_ARROW_RIGHT_UP313
playerevent EVENT_PLAYER_ARROW_DOWN_DOWN612
playerevent EVENT_PLAYER_ARROW_DOWN_UP152
playerevent EVENT_PLAYER_ARROW_UP_DOWN231
playerevent EVENT_PLAYER_ARROW_UP_UP928
playerunitevent EVENT_PLAYER_UNIT_SELL521
playerunitevent EVENT_PLAYER_UNIT_CHANGE_OWNER226
playerunitevent EVENT_PLAYER_UNIT_SELL_ITEM128
playerunitevent EVENT_PLAYER_UNIT_SPELL_CHANNEL328
playerunitevent EVENT_PLAYER_UNIT_SPELL_CAST213
playerunitevent EVENT_PLAYER_UNIT_SPELL_EFFECT267
playerunitevent EVENT_PLAYER_UNIT_SPELL_FINISH295
playerunitevent EVENT_PLAYER_UNIT_SPELL_ENDCAST209
playerunitevent EVENT_PLAYER_UNIT_PAWN_ITEM266
unitevent EVENT_UNIT_SELL123
unitevent EVENT_UNIT_CHANGE_OWNER169
unitevent EVENT_UNIT_SELL_ITEM510
unitevent EVENT_UNIT_SPELL_CHANNEL447
unitevent EVENT_UNIT_SPELL_CAST543
unitevent EVENT_UNIT_SPELL_EFFECT152
unitevent EVENT_UNIT_SPELL_FINISH253
unitevent EVENT_UNIT_SPELL_ENDCAST186
unitevent EVENT_UNIT_PAWN_ITEM325
limitop LESS_THAN263
limitop LESS_THAN_OR_EQUAL116
limitop EQUAL186
limitop GREATER_THAN_OR_EQUAL161
limitop GREATER_THAN458
limitop NOT_EQUAL260
unittype UNIT_TYPE_HERO198
unittype UNIT_TYPE_DEAD121
unittype UNIT_TYPE_STRUCTURE273
unittype UNIT_TYPE_FLYING603
unittype UNIT_TYPE_GROUND117
unittype UNIT_TYPE_ATTACKS_FLYING150
unittype UNIT_TYPE_ATTACKS_GROUND209
unittype UNIT_TYPE_MELEE_ATTACKER167
unittype UNIT_TYPE_RANGED_ATTACKER178
unittype UNIT_TYPE_GIANT768
unittype UNIT_TYPE_SUMMONED287
unittype UNIT_TYPE_STUNNED232
unittype UNIT_TYPE_PLAGUED282
unittype UNIT_TYPE_SNARED267
unittype UNIT_TYPE_UNDEAD171
unittype UNIT_TYPE_MECHANICAL193
unittype UNIT_TYPE_PEON162
unittype UNIT_TYPE_SAPPER327
unittype UNIT_TYPE_TOWNHALL693
unittype UNIT_TYPE_ANCIENT165
unittype UNIT_TYPE_TAUREN153
unittype UNIT_TYPE_POISONED276
unittype UNIT_TYPE_POLYMORPHED216
unittype UNIT_TYPE_SLEEPING327
unittype UNIT_TYPE_RESISTANT144
unittype UNIT_TYPE_ETHEREAL314
unittype UNIT_TYPE_MAGIC_IMMUNE166
itemtype ITEM_TYPE_PERMANENT421
itemtype ITEM_TYPE_CHARGED158
itemtype ITEM_TYPE_POWERUP874
itemtype ITEM_TYPE_ARTIFACT153
itemtype ITEM_TYPE_PURCHASABLE742
itemtype ITEM_TYPE_CAMPAIGN314
itemtype ITEM_TYPE_MISCELLANEOUS772
itemtype ITEM_TYPE_UNKNOWN897
itemtype ITEM_TYPE_ANY208
itemtype ITEM_TYPE_TOME288
camerafield CAMERA_FIELD_TARGET_DISTANCE158
camerafield CAMERA_FIELD_FARZ287
camerafield CAMERA_FIELD_ANGLE_OF_ATTACK326
camerafield CAMERA_FIELD_FIELD_OF_VIEW434
camerafield CAMERA_FIELD_ROLL325
camerafield CAMERA_FIELD_ROTATION125
camerafield CAMERA_FIELD_ZOFFSET301
blendmode BLEND_MODE_NONE902
blendmode BLEND_MODE_DONT_CARE111
blendmode BLEND_MODE_KEYALPHA249
blendmode BLEND_MODE_BLEND236
blendmode BLEND_MODE_ADDITIVE225
blendmode BLEND_MODE_MODULATE194
blendmode BLEND_MODE_MODULATE_2X266
raritycontrol RARITY_FREQUENT146
raritycontrol RARITY_RARE266
texmapflags TEXMAP_FLAG_NONE275
texmapflags TEXMAP_FLAG_WRAP_U202
texmapflags TEXMAP_FLAG_WRAP_V110
texmapflags TEXMAP_FLAG_WRAP_UV322
fogstate FOG_OF_WAR_MASKED417
fogstate FOG_OF_WAR_FOGGED276
fogstate FOG_OF_WAR_VISIBLE385
integer CAMERA_MARGIN_LEFT577
integer CAMERA_MARGIN_RIGHT168
integer CAMERA_MARGIN_TOP324
integer CAMERA_MARGIN_BOTTOM243
effecttype EFFECT_TYPE_EFFECT124
effecttype EFFECT_TYPE_TARGET313
effecttype EFFECT_TYPE_CASTER140
effecttype EFFECT_TYPE_SPECIAL318
effecttype EFFECT_TYPE_AREA_EFFECT249
effecttype EFFECT_TYPE_MISSILE114
effecttype EFFECT_TYPE_LIGHTNING279
soundtype SOUND_TYPE_EFFECT198
soundtype SOUND_TYPE_EFFECT_LOOPED194
real bj_PI564
real bj_E239
real bj_CELLWIDTH310
real bj_CLIFFHEIGHT296
real bj_UNIT_FACING166
real bj_RADTODEG319
real bj_DEGTORAD197
real bj_TEXT_DELAY_QUEST152
real bj_TEXT_DELAY_QUESTUPDATE230
real bj_TEXT_DELAY_QUESTDONE237
real bj_TEXT_DELAY_QUESTFAILED200
real bj_TEXT_DELAY_QUESTREQUIREMENT524
real bj_TEXT_DELAY_MISSIONFAILED271
real bj_TEXT_DELAY_ALWAYSHINT592
real bj_TEXT_DELAY_HINT856
real bj_TEXT_DELAY_SECRET169
real bj_TEXT_DELAY_UNITACQUIRED980
real bj_TEXT_DELAY_UNITAVAILABLE326
real bj_TEXT_DELAY_ITEMACQUIRED119
real bj_TEXT_DELAY_WARNING203
real bj_QUEUE_DELAY_QUEST219
real bj_QUEUE_DELAY_HINT331
real bj_QUEUE_DELAY_SECRET762
real bj_HANDICAP_EASY265
real bj_GAME_STARTED_THRESHOLD324
real bj_WAIT_FOR_COND_MIN_INTERVAL147
real bj_POLLED_WAIT_INTERVAL244
real bj_POLLED_WAIT_SKIP_THRESHOLD282
integer bj_MAX_INVENTORY225
integer bj_MAX_PLAYERS403
integer bj_PLAYER_NEUTRAL_VICTIM126
integer bj_PLAYER_NEUTRAL_EXTRA908
integer bj_MAX_PLAYER_SLOTS129
integer bj_MAX_SKELETONS131
integer bj_MAX_STOCK_ITEM_SLOTS213
integer bj_MAX_STOCK_UNIT_SLOTS322
integer bj_MAX_ITEM_LEVEL291
real bj_TOD_DAWN841
real bj_TOD_DUSK116
real bj_MELEE_STARTING_TOD142
integer bj_MELEE_STARTING_GOLD_V0156
integer bj_MELEE_STARTING_GOLD_V1139
integer bj_MELEE_STARTING_LUMBER_V0458
integer bj_MELEE_STARTING_LUMBER_V1305
integer bj_MELEE_STARTING_HERO_TOKENS328
integer bj_MELEE_HERO_LIMIT920
integer bj_MELEE_HERO_TYPE_LIMIT441
real bj_MELEE_MINE_SEARCH_RADIUS233
real bj_MELEE_CLEAR_UNITS_RADIUS151
real bj_MELEE_CRIPPLE_TIMEOUT129
real bj_MELEE_CRIPPLE_MSG_DURATION802
integer bj_MELEE_MAX_TWINKED_HEROES_V0558
integer bj_MELEE_MAX_TWINKED_HEROES_V1977
real bj_CREEP_ITEM_DELAY186
real bj_STOCK_RESTOCK_INITIAL_DELAY194
real bj_STOCK_RESTOCK_INTERVAL192
integer bj_STOCK_MAX_ITERATIONS165
integer bj_MAX_DEST_IN_REGION_EVENTS116
integer bj_CAMERA_MIN_FARZ315
integer bj_CAMERA_DEFAULT_DISTANCE120
integer bj_CAMERA_DEFAULT_FARZ867
integer bj_CAMERA_DEFAULT_AOA216
integer bj_CAMERA_DEFAULT_FOV142
integer bj_CAMERA_DEFAULT_ROLL244
integer bj_CAMERA_DEFAULT_ROTATION230
real bj_RESCUE_PING_TIME214
real bj_NOTHING_SOUND_DURATION284
real bj_TRANSMISSION_PING_TIME162
integer bj_TRANSMISSION_IND_RED263
integer bj_TRANSMISSION_IND_BLUE293
integer bj_TRANSMISSION_IND_GREEN282
integer bj_TRANSMISSION_IND_ALPHA603
real bj_TRANSMISSION_PORT_HANGTIME112
real bj_CINEMODE_INTERFACEFADE274
gamespeed bj_CINEMODE_GAMESPEED503
real bj_CINEMODE_VOLUME_UNITMOVEMENT340
real bj_CINEMODE_VOLUME_UNITSOUNDS116
real bj_CINEMODE_VOLUME_COMBAT120
real bj_CINEMODE_VOLUME_SPELLS288
real bj_CINEMODE_VOLUME_UI873
real bj_CINEMODE_VOLUME_MUSIC116
real bj_CINEMODE_VOLUME_AMBIENTSOUNDS244
real bj_CINEMODE_VOLUME_FIRE292
real bj_SPEECH_VOLUME_UNITMOVEMENT313
real bj_SPEECH_VOLUME_UNITSOUNDS284
real bj_SPEECH_VOLUME_COMBAT281
real bj_SPEECH_VOLUME_SPELLS313
real bj_SPEECH_VOLUME_UI588
real bj_SPEECH_VOLUME_MUSIC184
real bj_SPEECH_VOLUME_AMBIENTSOUNDS326
real bj_SPEECH_VOLUME_FIRE578
real bj_SMARTPAN_TRESHOLD_PAN360
real bj_SMARTPAN_TRESHOLD_SNAP261
integer bj_MAX_QUEUED_TRIGGERS476
real bj_QUEUED_TRIGGER_TIMEOUT262
integer bj_CAMPAIGN_INDEX_T673
integer bj_CAMPAIGN_INDEX_H253
integer bj_CAMPAIGN_INDEX_U825
integer bj_CAMPAIGN_INDEX_O177
integer bj_CAMPAIGN_INDEX_N920
integer bj_CAMPAIGN_INDEX_XN439
integer bj_CAMPAIGN_INDEX_XH286
integer bj_CAMPAIGN_INDEX_XU276
integer bj_CAMPAIGN_INDEX_XO180
integer bj_CAMPAIGN_OFFSET_T450
integer bj_CAMPAIGN_OFFSET_H225
integer bj_CAMPAIGN_OFFSET_U245
integer bj_CAMPAIGN_OFFSET_O200
integer bj_CAMPAIGN_OFFSET_N299
integer bj_CAMPAIGN_OFFSET_XN321
integer bj_CAMPAIGN_OFFSET_XH174
integer bj_CAMPAIGN_OFFSET_XU145
integer bj_CAMPAIGN_OFFSET_XO229
integer bj_MISSION_INDEX_T00129
integer bj_MISSION_INDEX_T01991
integer bj_MISSION_INDEX_H00179
integer bj_MISSION_INDEX_H01106
integer bj_MISSION_INDEX_H02178
integer bj_MISSION_INDEX_H03255
integer bj_MISSION_INDEX_H04332
integer bj_MISSION_INDEX_H05335
integer bj_MISSION_INDEX_H06323
integer bj_MISSION_INDEX_H07100
integer bj_MISSION_INDEX_H08144
integer bj_MISSION_INDEX_H09329
integer bj_MISSION_INDEX_H10763
integer bj_MISSION_INDEX_H11271
integer bj_MISSION_INDEX_U00196
integer bj_MISSION_INDEX_U01155
integer bj_MISSION_INDEX_U02960
integer bj_MISSION_INDEX_U03218
integer bj_MISSION_INDEX_U05290
integer bj_MISSION_INDEX_U07258
integer bj_MISSION_INDEX_U08262
integer bj_MISSION_INDEX_U09252
integer bj_MISSION_INDEX_U10214
integer bj_MISSION_INDEX_U11997
integer bj_MISSION_INDEX_O00122
integer bj_MISSION_INDEX_O01234
integer bj_MISSION_INDEX_O02685
integer bj_MISSION_INDEX_O03170
integer bj_MISSION_INDEX_O04289
integer bj_MISSION_INDEX_O05289
integer bj_MISSION_INDEX_O06203
integer bj_MISSION_INDEX_O07277
integer bj_MISSION_INDEX_O08121
integer bj_MISSION_INDEX_O09182
integer bj_MISSION_INDEX_O10352
integer bj_MISSION_INDEX_N00120
integer bj_MISSION_INDEX_N01293
integer bj_MISSION_INDEX_N02312
integer bj_MISSION_INDEX_N03654
integer bj_MISSION_INDEX_N04181
integer bj_MISSION_INDEX_N05330
integer bj_MISSION_INDEX_N06275
integer bj_MISSION_INDEX_N07805
integer bj_MISSION_INDEX_N08184
integer bj_MISSION_INDEX_N09327
integer bj_MISSION_INDEX_XN00193
integer bj_MISSION_INDEX_XN01216
integer bj_MISSION_INDEX_XN02215
integer bj_MISSION_INDEX_XN03274
integer bj_MISSION_INDEX_XN04334
integer bj_MISSION_INDEX_XN05783
integer bj_MISSION_INDEX_XN06100
integer bj_MISSION_INDEX_XN07245
integer bj_MISSION_INDEX_XN08215
integer bj_MISSION_INDEX_XN09122
integer bj_MISSION_INDEX_XN10178
integer bj_MISSION_INDEX_XH00289
integer bj_MISSION_INDEX_XH01307
integer bj_MISSION_INDEX_XH02243
integer bj_MISSION_INDEX_XH03136
integer bj_MISSION_INDEX_XH04869
integer bj_MISSION_INDEX_XH05320
integer bj_MISSION_INDEX_XH06166
integer bj_MISSION_INDEX_XH07299
integer bj_MISSION_INDEX_XH08982
integer bj_MISSION_INDEX_XH09768
integer bj_MISSION_INDEX_XU00391
integer bj_MISSION_INDEX_XU01748
integer bj_MISSION_INDEX_XU02293
integer bj_MISSION_INDEX_XU03271
integer bj_MISSION_INDEX_XU04219
integer bj_MISSION_INDEX_XU05332
integer bj_MISSION_INDEX_XU06334
integer bj_MISSION_INDEX_XU07314
integer bj_MISSION_INDEX_XU08103
integer bj_MISSION_INDEX_XU09203
integer bj_MISSION_INDEX_XU10154
integer bj_MISSION_INDEX_XU11267
integer bj_MISSION_INDEX_XU12245
integer bj_MISSION_INDEX_XU13342
integer bj_MISSION_INDEX_XO00139
integer bj_CINEMATICINDEX_TOP274
integer bj_CINEMATICINDEX_HOP120
integer bj_CINEMATICINDEX_HED536
integer bj_CINEMATICINDEX_OOP204
integer bj_CINEMATICINDEX_OED507
integer bj_CINEMATICINDEX_UOP332
integer bj_CINEMATICINDEX_UED102
integer bj_CINEMATICINDEX_NOP270
integer bj_CINEMATICINDEX_NED279
integer bj_CINEMATICINDEX_XOP117
integer bj_CINEMATICINDEX_XED466
integer bj_ALLIANCE_UNALLIED909
integer bj_ALLIANCE_UNALLIED_VISION192
integer bj_ALLIANCE_ALLIED430
integer bj_ALLIANCE_ALLIED_VISION160
integer bj_ALLIANCE_ALLIED_UNITS185
integer bj_ALLIANCE_ALLIED_ADVUNITS196
integer bj_ALLIANCE_NEUTRAL861
integer bj_ALLIANCE_NEUTRAL_VISION470
integer bj_KEYEVENTTYPE_DEPRESS214
integer bj_KEYEVENTTYPE_RELEASE305
integer bj_KEYEVENTKEY_LEFT247
integer bj_KEYEVENTKEY_RIGHT130
integer bj_KEYEVENTKEY_DOWN126
integer bj_KEYEVENTKEY_UP197
integer bj_TIMETYPE_ADD699
integer bj_TIMETYPE_SET237
integer bj_TIMETYPE_SUB275
integer bj_CAMERABOUNDS_ADJUST_ADD129
integer bj_CAMERABOUNDS_ADJUST_SUB999
integer bj_QUESTTYPE_REQ_DISCOVERED280
integer bj_QUESTTYPE_REQ_UNDISCOVERED238
integer bj_QUESTTYPE_OPT_DISCOVERED383
integer bj_QUESTTYPE_OPT_UNDISCOVERED478
integer bj_QUESTMESSAGE_DISCOVERED260
integer bj_QUESTMESSAGE_UPDATED235
integer bj_QUESTMESSAGE_COMPLETED305
integer bj_QUESTMESSAGE_FAILED299
integer bj_QUESTMESSAGE_REQUIREMENT330
integer bj_QUESTMESSAGE_MISSIONFAILED122
integer bj_QUESTMESSAGE_ALWAYSHINT128
integer bj_QUESTMESSAGE_HINT323
integer bj_QUESTMESSAGE_SECRET308
integer bj_QUESTMESSAGE_UNITACQUIRED286
integer bj_QUESTMESSAGE_UNITAVAILABLE119
integer bj_QUESTMESSAGE_ITEMACQUIRED282
integer bj_QUESTMESSAGE_WARNING245
integer bj_SORTTYPE_SORTBYVALUE677
integer bj_SORTTYPE_SORTBYPLAYER298
integer bj_SORTTYPE_SORTBYLABEL194
integer bj_CINEFADETYPE_FADEIN698
integer bj_CINEFADETYPE_FADEOUT244
integer bj_CINEFADETYPE_FADEOUTIN244
integer bj_REMOVEBUFFS_POSITIVE281
integer bj_REMOVEBUFFS_NEGATIVE322
integer bj_REMOVEBUFFS_ALL143
integer bj_REMOVEBUFFS_NONTLIFE263
integer bj_BUFF_POLARITY_POSITIVE173
integer bj_BUFF_POLARITY_NEGATIVE122
integer bj_BUFF_POLARITY_EITHER145
integer bj_BUFF_RESIST_MAGIC293
integer bj_BUFF_RESIST_PHYSICAL757
integer bj_BUFF_RESIST_EITHER313
integer bj_BUFF_RESIST_BOTH183
integer bj_HEROSTAT_STR158
integer bj_HEROSTAT_AGI333
integer bj_HEROSTAT_INT168
integer bj_MODIFYMETHOD_ADD922
integer bj_MODIFYMETHOD_SUB147
integer bj_MODIFYMETHOD_SET135
integer bj_UNIT_STATE_METHOD_ABSOLUTE294
integer bj_UNIT_STATE_METHOD_RELATIVE346
integer bj_UNIT_STATE_METHOD_DEFAULTS100
integer bj_UNIT_STATE_METHOD_MAXIMUM179
integer bj_GATEOPERATION_CLOSE208
integer bj_GATEOPERATION_OPEN118
integer bj_GATEOPERATION_DESTROY284
integer bj_GAMECACHE_BOOLEAN165
integer bj_GAMECACHE_INTEGER283
integer bj_GAMECACHE_REAL150
integer bj_GAMECACHE_UNIT125
integer bj_GAMECACHE_STRING320
integer bj_HASHTABLE_BOOLEAN539
integer bj_HASHTABLE_INTEGER280
integer bj_HASHTABLE_REAL905
integer bj_HASHTABLE_STRING196
integer bj_HASHTABLE_HANDLE507
integer bj_ITEM_STATUS_HIDDEN157
integer bj_ITEM_STATUS_OWNED277
integer bj_ITEM_STATUS_INVULNERABLE332
integer bj_ITEM_STATUS_POWERUP894
integer bj_ITEM_STATUS_SELLABLE274
integer bj_ITEM_STATUS_PAWNABLE154
integer bj_ITEMCODE_STATUS_POWERUP174
integer bj_ITEMCODE_STATUS_SELLABLE109
integer bj_ITEMCODE_STATUS_PAWNABLE253
integer bj_MINIMAPPINGSTYLE_SIMPLE326
integer bj_MINIMAPPINGSTYLE_FLASHY136
integer bj_MINIMAPPINGSTYLE_ATTACK730
real bj_CORPSE_MAX_DEATH_TIME808
integer bj_CORPSETYPE_FLESH217
integer bj_CORPSETYPE_BONE355
integer bj_ELEVATOR_BLOCKER_CODE155
integer bj_ELEVATOR_CODE01674
integer bj_ELEVATOR_CODE02236
integer bj_ELEVATOR_WALL_TYPE_ALL273
integer bj_ELEVATOR_WALL_TYPE_EAST300
integer bj_ELEVATOR_WALL_TYPE_NORTH409
integer bj_ELEVATOR_WALL_TYPE_SOUTH128
integer bj_ELEVATOR_WALL_TYPE_WEST131
force bj_FORCE_ALL_PLAYERS221
array force bj_FORCE_PLAYER629
integer bj_MELEE_MAX_TWINKED_HEROES187
rect bj_mapInitialPlayableArea332
rect bj_mapInitialCameraBounds177
integer bj_forLoopAIndex968
integer bj_forLoopBIndex290
integer bj_forLoopAIndexEnd125
integer bj_forLoopBIndexEnd137
boolean bj_slotControlReady715
array boolean bj_slotControlUsed292
array mapcontrol bj_slotControl279
timer bj_gameStartedTimer318
boolean bj_gameStarted865
timer bj_volumeGroupsTimer329
boolean bj_isSinglePlayer595
trigger bj_dncSoundsDay333
trigger bj_dncSoundsNight316
sound bj_dayAmbientSound246
sound bj_nightAmbientSound432
trigger bj_dncSoundsDawn773
trigger bj_dncSoundsDusk201
sound bj_dawnSound138
sound bj_duskSound279
boolean bj_useDawnDuskSounds234
boolean bj_dncIsDaytime488
sound bj_rescueSound266
sound bj_questDiscoveredSound243
sound bj_questUpdatedSound190
sound bj_questCompletedSound262
sound bj_questFailedSound443
sound bj_questHintSound152
sound bj_questSecretSound165
sound bj_questItemAcquiredSound264
sound bj_questWarningSound170
sound bj_victoryDialogSound213
sound bj_defeatDialogSound309
trigger bj_stockItemPurchased163
timer bj_stockUpdateTimer108
array boolean bj_stockAllowedPermanent597
array boolean bj_stockAllowedCharged822
array boolean bj_stockAllowedArtifact440
integer bj_stockPickedItemLevel508
itemtype bj_stockPickedItemType722
trigger bj_meleeVisibilityTrained330
boolean bj_meleeVisibilityIsDay316
boolean bj_meleeGrantHeroItems130
location bj_meleeNearestMineToLoc276
unit bj_meleeNearestMine660
real bj_meleeNearestMineDist165
boolean bj_meleeGameOver228
array boolean bj_meleeDefeated328
array boolean bj_meleeVictoried288
array unit bj_ghoul302
array timer bj_crippledTimer113
array timerdialog bj_crippledTimerWindows137
array boolean bj_playerIsCrippled159
array boolean bj_playerIsExposed112
boolean bj_finishSoonAllExposed595
timerdialog bj_finishSoonTimerDialog100
array integer bj_meleeTwinkedHeroes125
trigger bj_rescueUnitBehavior292
boolean bj_rescueChangeColorUnit280
boolean bj_rescueChangeColorBldg228
timer bj_cineSceneEndingTimer137
sound bj_cineSceneLastSound188
trigger bj_cineSceneBeingSkipped801
gamespeed bj_cineModePriorSpeed173
boolean bj_cineModePriorFogSetting329
boolean bj_cineModePriorMaskSetting205
boolean bj_cineModeAlreadyIn192
boolean bj_cineModePriorDawnDusk212
integer bj_cineModeSavedSeed333
timer bj_cineFadeFinishTimer178
timer bj_cineFadeContinueTimer197
real bj_cineFadeContinueRed179
real bj_cineFadeContinueGreen194
real bj_cineFadeContinueBlue252
real bj_cineFadeContinueTrans135
real bj_cineFadeContinueDuration139
string bj_cineFadeContinueTex317
integer bj_queuedExecTotal129
array trigger bj_queuedExecTriggers254
array boolean bj_queuedExecUseConds305
timer bj_queuedExecTimeoutTimer644
trigger bj_queuedExecTimeout218
integer bj_destInRegionDiesCount223
trigger bj_destInRegionDiesTrig581
integer bj_groupCountUnits248
integer bj_forceCountPlayers462
integer bj_groupEnumTypeId245
player bj_groupEnumOwningPlayer117
group bj_groupAddGroupDest374
group bj_groupRemoveGroupDest276
integer bj_groupRandomConsidered346
unit bj_groupRandomCurrentPick134
group bj_groupLastCreatedDest302
group bj_randomSubGroupGroup971
integer bj_randomSubGroupWant365
integer bj_randomSubGroupTotal663
real bj_randomSubGroupChance188
integer bj_destRandomConsidered742
destructable bj_destRandomCurrentPick239
destructable bj_elevatorWallBlocker126
destructable bj_elevatorNeighbor826
integer bj_itemRandomConsidered303
item bj_itemRandomCurrentPick241
integer bj_forceRandomConsidered315
player bj_forceRandomCurrentPick295
unit bj_makeUnitRescuableUnit682
boolean bj_makeUnitRescuableFlag965
boolean bj_pauseAllUnitsFlag183
location bj_enumDestructableCenter426
real bj_enumDestructableRadius284
playercolor bj_setPlayerTargetColor174
boolean bj_isUnitGroupDeadResult247
boolean bj_isUnitGroupEmptyResult148
boolean bj_isUnitGroupInRectResult114
rect bj_isUnitGroupInRectRect575
boolean bj_changeLevelShowScores219
string bj_changeLevelMapName959
group bj_suspendDecayFleshGroup227
group bj_suspendDecayBoneGroup214
timer bj_delayedSuspendDecayTimer254
trigger bj_delayedSuspendDecayTrig208
integer bj_livingPlayerUnitsTypeId202
widget bj_lastDyingWidget156
integer bj_randDistCount282
array integer bj_randDistID245
array integer bj_randDistChance207
unit bj_lastCreatedUnit227
item bj_lastCreatedItem211
item bj_lastRemovedItem116
unit bj_lastHauntedGoldMine208
destructable bj_lastCreatedDestructable569
group bj_lastCreatedGroup311
fogmodifier bj_lastCreatedFogModifier273
effect bj_lastCreatedEffect124
weathereffect bj_lastCreatedWeatherEffect152
terraindeformation bj_lastCreatedTerrainDeformation177
quest bj_lastCreatedQuest927
questitem bj_lastCreatedQuestItem139
defeatcondition bj_lastCreatedDefeatCondition169
timer bj_lastStartedTimer547
timerdialog bj_lastCreatedTimerDialog308
leaderboard bj_lastCreatedLeaderboard256
multiboard bj_lastCreatedMultiboard393
sound bj_lastPlayedSound283
string bj_lastPlayedMusic191
real bj_lastTransmissionDuration193
gamecache bj_lastCreatedGameCache170
hashtable bj_lastCreatedHashtable245
unit bj_lastLoadedUnit123
button bj_lastCreatedButton271
unit bj_lastReplacedUnit261
texttag bj_lastCreatedTextTag340
lightning bj_lastCreatedLightning682
image bj_lastCreatedImage327
ubersplat bj_lastCreatedUbersplat269
boolexpr filterIssueHauntOrderAtLocBJ113
boolexpr filterEnumDestructablesInCircleBJ827
boolexpr filterGetUnitsInRectOfPlayer331
boolexpr filterGetUnitsOfTypeIdAll302
boolexpr filterGetUnitsOfPlayerAndTypeId188
boolexpr filterMeleeTrainedUnitIsHeroBJ318
boolexpr filterLivingPlayerUnitsOfTypeId329
boolean bj_wantDestroyGroup197
integer DEBUG_LEVEL308
real DEBUG_MSG_DURATION251
integer DUMMY_UNIT_ID127
integer HEIGHT_ENABLER491
integer TREE_RECOGNITION682
real ANIMATION_PERIOD333
real MAX_COLLISION_SIZE101
player DUMMY_PLAYER305
real PI153
real DEGTORAD414
real RADTODEG191
hashtable ht203
array integer Table_nextFree254
integer Table_firstFree195
integer Table_maxIndex330
array integer Table_typeId322
integer triggerData135
rect gg_rct_Choose304
rect gg_rct_Region_002127
rect gg_rct_Region_014128
rect gg_rct_Region_015620
rect gg_rct_Region_022667
rect gg_rct_Region_027527
rect gg_rct_Region_000315
rect gg_rct_Region_001316
rect gg_rct_Region_003283
rect gg_rct_Region_004105
rect gg_rct_Region_005300
rect gg_rct_Region_006169
rect gg_rct_Region_007219
rect gg_rct_Region_008639
rect gg_rct_Region_009900
rect gg_rct_Region_010214
rect gg_rct_Region_011116
rect gg_rct_Region_012156
rect gg_rct_Region_013920
rect gg_rct_Region_016223
rect gg_rct_Region_017263
rect gg_rct_Region_018848
rect gg_rct_Region_024102
rect gg_rct_Region_026179
camerasetup gg_cam_Camera_001999
sound gg_snd_Hint118
sound gg_snd_Rescue163
sound gg_snd_War2IntroMusic233
sound gg_snd_PH1185
trigger gg_trg_GameOptions214
trigger gg_trg_GH168
trigger gg_trg_GameInit139
trigger gg_trg_GameLoop154
trigger gg_trg_Entity791
trigger gg_trg_EntityManagement239
trigger gg_trg_BasicFunctions166
trigger gg_trg_ObjectSystem265
trigger gg_trg_ClearRegion298
trigger gg_trg_SaveLoadHero197
trigger gg_trg_CustomBars264
trigger gg_trg_BigNum551
trigger gg_trg_Save_System234
trigger gg_trg_Commands161
trigger gg_trg_Sounder825
trigger gg_trg_Teleporter272
trigger gg_trg_Waypoint988
trigger gg_trg_Texter819
trigger gg_trg_Jumper225
trigger gg_trg_Spinner306
trigger gg_trg_Pointer241
trigger gg_trg_Vortex173
trigger gg_trg_Executer333
trigger gg_trg_Doors134
trigger gg_trg_UnitCreator267
trigger gg_trg_Booster277
trigger gg_trg_Terrain_Blocker250
trigger gg_trg_TerrainChanger190
trigger gg_trg_Track309
trigger gg_trg_Fountain150
trigger gg_trg_Powernode158
trigger gg_trg_BuildBlockNew182
trigger gg_trg_Trees746
trigger gg_trg_Obstacles313
trigger gg_trg_RectData186
trigger gg_trg_ClaimRegion193
trigger gg_trg_Escaper292
trigger gg_trg_Revive171
trigger gg_trg_Spawn192
trigger gg_trg_InitMatrix187
trigger gg_trg_ChangeTerrain648
trigger gg_trg_Options162
trigger gg_trg_MoveSpeed326
trigger gg_trg_Attackspeed239
trigger gg_trg_Kill_Unit423
trigger gg_trg_Invisibility310
trigger gg_trg_Size286
trigger gg_trg_Tank_Remover101
trigger gg_trg_Allow869
trigger gg_trg_KillCommand327
trigger gg_trg_InstantBuild226
trigger gg_trg_Remove_items226
trigger gg_trg_Music192
trigger gg_trg_Items116
trigger gg_trg_Weather335
trigger gg_trg_Swap_Menus892
trigger gg_trg_SpellbookPages154
trigger gg_trg_Slidesystem192
trigger gg_trg_KillerDoodads209
trigger gg_trg_Escaper_Killers140
trigger gg_trg_SetKeyPos311
trigger gg_trg_Table500
trigger gg_trg_ConsistentArray185
trigger gg_trg_HandleCounter267
trigger gg_trg_GroupLine141
trigger gg_trg_BoundSentinel117
trigger gg_trg_CheckXY240
trigger gg_trg_ExText983
trigger gg_trg_AutoFly725
trigger gg_trg_Hero_Choose_System296
trigger gg_trg_SoundUtils598
trigger gg_trg_Stack238
trigger gg_trg_TimerUtils328
trigger gg_trg_GroupUtils269
trigger gg_trg_PowerupSentinel134
trigger gg_trg_ParabolaZ746
trigger gg_trg_OptMath130
trigger gg_trg_Power_of_Stagnancy283
trigger gg_trg_AddEventsAndWalk161
trigger gg_trg_StartVis225
trigger gg_trg_Constants764
trigger gg_trg_Multiboard711
trigger gg_trg_Player173
trigger gg_trg_Init126
trigger gg_trg_Intro107
trigger gg_trg_Forum535
trigger gg_trg_TerrainUtils777
unit gg_unit_h015_0018237
unit gg_unit_h015_0019185
unit gg_unit_h015_0020113
unit gg_unit_n00C_0057564
unit gg_unit_n00C_0058369
unit gg_unit_n00C_0061868
unit gg_unit_h01H_0080330
unit gg_unit_h01H_0081117
unit gg_unit_h01H_0104182
unit gg_unit_n00D_0120178
unit gg_unit_n00D_0121149
unit gg_unit_n00D_0122320
unit gg_unit_n00D_0123100
unit gg_unit_n00D_0124280
unit gg_unit_n00D_0125963
unit gg_unit_h01H_0127180
unit gg_unit_h01H_0128440
unit gg_unit_n00C_0141201
unit gg_unit_n009_0143529
unit gg_unit_h018_0148303
unit gg_unit_h018_0149163
unit gg_unit_h018_0150155
unit gg_unit_h018_0151157
unit gg_unit_n009_0152988
unit gg_unit_n009_0153111
unit gg_unit_n009_0154180
unit gg_unit_n009_0155316
unit gg_unit_h019_0157141
unit gg_unit_h019_0158812
unit gg_unit_h019_0159181
unit gg_unit_h019_0160165
unit gg_unit_u004_0161207
unit gg_unit_u004_0162455
unit gg_unit_u004_0163301
unit gg_unit_u004_0164177
unit gg_unit_n006_0165303
unit gg_unit_n006_0166175
unit gg_unit_n006_0167170
unit gg_unit_n006_0168300
unit gg_unit_n006_0169153
unit gg_unit_n006_0175847
unit gg_unit_n009_0177372
unit gg_unit_n009_0178168
unit gg_unit_n01D_0186251
unit gg_unit_n01D_0187641
unit gg_unit_n006_0188925
unit gg_unit_n006_0189105
unit gg_unit_n006_0190435
unit gg_unit_n00C_0202150
unit gg_unit_n009_0203251
unit gg_unit_n009_0204323
unit gg_unit_n009_0205219
unit gg_unit_n00E_0210189
unit gg_unit_n00E_0211458
unit gg_unit_h01M_0212558
unit gg_unit_n00E_0213240
unit gg_unit_n00E_0214334
unit gg_unit_n00E_0215607
unit gg_unit_n00E_0216602
unit gg_unit_n00E_0217323
unit gg_unit_n00E_0218117
unit gg_unit_n00E_0219273
unit gg_unit_h01I_0220215
unit gg_unit_n00E_0221167
unit gg_unit_n00E_0222341
unit gg_unit_h01I_0225320
unit gg_unit_n00C_0234104
unit gg_unit_h01M_0257307
unit gg_unit_h01M_0258170
unit gg_unit_h01M_0259192
unit gg_unit_n00E_0260247
unit gg_unit_n00E_0261284
unit gg_unit_h01I_0262194
unit gg_unit_n00E_0263222
unit gg_unit_n00E_0264861
unit gg_unit_n00E_0265225
unit gg_unit_h01I_0266223
unit gg_unit_n00E_0267525
unit gg_unit_n00E_0268167
unit gg_unit_n00E_0269123
unit gg_unit_n00E_0270173
unit gg_unit_n00E_0271263
unit gg_unit_n00E_0272230
unit gg_unit_n00E_0273212
unit gg_unit_n00E_0274214
unit gg_unit_n00E_0275189
unit gg_unit_n00E_0276325
unit gg_unit_n00E_0277263
unit gg_unit_n00E_0278202
unit gg_unit_h01I_0280398


function initGlobals() returns void{ 
    Table_firstFree195 = 0
    Table_maxIndex330 = 0
    gg_rct_Choose304 = null
    gg_rct_Region_002127 = null
    gg_rct_Region_014128 = null
    gg_rct_Region_015620 = null
    gg_rct_Region_022667 = null
    gg_rct_Region_027527 = null
    gg_rct_Region_000315 = null
    gg_rct_Region_001316 = null
    gg_rct_Region_003283 = null
    gg_rct_Region_004105 = null
    gg_rct_Region_005300 = null
    gg_rct_Region_006169 = null
    gg_rct_Region_007219 = null
    gg_rct_Region_008639 = null
    gg_rct_Region_009900 = null
    gg_rct_Region_010214 = null
    gg_rct_Region_011116 = null
    gg_rct_Region_012156 = null
    gg_rct_Region_013920 = null
    gg_rct_Region_016223 = null
    gg_rct_Region_017263 = null
    gg_rct_Region_018848 = null
    gg_rct_Region_024102 = null
    gg_rct_Region_026179 = null
    gg_cam_Camera_001999 = null
    gg_snd_Hint118 = null
    gg_snd_Rescue163 = null
    gg_snd_War2IntroMusic233 = null
    gg_snd_PH1185 = null
    gg_trg_GameOptions214 = null
    gg_trg_GH168 = null
    gg_trg_GameInit139 = null
    gg_trg_GameLoop154 = null
    gg_trg_Entity791 = null
    gg_trg_EntityManagement239 = null
    gg_trg_BasicFunctions166 = null
    gg_trg_ObjectSystem265 = null
    gg_trg_ClearRegion298 = null
    gg_trg_SaveLoadHero197 = null
    gg_trg_CustomBars264 = null
    gg_trg_BigNum551 = null
    gg_trg_Save_System234 = null
    gg_trg_Commands161 = null
    gg_trg_Sounder825 = null
    gg_trg_Teleporter272 = null
    gg_trg_Waypoint988 = null
    gg_trg_Texter819 = null
    gg_trg_Jumper225 = null
    gg_trg_Spinner306 = null
    gg_trg_Pointer241 = null
    gg_trg_Vortex173 = null
    gg_trg_Executer333 = null
    gg_trg_Doors134 = null
    gg_trg_UnitCreator267 = null
    gg_trg_Booster277 = null
    gg_trg_Terrain_Blocker250 = null
    gg_trg_TerrainChanger190 = null
    gg_trg_Track309 = null
    gg_trg_Fountain150 = null
    gg_trg_Powernode158 = null
    gg_trg_BuildBlockNew182 = null
    gg_trg_Trees746 = null
    gg_trg_Obstacles313 = null
    gg_trg_RectData186 = null
    gg_trg_ClaimRegion193 = null
    gg_trg_Escaper292 = null
    gg_trg_Revive171 = null
    gg_trg_Spawn192 = null
    gg_trg_InitMatrix187 = null
    gg_trg_ChangeTerrain648 = null
    gg_trg_Options162 = null
    gg_trg_MoveSpeed326 = null
    gg_trg_Attackspeed239 = null
    gg_trg_Kill_Unit423 = null
    gg_trg_Invisibility310 = null
    gg_trg_Size286 = null
    gg_trg_Tank_Remover101 = null
    gg_trg_Allow869 = null
    gg_trg_KillCommand327 = null
    gg_trg_InstantBuild226 = null
    gg_trg_Remove_items226 = null
    gg_trg_Music192 = null
    gg_trg_Items116 = null
    gg_trg_Weather335 = null
    gg_trg_Swap_Menus892 = null
    gg_trg_SpellbookPages154 = null
    gg_trg_Slidesystem192 = null
    gg_trg_KillerDoodads209 = null
    gg_trg_Escaper_Killers140 = null
    gg_trg_SetKeyPos311 = null
    gg_trg_Table500 = null
    gg_trg_ConsistentArray185 = null
    gg_trg_HandleCounter267 = null
    gg_trg_GroupLine141 = null
    gg_trg_BoundSentinel117 = null
    gg_trg_CheckXY240 = null
    gg_trg_ExText983 = null
    gg_trg_AutoFly725 = null
    gg_trg_Hero_Choose_System296 = null
    gg_trg_SoundUtils598 = null
    gg_trg_Stack238 = null
    gg_trg_TimerUtils328 = null
    gg_trg_GroupUtils269 = null
    gg_trg_PowerupSentinel134 = null
    gg_trg_ParabolaZ746 = null
    gg_trg_OptMath130 = null
    gg_trg_Power_of_Stagnancy283 = null
    gg_trg_AddEventsAndWalk161 = null
    gg_trg_StartVis225 = null
    gg_trg_Constants764 = null
    gg_trg_Multiboard711 = null
    gg_trg_Player173 = null
    gg_trg_Init126 = null
    gg_trg_Intro107 = null
    gg_trg_Forum535 = null
    gg_trg_TerrainUtils777 = null
    gg_unit_h015_0018237 = null
    gg_unit_h015_0019185 = null
    gg_unit_h015_0020113 = null
    gg_unit_n00C_0057564 = null
    gg_unit_n00C_0058369 = null
    gg_unit_n00C_0061868 = null
    gg_unit_h01H_0080330 = null
    gg_unit_h01H_0081117 = null
    gg_unit_h01H_0104182 = null
    gg_unit_n00D_0120178 = null
    gg_unit_n00D_0121149 = null
    gg_unit_n00D_0122320 = null
    gg_unit_n00D_0123100 = null
    gg_unit_n00D_0124280 = null
    gg_unit_n00D_0125963 = null
    gg_unit_h01H_0127180 = null
    gg_unit_h01H_0128440 = null
    gg_unit_n00C_0141201 = null
    gg_unit_n009_0143529 = null
    gg_unit_h018_0148303 = null
    gg_unit_h018_0149163 = null
    gg_unit_h018_0150155 = null
    gg_unit_h018_0151157 = null
    gg_unit_n009_0152988 = null
    gg_unit_n009_0153111 = null
    gg_unit_n009_0154180 = null
    gg_unit_n009_0155316 = null
    gg_unit_h019_0157141 = null
    gg_unit_h019_0158812 = null
    gg_unit_h019_0159181 = null
    gg_unit_h019_0160165 = null
    gg_unit_u004_0161207 = null
    gg_unit_u004_0162455 = null
    gg_unit_u004_0163301 = null
    gg_unit_u004_0164177 = null
    gg_unit_n006_0165303 = null
    gg_unit_n006_0166175 = null
    gg_unit_n006_0167170 = null
    gg_unit_n006_0168300 = null
    gg_unit_n006_0169153 = null
    gg_unit_n006_0175847 = null
    gg_unit_n009_0177372 = null
    gg_unit_n009_0178168 = null
    gg_unit_n01D_0186251 = null
    gg_unit_n01D_0187641 = null
    gg_unit_n006_0188925 = null
    gg_unit_n006_0189105 = null
    gg_unit_n006_0190435 = null
    gg_unit_n00C_0202150 = null
    gg_unit_n009_0203251 = null
    gg_unit_n009_0204323 = null
    gg_unit_n009_0205219 = null
    gg_unit_n00E_0210189 = null
    gg_unit_n00E_0211458 = null
    gg_unit_h01M_0212558 = null
    gg_unit_n00E_0213240 = null
    gg_unit_n00E_0214334 = null
    gg_unit_n00E_0215607 = null
    gg_unit_n00E_0216602 = null
    gg_unit_n00E_0217323 = null
    gg_unit_n00E_0218117 = null
    gg_unit_n00E_0219273 = null
    gg_unit_h01I_0220215 = null
    gg_unit_n00E_0221167 = null
    gg_unit_n00E_0222341 = null
    gg_unit_h01I_0225320 = null
    gg_unit_n00C_0234104 = null
    gg_unit_h01M_0257307 = null
    gg_unit_h01M_0258170 = null
    gg_unit_h01M_0259192 = null
    gg_unit_n00E_0260247 = null
    gg_unit_n00E_0261284 = null
    gg_unit_h01I_0262194 = null
    gg_unit_n00E_0263222 = null
    gg_unit_n00E_0264861 = null
    gg_unit_n00E_0265225 = null
    gg_unit_h01I_0266223 = null
    gg_unit_n00E_0267525 = null
    gg_unit_n00E_0268167 = null
    gg_unit_n00E_0269123 = null
    gg_unit_n00E_0270173 = null
    gg_unit_n00E_0271263 = null
    gg_unit_n00E_0272230 = null
    gg_unit_n00E_0273212 = null
    gg_unit_n00E_0274214 = null
    gg_unit_n00E_0275189 = null
    gg_unit_n00E_0276325 = null
    gg_unit_n00E_0277263 = null
    gg_unit_n00E_0278202 = null
    gg_unit_h01I_0280398 = null
}


function WidgetDropItem(widget inWidget169, integer inItemID134) returns item{ 
    local real x200
    local real y178
    local real radius124
    local real widgetX114
    local real widgetY262
    null
    null
    radius124 = 32.
    null
    null
    if (inItemID134 == (- 1)){
        return null
    } else {
    }
    widgetX114 = GetWidgetX(inWidget169)
    widgetY262 = GetWidgetY(inWidget169)
    x200 = GetRandomReal((widgetX114 - radius124), (widgetX114 + radius124))
    y178 = GetRandomReal((widgetY262 - radius124), (widgetY262 + radius124))
    return CreateItem(inItemID134, x200, y178)
}


function GetWidgetX(widget whichWidget287) returns real{ 
}


function GetWidgetY(widget whichWidget108) returns real{ 
}


function GetRandomReal(real lowBound275, real highBound596) returns real{ 
}


function CreateItem(integer itemid182, real x325, real y124) returns item{ 
}


function UnitDropItem(unit inUnit326, integer inItemID178) returns item{ 
    local real x706
    local real y150
    local real radius473
    local real unitX322
    local real unitY251
    local item droppedItem693
    null
    null
    radius473 = 32.
    null
    null
    null
    if (inItemID178 == (- 1)){
        return null
    } else {
    }
    unitX322 = GetUnitX(inUnit326)
    unitY251 = GetUnitY(inUnit326)
    x706 = GetRandomReal((unitX322 - radius473), (unitX322 + radius473))
    y150 = GetRandomReal((unitY251 - radius473), (unitY251 + radius473))
    droppedItem693 = CreateItem(inItemID178, x706, y150)
    SetItemDropID(droppedItem693, GetUnitTypeId(inUnit326))
    UpdateStockAvailability(droppedItem693)
    return droppedItem693
}


function GetUnitX(unit whichUnit256) returns real{ 
}


function GetUnitY(unit whichUnit285) returns real{ 
}


function GetUnitTypeId(unit whichUnit288) returns integer{ 
}


function SetItemDropID(item whichItem200, integer unitId186) returns void{ 
}


function UpdateStockAvailability(item whichItem213) returns void{ 
    local itemtype iType580
    local integer iLevel232
    iType580 = GetItemType(whichItem213)
    iLevel232 = GetItemLevel(whichItem213)
    if (iType580 == ITEM_TYPE_PERMANENT421){
        bj_stockAllowedPermanent597[iLevel232] = true
    } else {
        if (iType580 == ITEM_TYPE_CHARGED158){
            bj_stockAllowedCharged822[iLevel232] = true
        } else {
            if (iType580 == ITEM_TYPE_ARTIFACT153){
                bj_stockAllowedArtifact440[iLevel232] = true
            } else {
            }
        }
    }
}


function RandomDistChoose() returns integer{ 
    local integer sum290
    local integer chance137
    local integer index139
    local integer foundID123
    local boolean done235
    sum290 = 0
    chance137 = 0
    null
    foundID123 = (- 1)
    null
    if (bj_randDistCount282 == 0){
        return (- 1)
    } else {
    }
    index139 = 0
    loop {
        sum290 = (sum290 + bj_randDistChance207[index139])
        index139 = (index139 + 1)
        exitwhen (index139 == bj_randDistCount282)
    }
    chance137 = GetRandomInt(1, sum290)
    index139 = 0
    sum290 = 0
    done235 = false
    loop {
        sum290 = (sum290 + bj_randDistChance207[index139])
        if (chance137 <= sum290){
            foundID123 = bj_randDistID245[index139]
            done235 = true
        } else {
        }
        index139 = (index139 + 1)
        if (index139 == bj_randDistCount282){
            done235 = true
        } else {
        }
        exitwhen (done235 == true)
    }
    return foundID123
}


function GetRandomInt(integer lowBound288, integer highBound747) returns integer{ 
}


function RandomDistAddItem(integer inID438, integer inChance243) returns void{ 
    bj_randDistID245[bj_randDistCount282] = inID438
    bj_randDistChance207[bj_randDistCount282] = inChance243
    bj_randDistCount282 = (bj_randDistCount282 + 1)
}


function RandomDistReset() returns void{ 
    bj_randDistCount282 = 0
}


function InitBlizzard() returns void{ 
    ConfigureNeutralVictim()
    InitBlizzardGlobals()
    InitQueuedTriggers()
    InitRescuableBehaviorBJ()
    InitDNCSounds()
    InitMapRects()
    InitSummonableCaps()
    InitNeutralBuildings()
    DetectGameStarted()
}


function ConfigureNeutralVictim() returns void{ 
    local integer index221
    local player indexPlayer161
    local player neutralVictim318
    null
    null
    neutralVictim318 = Player(bj_PLAYER_NEUTRAL_VICTIM126)
    index221 = 0
    loop {
        indexPlayer161 = Player(index221)
        SetPlayerAlliance(neutralVictim318, indexPlayer161, ALLIANCE_PASSIVE213, true)
        SetPlayerAlliance(indexPlayer161, neutralVictim318, ALLIANCE_PASSIVE213, false)
        index221 = (index221 + 1)
        exitwhen (index221 == bj_MAX_PLAYERS403)
    }
    indexPlayer161 = Player(PLAYER_NEUTRAL_AGGRESSIVE139)
    SetPlayerAlliance(neutralVictim318, indexPlayer161, ALLIANCE_PASSIVE213, true)
    SetPlayerAlliance(indexPlayer161, neutralVictim318, ALLIANCE_PASSIVE213, true)
    SetPlayerState(neutralVictim318, PLAYER_STATE_GIVES_BOUNTY278, 0)
}


function InitBlizzardGlobals() returns void{ 
    local integer index145
    local integer userControlledPlayers217
    local version v243
    null
    null
    null
    filterIssueHauntOrderAtLocBJ113 = Filter(function IssueHauntOrderAtLocBJFilter)
    filterEnumDestructablesInCircleBJ827 = Filter(function EnumDestructablesInCircleBJFilter)
    filterGetUnitsInRectOfPlayer331 = Filter(function GetUnitsInRectOfPlayerFilter)
    filterGetUnitsOfTypeIdAll302 = Filter(function GetUnitsOfTypeIdAllFilter)
    filterGetUnitsOfPlayerAndTypeId188 = Filter(function GetUnitsOfPlayerAndTypeIdFilter)
    filterMeleeTrainedUnitIsHeroBJ318 = Filter(function MeleeTrainedUnitIsHeroBJFilter)
    filterLivingPlayerUnitsOfTypeId329 = Filter(function LivingPlayerUnitsOfTypeIdFilter)
    index145 = 0
    loop {
        exitwhen (index145 == bj_MAX_PLAYER_SLOTS129)
        bj_FORCE_PLAYER629[index145] = CreateForce()
        ForceAddPlayer(bj_FORCE_PLAYER629[index145], Player(index145))
        index145 = (index145 + 1)
    }
    bj_FORCE_ALL_PLAYERS221 = CreateForce()
    ForceEnumPlayers(bj_FORCE_ALL_PLAYERS221, null)
    bj_cineModePriorSpeed173 = GetGameSpeed()
    bj_cineModePriorFogSetting329 = IsFogEnabled()
    bj_cineModePriorMaskSetting205 = IsFogMaskEnabled()
    index145 = 0
    loop {
        exitwhen (index145 >= bj_MAX_QUEUED_TRIGGERS476)
        bj_queuedExecTriggers254[index145] = null
        bj_queuedExecUseConds305[index145] = false
        index145 = (index145 + 1)
    }
    bj_isSinglePlayer595 = false
    userControlledPlayers217 = 0
    index145 = 0
    loop {
        exitwhen (index145 >= bj_MAX_PLAYERS403)
        if ((GetPlayerController(Player(index145)) == MAP_CONTROL_USER160) and (GetPlayerSlotState(Player(index145)) == PLAYER_SLOT_STATE_PLAYING211)){
            userControlledPlayers217 = (userControlledPlayers217 + 1)
        } else {
        }
        index145 = (index145 + 1)
    }
    bj_isSinglePlayer595 = (userControlledPlayers217 == 1)
    bj_rescueSound266 = CreateSoundFromLabel("Rescue", false, false, false, 10000, 10000)
    bj_questDiscoveredSound243 = CreateSoundFromLabel("QuestNew", false, false, false, 10000, 10000)
    bj_questUpdatedSound190 = CreateSoundFromLabel("QuestUpdate", false, false, false, 10000, 10000)
    bj_questCompletedSound262 = CreateSoundFromLabel("QuestCompleted", false, false, false, 10000, 10000)
    bj_questFailedSound443 = CreateSoundFromLabel("QuestFailed", false, false, false, 10000, 10000)
    bj_questHintSound152 = CreateSoundFromLabel("Hint", false, false, false, 10000, 10000)
    bj_questSecretSound165 = CreateSoundFromLabel("SecretFound", false, false, false, 10000, 10000)
    bj_questItemAcquiredSound264 = CreateSoundFromLabel("ItemReward", false, false, false, 10000, 10000)
    bj_questWarningSound170 = CreateSoundFromLabel("Warning", false, false, false, 10000, 10000)
    bj_victoryDialogSound213 = CreateSoundFromLabel("QuestCompleted", false, false, false, 10000, 10000)
    bj_defeatDialogSound309 = CreateSoundFromLabel("QuestFailed", false, false, false, 10000, 10000)
    DelayedSuspendDecayCreate()
    v243 = VersionGet()
    if (v243 == VERSION_REIGN_OF_CHAOS265){
        bj_MELEE_MAX_TWINKED_HEROES187 = bj_MELEE_MAX_TWINKED_HEROES_V0558
    } else {
        bj_MELEE_MAX_TWINKED_HEROES187 = bj_MELEE_MAX_TWINKED_HEROES_V1977
    }
}


function InitQueuedTriggers() returns void{ 
    bj_queuedExecTimeout218 = CreateTrigger()
    TriggerRegisterTimerExpireEvent(bj_queuedExecTimeout218, bj_queuedExecTimeoutTimer644)
    TriggerAddAction(bj_queuedExecTimeout218, function QueuedTriggerDoneBJ)
}


function InitRescuableBehaviorBJ() returns void{ 
    local integer index594
    null
    index594 = 0
    loop {
        if (GetPlayerController(Player(index594)) == MAP_CONTROL_RESCUABLE264){
            TryInitRescuableTriggersBJ()
            return %nothing%
        } else {
        }
        index594 = (index594 + 1)
        exitwhen (index594 == bj_MAX_PLAYERS403)
    }
}


function InitDNCSounds() returns void{ 
    bj_dawnSound138 = CreateSoundFromLabel("RoosterSound", false, false, false, 10000, 10000)
    bj_duskSound279 = CreateSoundFromLabel("WolfSound", false, false, false, 10000, 10000)
    bj_dncSoundsDawn773 = CreateTrigger()
    TriggerRegisterGameStateEvent(bj_dncSoundsDawn773, GAME_STATE_TIME_OF_DAY906, EQUAL186, bj_TOD_DAWN841)
    TriggerAddAction(bj_dncSoundsDawn773, function SetDNCSoundsDawn)
    bj_dncSoundsDusk201 = CreateTrigger()
    TriggerRegisterGameStateEvent(bj_dncSoundsDusk201, GAME_STATE_TIME_OF_DAY906, EQUAL186, bj_TOD_DUSK116)
    TriggerAddAction(bj_dncSoundsDusk201, function SetDNCSoundsDusk)
    bj_dncSoundsDay333 = CreateTrigger()
    TriggerRegisterGameStateEvent(bj_dncSoundsDay333, GAME_STATE_TIME_OF_DAY906, GREATER_THAN_OR_EQUAL161, bj_TOD_DAWN841)
    TriggerRegisterGameStateEvent(bj_dncSoundsDay333, GAME_STATE_TIME_OF_DAY906, LESS_THAN263, bj_TOD_DUSK116)
    TriggerAddAction(bj_dncSoundsDay333, function SetDNCSoundsDay)
    bj_dncSoundsNight316 = CreateTrigger()
    TriggerRegisterGameStateEvent(bj_dncSoundsNight316, GAME_STATE_TIME_OF_DAY906, LESS_THAN263, bj_TOD_DAWN841)
    TriggerRegisterGameStateEvent(bj_dncSoundsNight316, GAME_STATE_TIME_OF_DAY906, GREATER_THAN_OR_EQUAL161, bj_TOD_DUSK116)
    TriggerAddAction(bj_dncSoundsNight316, function SetDNCSoundsNight)
}


function InitMapRects() returns void{ 
    bj_mapInitialPlayableArea332 = Rect((GetCameraBoundMinX() - GetCameraMargin(CAMERA_MARGIN_LEFT577)), (GetCameraBoundMinY() - GetCameraMargin(CAMERA_MARGIN_BOTTOM243)), (GetCameraBoundMaxX() + GetCameraMargin(CAMERA_MARGIN_RIGHT168)), (GetCameraBoundMaxY() + GetCameraMargin(CAMERA_MARGIN_TOP324)))
    bj_mapInitialCameraBounds177 = GetCurrentCameraBoundsMapRectBJ()
}


function InitSummonableCaps() returns void{ 
    local integer index150
    null
    index150 = 0
    loop {
        if (not GetPlayerTechResearched(Player(index150), 1382576756, true)){
            SetPlayerTechMaxAllowed(Player(index150), 1752331380, 0)
        } else {
        }
        if (not GetPlayerTechResearched(Player(index150), 1383031403, true)){
            SetPlayerTechMaxAllowed(Player(index150), 1869898347, 0)
        } else {
        }
        SetPlayerTechMaxAllowed(Player(index150), 1970498405, bj_MAX_SKELETONS131)
        index150 = (index150 + 1)
        exitwhen (index150 == bj_MAX_PLAYERS403)
    }
}


function InitNeutralBuildings() returns void{ 
    local integer iLevel191
    null
    iLevel191 = 0
    loop {
        bj_stockAllowedPermanent597[iLevel191] = false
        bj_stockAllowedCharged822[iLevel191] = false
        bj_stockAllowedArtifact440[iLevel191] = false
        iLevel191 = (iLevel191 + 1)
        exitwhen (iLevel191 > bj_MAX_ITEM_LEVEL291)
    }
    SetAllItemTypeSlots(bj_MAX_STOCK_ITEM_SLOTS213)
    SetAllUnitTypeSlots(bj_MAX_STOCK_UNIT_SLOTS322)
    bj_stockUpdateTimer108 = CreateTimer()
    TimerStart(bj_stockUpdateTimer108, bj_STOCK_RESTOCK_INITIAL_DELAY194, false, function StartStockUpdates)
    bj_stockItemPurchased163 = CreateTrigger()
    TriggerRegisterPlayerUnitEvent(bj_stockItemPurchased163, Player(PLAYER_NEUTRAL_PASSIVE452), EVENT_PLAYER_UNIT_SELL_ITEM128, null)
    TriggerAddAction(bj_stockItemPurchased163, function RemovePurchasedItem)
}


function DetectGameStarted() returns void{ 
    bj_gameStartedTimer318 = CreateTimer()
    TimerStart(bj_gameStartedTimer318, bj_GAME_STARTED_THRESHOLD324, false, function MarkGameStarted)
}


function CreateTimer() returns timer{ 
}


function MarkGameStarted() returns void{ 
    bj_gameStarted865 = true
    DestroyTimer(bj_gameStartedTimer318)
}


function TimerStart(timer whichTimer662, real timeout919, boolean periodic118, code handlerFunc363) returns void{ 
}


function DestroyTimer(timer whichTimer171) returns void{ 
}


function SetAllItemTypeSlots(integer slots118) returns void{ 
}


function SetAllUnitTypeSlots(integer slots281) returns void{ 
}


function StartStockUpdates() returns void{ 
    PerformStockUpdates()
    TimerStart(bj_stockUpdateTimer108, bj_STOCK_RESTOCK_INTERVAL192, true, function PerformStockUpdates)
}


function CreateTrigger() returns trigger{ 
}


function Player(integer number214) returns player{ 
}


function TriggerRegisterPlayerUnitEvent(trigger whichTrigger223, player whichPlayer121, playerunitevent whichPlayerUnitEvent199, boolexpr filter247) returns event{ 
}


function RemovePurchasedItem() returns void{ 
    RemoveItemFromStock(GetSellingUnit(), GetItemTypeId(GetSoldItem()))
}


function TriggerAddAction(trigger whichTrigger246, code actionFunc284) returns triggeraction{ 
}


function GetSellingUnit() returns unit{ 
}


function GetSoldItem() returns item{ 
}


function GetItemTypeId(item i319) returns integer{ 
}


function RemoveItemFromStock(unit whichUnit891, integer itemId499) returns void{ 
}


function PerformStockUpdates() returns void{ 
    local integer pickedItemId705
    local itemtype pickedItemType270
    local integer pickedItemLevel142
    local integer allowedCombinations122
    local integer iLevel190
    null
    null
    pickedItemLevel142 = 0
    allowedCombinations122 = 0
    null
    iLevel190 = 1
    loop {
        if bj_stockAllowedPermanent597[iLevel190]{
            allowedCombinations122 = (allowedCombinations122 + 1)
            if (GetRandomInt(1, allowedCombinations122) == 1){
                pickedItemType270 = ITEM_TYPE_PERMANENT421
                pickedItemLevel142 = iLevel190
            } else {
            }
        } else {
        }
        if bj_stockAllowedCharged822[iLevel190]{
            allowedCombinations122 = (allowedCombinations122 + 1)
            if (GetRandomInt(1, allowedCombinations122) == 1){
                pickedItemType270 = ITEM_TYPE_CHARGED158
                pickedItemLevel142 = iLevel190
            } else {
            }
        } else {
        }
        if bj_stockAllowedArtifact440[iLevel190]{
            allowedCombinations122 = (allowedCombinations122 + 1)
            if (GetRandomInt(1, allowedCombinations122) == 1){
                pickedItemType270 = ITEM_TYPE_ARTIFACT153
                pickedItemLevel142 = iLevel190
            } else {
            }
        } else {
        }
        iLevel190 = (iLevel190 + 1)
        exitwhen (iLevel190 > bj_MAX_ITEM_LEVEL291)
    }
    if (allowedCombinations122 == 0){
        return %nothing%
    } else {
    }
    UpdateEachStockBuilding(pickedItemType270, pickedItemLevel142)
}


function UpdateEachStockBuilding(itemtype iType253, integer iLevel303) returns void{ 
    local group g208
    null
    bj_stockPickedItemType722 = iType253
    bj_stockPickedItemLevel508 = iLevel303
    g208 = CreateGroup()
    GroupEnumUnitsOfType(g208, "marketplace", null)
    ForGroup(g208, function UpdateEachStockBuildingEnum)
    DestroyGroup(g208)
}


function CreateGroup() returns group{ 
}


function GroupEnumUnitsOfType(group whichGroup675, string unitname270, boolexpr filter165) returns void{ 
}


function UpdateEachStockBuildingEnum() returns void{ 
    local integer iteration256
    local integer pickedItemId634
    iteration256 = 0
    null
    loop {
        pickedItemId634 = ChooseRandomItemEx(bj_stockPickedItemType722, bj_stockPickedItemLevel508)
        exitwhen IsItemIdSellable(pickedItemId634)
        iteration256 = (iteration256 + 1)
        if (iteration256 > bj_STOCK_MAX_ITERATIONS165){
            return %nothing%
        } else {
        }
    }
    AddItemToStock(GetEnumUnit(), pickedItemId634, 1, 1)
}


function ForGroup(group whichGroup220, code callback616) returns void{ 
}


function DestroyGroup(group whichGroup180) returns void{ 
}


function ChooseRandomItemEx(itemtype whichType156, integer level434) returns integer{ 
}


function IsItemIdSellable(integer itemId181) returns boolean{ 
}


function GetEnumUnit() returns unit{ 
}


function AddItemToStock(unit whichUnit299, integer itemId869, integer currentStock333, integer stockMax186) returns void{ 
}


function GetItemType(item whichItem319) returns itemtype{ 
}


function GetItemLevel(item whichItem315) returns integer{ 
}


function GetPlayerTechResearched(player whichPlayer321, integer techid714, boolean specificonly173) returns boolean{ 
}


function SetPlayerTechMaxAllowed(player whichPlayer276, integer techid299, integer maximum303) returns void{ 
}


function GetCameraBoundMinX() returns real{ 
}


function GetCameraMargin(integer whichMargin869) returns real{ 
}


function GetCameraBoundMinY() returns real{ 
}


function GetCameraBoundMaxX() returns real{ 
}


function GetCameraBoundMaxY() returns real{ 
}


function Rect(real minx320, real miny190, real maxx553, real maxy899) returns rect{ 
}


function GetCurrentCameraBoundsMapRectBJ() returns rect{ 
    return Rect(GetCameraBoundMinX(), GetCameraBoundMinY(), GetCameraBoundMaxX(), GetCameraBoundMaxY())
}


function TriggerRegisterTimerExpireEvent(trigger whichTrigger797, timer t207) returns event{ 
}


function QueuedTriggerDoneBJ() returns void{ 
    local integer index260
    null
    if (bj_queuedExecTotal129 <= 0){
        return %nothing%
    } else {
    }
    QueuedTriggerRemoveByIndex(0)
    PauseTimer(bj_queuedExecTimeoutTimer644)
    QueuedTriggerAttemptExec()
}


function IssueHauntOrderAtLocBJFilter() returns boolean{ 
    return (GetUnitTypeId(GetFilterUnit()) == 1852272492)
}


function Filter(code func316) returns filterfunc{ 
}


function EnumDestructablesInCircleBJFilter() returns boolean{ 
    local location destLoc113
    local boolean result112
    destLoc113 = GetDestructableLoc(GetFilterDestructable())
    null
    result112 = (DistanceBetweenPoints(destLoc113, bj_enumDestructableCenter426) <= bj_enumDestructableRadius284)
    RemoveLocation(destLoc113)
    return result112
}


function GetUnitsInRectOfPlayerFilter() returns boolean{ 
    return (GetOwningPlayer(GetFilterUnit()) == bj_groupEnumOwningPlayer117)
}


function GetUnitsOfTypeIdAllFilter() returns boolean{ 
    return (GetUnitTypeId(GetFilterUnit()) == bj_groupEnumTypeId245)
}


function GetUnitsOfPlayerAndTypeIdFilter() returns boolean{ 
    return (GetUnitTypeId(GetFilterUnit()) == bj_groupEnumTypeId245)
}


function MeleeTrainedUnitIsHeroBJFilter() returns boolean{ 
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO198)
}


function LivingPlayerUnitsOfTypeIdFilter() returns boolean{ 
    local unit filterUnit223
    filterUnit223 = GetFilterUnit()
    return (IsUnitAliveBJ(filterUnit223) and (GetUnitTypeId(filterUnit223) == bj_livingPlayerUnitsTypeId202))
}


function CreateForce() returns force{ 
}


function ForceAddPlayer(force whichForce296, player whichPlayer276) returns void{ 
}


function ForceEnumPlayers(force whichForce304, boolexpr filter248) returns void{ 
}


function GetGameSpeed() returns gamespeed{ 
}


function IsFogEnabled() returns boolean{ 
}


function IsFogMaskEnabled() returns boolean{ 
}


function GetPlayerController(player whichPlayer267) returns mapcontrol{ 
}


function GetPlayerSlotState(player whichPlayer158) returns playerslotstate{ 
}


function CreateSoundFromLabel(string soundLabel235, boolean looping107, boolean is3D316, boolean stopwhenoutofrange180, integer fadeInRate207, integer fadeOutRate234) returns sound{ 
}


function DelayedSuspendDecayCreate() returns void{ 
    bj_delayedSuspendDecayTrig208 = CreateTrigger()
    TriggerRegisterTimerExpireEvent(bj_delayedSuspendDecayTrig208, bj_delayedSuspendDecayTimer254)
    TriggerAddAction(bj_delayedSuspendDecayTrig208, function DelayedSuspendDecay)
}


function VersionGet() returns version{ 
}


function TriggerRegisterGameStateEvent(trigger whichTrigger654, gamestate whichState230, limitop opcode290, real limitval146) returns event{ 
}


function SetDNCSoundsDawn() returns void{ 
    if bj_useDawnDuskSounds234{
        StartSound(bj_dawnSound138)
    } else {
    }
}


function SetDNCSoundsDusk() returns void{ 
    if bj_useDawnDuskSounds234{
        StartSound(bj_duskSound279)
    } else {
    }
}


function SetDNCSoundsDay() returns void{ 
    local real ToD284
    ToD284 = GetTimeOfDay()
    if (((ToD284 >= bj_TOD_DAWN841) and (ToD284 < bj_TOD_DUSK116)) and (not bj_dncIsDaytime488)){
        bj_dncIsDaytime488 = true
        StopSound(bj_nightAmbientSound432, false, true)
        StartSound(bj_dayAmbientSound246)
    } else {
    }
}


function SetDNCSoundsNight() returns void{ 
    local real ToD478
    ToD478 = GetTimeOfDay()
    if (((ToD478 < bj_TOD_DAWN841) or (ToD478 >= bj_TOD_DUSK116)) and bj_dncIsDaytime488){
        bj_dncIsDaytime488 = false
        StopSound(bj_dayAmbientSound246, false, true)
        StartSound(bj_nightAmbientSound432)
    } else {
    }
}


function GetTimeOfDay() returns real{ 
    return GetFloatGameState(GAME_STATE_TIME_OF_DAY906)
}


function StopSound(sound soundHandle260, boolean killWhenDone167, boolean fadeOut143) returns void{ 
}


function StartSound(sound soundHandle155) returns void{ 
}


function InitGenericPlayerSlots() returns void{ 
    local gametype gType289
    gType289 = GetGameTypeSelected()
    if (gType289 == GAME_TYPE_MELEE271){
        MeleeInitPlayerSlots()
    } else {
        if (gType289 == GAME_TYPE_FFA479){
            FFAInitPlayerSlots()
        } else {
            if (gType289 == GAME_TYPE_USE_MAP_SETTINGS166){
            } else {
                if (gType289 == GAME_TYPE_ONE_ON_ONE518){
                    OneOnOneInitPlayerSlots()
                } else {
                    if (gType289 == GAME_TYPE_TWO_TEAM_PLAY152){
                        TeamInitPlayerSlots(2)
                    } else {
                        if (gType289 == GAME_TYPE_THREE_TEAM_PLAY327){
                            TeamInitPlayerSlots(3)
                        } else {
                            if (gType289 == GAME_TYPE_FOUR_TEAM_PLAY485){
                                TeamInitPlayerSlots(4)
                            } else {
                            }
                        }
                    }
                }
            }
        }
    }
}


function GetGameTypeSelected() returns gametype{ 
}


function MeleeInitPlayerSlots() returns void{ 
    TeamInitPlayerSlots(bj_MAX_PLAYERS403)
}


function FFAInitPlayerSlots() returns void{ 
    TeamInitPlayerSlots(bj_MAX_PLAYERS403)
}


function OneOnOneInitPlayerSlots() returns void{ 
    SetTeams(2)
    SetPlayers(2)
    TeamInitPlayerSlots(2)
}


function TeamInitPlayerSlots(integer teamCount141) returns void{ 
    local integer index828
    local player indexPlayer142
    local integer team258
    null
    null
    null
    SetTeams(teamCount141)
    CheckInitPlayerSlotAvailability()
    index828 = 0
    team258 = 0
    loop {
        if bj_slotControlUsed292[index828]{
            indexPlayer142 = Player(index828)
            SetPlayerTeam(indexPlayer142, team258)
            team258 = (team258 + 1)
            if (team258 >= teamCount141){
                team258 = 0
            } else {
            }
        } else {
        }
        index828 = (index828 + 1)
        exitwhen (index828 == bj_MAX_PLAYERS403)
    }
}


function SetTeams(integer teamcount144) returns void{ 
}


function SetPlayers(integer playercount286) returns void{ 
}


function CheckInitPlayerSlotAvailability() returns void{ 
    local integer index222
    null
    if (not bj_slotControlReady715){
        index222 = 0
        loop {
            bj_slotControlUsed292[index222] = false
            bj_slotControl279[index222] = MAP_CONTROL_USER160
            index222 = (index222 + 1)
            exitwhen (index222 == bj_MAX_PLAYERS403)
        }
        bj_slotControlReady715 = true
    } else {
    }
}


function SetPlayerTeam(player whichPlayer655, integer whichTeam245) returns void{ 
}


function SetPlayerSlotAvailable(player whichPlayer880, mapcontrol control194) returns void{ 
    local integer playerIndex940
    playerIndex940 = GetPlayerId(whichPlayer880)
    CheckInitPlayerSlotAvailability()
    bj_slotControlUsed292[playerIndex940] = true
    bj_slotControl279[playerIndex940] = control194
}


function GetPlayerId(player whichPlayer373) returns integer{ 
}


function MeleeInitVictoryDefeat() returns void{ 
    local trigger trig981
    local integer index226
    local player indexPlayer602
    null
    null
    null
    bj_finishSoonTimerDialog100 = CreateTimerDialog(null)
    trig981 = CreateTrigger()
    TriggerRegisterGameEvent(trig981, EVENT_GAME_TOURNAMENT_FINISH_SOON112)
    TriggerAddAction(trig981, function MeleeTriggerTournamentFinishSoon)
    trig981 = CreateTrigger()
    TriggerRegisterGameEvent(trig981, EVENT_GAME_TOURNAMENT_FINISH_NOW738)
    TriggerAddAction(trig981, function MeleeTriggerTournamentFinishNow)
    index226 = 0
    loop {
        indexPlayer602 = Player(index226)
        if (GetPlayerSlotState(indexPlayer602) == PLAYER_SLOT_STATE_PLAYING211){
            bj_meleeDefeated328[index226] = false
            bj_meleeVictoried288[index226] = false
            bj_playerIsCrippled159[index226] = false
            bj_playerIsExposed112[index226] = false
            bj_crippledTimer113[index226] = CreateTimer()
            bj_crippledTimerWindows137[index226] = CreateTimerDialog(bj_crippledTimer113[index226])
            TimerDialogSetTitle(bj_crippledTimerWindows137[index226], MeleeGetCrippledTimerMessage(indexPlayer602))
            trig981 = CreateTrigger()
            TriggerRegisterPlayerUnitEvent(trig981, indexPlayer602, EVENT_PLAYER_UNIT_CONSTRUCT_CANCEL172, null)
            TriggerAddAction(trig981, function MeleeTriggerActionConstructCancel)
            trig981 = CreateTrigger()
            TriggerRegisterPlayerUnitEvent(trig981, indexPlayer602, EVENT_PLAYER_UNIT_DEATH916, null)
            TriggerAddAction(trig981, function MeleeTriggerActionUnitDeath)
            trig981 = CreateTrigger()
            TriggerRegisterPlayerUnitEvent(trig981, indexPlayer602, EVENT_PLAYER_UNIT_CONSTRUCT_START166, null)
            TriggerAddAction(trig981, function MeleeTriggerActionUnitConstructionStart)
            trig981 = CreateTrigger()
            TriggerRegisterPlayerEvent(trig981, indexPlayer602, EVENT_PLAYER_DEFEAT331)
            TriggerAddAction(trig981, function MeleeTriggerActionPlayerDefeated)
            trig981 = CreateTrigger()
            TriggerRegisterPlayerEvent(trig981, indexPlayer602, EVENT_PLAYER_LEAVE148)
            TriggerAddAction(trig981, function MeleeTriggerActionPlayerLeft)
            trig981 = CreateTrigger()
            TriggerRegisterPlayerAllianceChange(trig981, indexPlayer602, ALLIANCE_PASSIVE213)
            TriggerRegisterPlayerStateEvent(trig981, indexPlayer602, PLAYER_STATE_ALLIED_VICTORY212, EQUAL186, 1.)
            TriggerAddAction(trig981, function MeleeTriggerActionAllianceChange)
        } else {
            bj_meleeDefeated328[index226] = true
            bj_meleeVictoried288[index226] = false
            if IsPlayerObserver(indexPlayer602){
                trig981 = CreateTrigger()
                TriggerRegisterPlayerEvent(trig981, indexPlayer602, EVENT_PLAYER_LEAVE148)
                TriggerAddAction(trig981, function MeleeTriggerActionPlayerLeft)
            } else {
            }
        }
        index226 = (index226 + 1)
        exitwhen (index226 == bj_MAX_PLAYERS403)
    }
    TimerStart(CreateTimer(), 2.0, false, function MeleeTriggerActionAllianceChange)
}


function CreateTimerDialog(timer t106) returns timerdialog{ 
}


function TriggerRegisterGameEvent(trigger whichTrigger145, gameevent whichGameEvent172) returns event{ 
}


function MeleeTriggerTournamentFinishSoon() returns void{ 
    local integer playerIndex114
    local player indexPlayer248
    local real timeRemaining612
    null
    null
    timeRemaining612 = GetTournamentFinishSoonTimeRemaining()
    if (not bj_finishSoonAllExposed595){
        bj_finishSoonAllExposed595 = true
        playerIndex114 = 0
        loop {
            indexPlayer248 = Player(playerIndex114)
            if bj_playerIsCrippled159[playerIndex114]{
                bj_playerIsCrippled159[playerIndex114] = false
                PauseTimer(bj_crippledTimer113[playerIndex114])
                if (GetLocalPlayer() == indexPlayer248){
                    TimerDialogDisplay(bj_crippledTimerWindows137[playerIndex114], false)
                } else {
                }
            } else {
            }
            playerIndex114 = (playerIndex114 + 1)
            exitwhen (playerIndex114 == bj_MAX_PLAYERS403)
        }
        MeleeExposeAllPlayers()
    } else {
    }
    TimerDialogDisplay(bj_finishSoonTimerDialog100, true)
    TimerDialogSetRealTimeRemaining(bj_finishSoonTimerDialog100, timeRemaining612)
}


function MeleeTriggerTournamentFinishNow() returns void{ 
    local integer rule202
    rule202 = GetTournamentFinishNowRule()
    if bj_meleeGameOver228{
        return %nothing%
    } else {
    }
    if (rule202 == 1){
        MeleeTournamentFinishNowRuleA(1)
    } else {
        MeleeTournamentFinishNowRuleA(3)
    }
    MeleeRemoveObservers()
}


function MeleeGetCrippledTimerMessage(player whichPlayer248) returns string{ 
    local race r155
    r155 = GetPlayerRace(whichPlayer248)
    if (r155 == RACE_HUMAN790){
        return GetLocalizedString("CRIPPLE_TIMER_HUMAN")
    } else {
        if (r155 == RACE_ORC107){
            return GetLocalizedString("CRIPPLE_TIMER_ORC")
        } else {
            if (r155 == RACE_NIGHTELF389){
                return GetLocalizedString("CRIPPLE_TIMER_NIGHTELF")
            } else {
                if (r155 == RACE_UNDEAD456){
                    return GetLocalizedString("CRIPPLE_TIMER_UNDEAD")
                } else {
                    return ""
                }
            }
        }
    }
}


function TimerDialogSetTitle(timerdialog whichDialog235, string title530) returns void{ 
}


function MeleeTriggerActionConstructCancel() returns void{ 
    MeleeCheckLostUnit(GetCancelledStructure())
}


function MeleeTriggerActionUnitDeath() returns void{ 
    if IsUnitType(GetDyingUnit(), UNIT_TYPE_STRUCTURE273){
        MeleeCheckLostUnit(GetDyingUnit())
    } else {
    }
}


function MeleeTriggerActionUnitConstructionStart() returns void{ 
    MeleeCheckAddedUnit(GetConstructingStructure())
}


function TriggerRegisterPlayerEvent(trigger whichTrigger221, player whichPlayer309, playerevent whichPlayerEvent326) returns event{ 
}


function MeleeTriggerActionPlayerDefeated() returns void{ 
    local player thePlayer241
    thePlayer241 = GetTriggerPlayer()
    CachePlayerHeroData(thePlayer241)
    if (MeleeGetAllyCount(thePlayer241) > 0){
        ShareEverythingWithTeam(thePlayer241)
        if (not bj_meleeDefeated328[GetPlayerId(thePlayer241)]){
            MeleeDoDefeat(thePlayer241)
        } else {
        }
    } else {
        MakeUnitsPassiveForTeam(thePlayer241)
        if (not bj_meleeDefeated328[GetPlayerId(thePlayer241)]){
            MeleeDoDefeat(thePlayer241)
        } else {
        }
    }
    MeleeCheckForLosersAndVictors()
}


function MeleeTriggerActionPlayerLeft() returns void{ 
    local player thePlayer362
    thePlayer362 = GetTriggerPlayer()
    if IsPlayerObserver(thePlayer362){
        RemovePlayerPreserveUnitsBJ(thePlayer362, PLAYER_GAME_RESULT_NEUTRAL324, false)
        return %nothing%
    } else {
    }
    CachePlayerHeroData(thePlayer362)
    if (MeleeGetAllyCount(thePlayer362) > 0){
        ShareEverythingWithTeam(thePlayer362)
        MeleeDoLeave(thePlayer362)
    } else {
        MakeUnitsPassiveForTeam(thePlayer362)
        MeleeDoLeave(thePlayer362)
    }
    MeleeCheckForLosersAndVictors()
}


function TriggerRegisterPlayerAllianceChange(trigger whichTrigger106, player whichPlayer257, alliancetype whichAlliance263) returns event{ 
}


function TriggerRegisterPlayerStateEvent(trigger whichTrigger317, player whichPlayer187, playerstate whichState118, limitop opcode299, real limitval117) returns event{ 
}


function MeleeTriggerActionAllianceChange() returns void{ 
    MeleeCheckForLosersAndVictors()
    MeleeCheckForCrippledPlayers()
}


function IsPlayerObserver(player whichPlayer664) returns boolean{ 
}


function GetTournamentFinishNowRule() returns integer{ 
}


function MeleeTournamentFinishNowRuleA(integer multiplier309) returns void{ 
    local array integer playerScore876
    local array integer teamScore255
    local array force teamForce244
    local integer teamCount109
    local integer index317
    local player indexPlayer547
    local integer index2444
    local player indexPlayer2303
    local integer bestTeam293
    local integer bestScore117
    local boolean draw251
    null
    null
    null
    null
    null
    null
    null
    null
    null
    null
    null
    index317 = 0
    loop {
        indexPlayer547 = Player(index317)
        if MeleeWasUserPlayer(indexPlayer547){
            playerScore876[index317] = GetTournamentScore(indexPlayer547)
            if (playerScore876[index317] <= 0){
                playerScore876[index317] = 1
            } else {
            }
        } else {
            playerScore876[index317] = 0
        }
        index317 = (index317 + 1)
        exitwhen (index317 == bj_MAX_PLAYERS403)
    }
    teamCount109 = 0
    index317 = 0
    loop {
        if (playerScore876[index317] != 0){
            indexPlayer547 = Player(index317)
            teamScore255[teamCount109] = 0
            teamForce244[teamCount109] = CreateForce()
            index2444 = index317
            loop {
                if (playerScore876[index2444] != 0){
                    indexPlayer2303 = Player(index2444)
                    if PlayersAreCoAllied(indexPlayer547, indexPlayer2303){
                        teamScore255[teamCount109] = (teamScore255[teamCount109] + playerScore876[index2444])
                        ForceAddPlayer(teamForce244[teamCount109], indexPlayer2303)
                        playerScore876[index2444] = 0
                    } else {
                    }
                } else {
                }
                index2444 = (index2444 + 1)
                exitwhen (index2444 == bj_MAX_PLAYERS403)
            }
            teamCount109 = (teamCount109 + 1)
        } else {
        }
        index317 = (index317 + 1)
        exitwhen (index317 == bj_MAX_PLAYERS403)
    }
    bj_meleeGameOver228 = true
    if (teamCount109 != 0){
        bestTeam293 = (- 1)
        bestScore117 = (- 1)
        index317 = 0
        loop {
            if (teamScore255[index317] > bestScore117){
                bestTeam293 = index317
                bestScore117 = teamScore255[index317]
            } else {
            }
            index317 = (index317 + 1)
            exitwhen (index317 == teamCount109)
        }
        draw251 = false
        index317 = 0
        loop {
            if (index317 != bestTeam293){
                if (bestScore117 < (multiplier309 * teamScore255[index317])){
                    draw251 = true
                } else {
                }
            } else {
            }
            index317 = (index317 + 1)
            exitwhen (index317 == teamCount109)
        }
        if draw251{
            index317 = 0
            loop {
                ForForce(teamForce244[index317], function MeleeDoDrawEnum)
                index317 = (index317 + 1)
                exitwhen (index317 == teamCount109)
            }
        } else {
            index317 = 0
            loop {
                if (index317 != bestTeam293){
                    ForForce(teamForce244[index317], function MeleeDoDefeatEnum)
                } else {
                }
                index317 = (index317 + 1)
                exitwhen (index317 == teamCount109)
            }
            ForForce(teamForce244[bestTeam293], function MeleeDoVictoryEnum)
        }
    } else {
    }
}


function MeleeRemoveObservers() returns void{ 
    local integer playerIndex271
    local player indexPlayer110
    null
    null
    playerIndex271 = 0
    loop {
        indexPlayer110 = Player(playerIndex271)
        if IsPlayerObserver(indexPlayer110){
            RemovePlayerPreserveUnitsBJ(indexPlayer110, PLAYER_GAME_RESULT_NEUTRAL324, false)
        } else {
        }
        playerIndex271 = (playerIndex271 + 1)
        exitwhen (playerIndex271 == bj_MAX_PLAYERS403)
    }
}


function MeleeWasUserPlayer(player whichPlayer244) returns boolean{ 
    local playerslotstate slotState135
    null
    if (GetPlayerController(whichPlayer244) != MAP_CONTROL_USER160){
        return false
    } else {
    }
    slotState135 = GetPlayerSlotState(whichPlayer244)
    return ((slotState135 == PLAYER_SLOT_STATE_PLAYING211) or (slotState135 == PLAYER_SLOT_STATE_LEFT260))
}


function GetTournamentScore(player whichPlayer189) returns integer{ 
}


function PlayersAreCoAllied(player playerA438, player playerB320) returns boolean{ 
    if (playerA438 == playerB320){
        return true
    } else {
    }
    if GetPlayerAlliance(playerA438, playerB320, ALLIANCE_PASSIVE213){
        if GetPlayerAlliance(playerB320, playerA438, ALLIANCE_PASSIVE213){
            return true
        } else {
        }
    } else {
    }
    return false
}


function MeleeDoDrawEnum() returns void{ 
    local player thePlayer236
    thePlayer236 = GetEnumPlayer()
    CachePlayerHeroData(thePlayer236)
    RemovePlayerPreserveUnitsBJ(thePlayer236, PLAYER_GAME_RESULT_TIE140, false)
}


function ForForce(force whichForce214, code callback275) returns void{ 
}


function MeleeDoDefeatEnum() returns void{ 
    local player thePlayer263
    thePlayer263 = GetEnumPlayer()
    CachePlayerHeroData(thePlayer263)
    MakeUnitsPassiveForTeam(thePlayer263)
    MeleeDoDefeat(thePlayer263)
}


function MeleeDoVictoryEnum() returns void{ 
    local player thePlayer161
    local integer playerIndex221
    thePlayer161 = GetEnumPlayer()
    playerIndex221 = GetPlayerId(thePlayer161)
    if (not bj_meleeVictoried288[playerIndex221]){
        bj_meleeVictoried288[playerIndex221] = true
        CachePlayerHeroData(thePlayer161)
        RemovePlayerPreserveUnitsBJ(thePlayer161, PLAYER_GAME_RESULT_VICTORY166, false)
    } else {
    }
}


function GetTournamentFinishSoonTimeRemaining() returns real{ 
}


function PauseTimer(timer whichTimer295) returns void{ 
}


function GetLocalPlayer() returns player{ 
}


function TimerDialogDisplay(timerdialog whichDialog720, boolean display183) returns void{ 
}


function MeleeExposeAllPlayers() returns void{ 
    local integer playerIndex111
    local player indexPlayer391
    local integer playerIndex2182
    local player indexPlayer2276
    local force toExposeTo105
    null
    null
    null
    null
    toExposeTo105 = CreateForce()
    playerIndex111 = 0
    loop {
        indexPlayer391 = Player(playerIndex111)
        ForceClear(toExposeTo105)
        CripplePlayer(indexPlayer391, toExposeTo105, false)
        playerIndex2182 = 0
        loop {
            indexPlayer2276 = Player(playerIndex2182)
            if (playerIndex111 != playerIndex2182){
                if (not PlayersAreCoAllied(indexPlayer391, indexPlayer2276)){
                    ForceAddPlayer(toExposeTo105, indexPlayer2276)
                } else {
                }
            } else {
            }
            playerIndex2182 = (playerIndex2182 + 1)
            exitwhen (playerIndex2182 == bj_MAX_PLAYERS403)
        }
        CripplePlayer(indexPlayer391, toExposeTo105, true)
        playerIndex111 = (playerIndex111 + 1)
        exitwhen (playerIndex111 == bj_MAX_PLAYERS403)
    }
    DestroyForce(toExposeTo105)
}


function TimerDialogSetRealTimeRemaining(timerdialog whichDialog272, real timeRemaining108) returns void{ 
}


function MeleeCheckForLosersAndVictors() returns void{ 
    local integer playerIndex404
    local player indexPlayer964
    local force defeatedPlayers214
    local force victoriousPlayers177
    local boolean gameOver249
    null
    null
    defeatedPlayers214 = CreateForce()
    null
    gameOver249 = false
    if bj_meleeGameOver228{
        return %nothing%
    } else {
    }
    if (GetIntegerGameState(GAME_STATE_DISCONNECTED233) != 0){
        bj_meleeGameOver228 = true
        return %nothing%
    } else {
    }
    playerIndex404 = 0
    loop {
        indexPlayer964 = Player(playerIndex404)
        if ((not bj_meleeDefeated328[playerIndex404]) and (not bj_meleeVictoried288[playerIndex404])){
            if (MeleeGetAllyStructureCount(indexPlayer964) <= 0){
                ForceAddPlayer(defeatedPlayers214, Player(playerIndex404))
                bj_meleeDefeated328[playerIndex404] = true
            } else {
            }
        } else {
        }
        playerIndex404 = (playerIndex404 + 1)
        exitwhen (playerIndex404 == bj_MAX_PLAYERS403)
    }
    victoriousPlayers177 = MeleeCheckForVictors()
    ForForce(defeatedPlayers214, function MeleeDoDefeatEnum)
    ForForce(victoriousPlayers177, function MeleeDoVictoryEnum)
    if bj_meleeGameOver228{
        MeleeRemoveObservers()
    } else {
    }
}


function MeleeCheckForCrippledPlayers() returns void{ 
    local integer playerIndex330
    local player indexPlayer255
    local force crippledPlayers124
    local boolean isNowCrippled225
    local race indexRace564
    null
    null
    crippledPlayers124 = CreateForce()
    null
    null
    if bj_finishSoonAllExposed595{
        return %nothing%
    } else {
    }
    playerIndex330 = 0
    loop {
        indexPlayer255 = Player(playerIndex330)
        isNowCrippled225 = MeleePlayerIsCrippled(indexPlayer255)
        if ((not bj_playerIsCrippled159[playerIndex330]) and isNowCrippled225){
            bj_playerIsCrippled159[playerIndex330] = true
            TimerStart(bj_crippledTimer113[playerIndex330], bj_MELEE_CRIPPLE_TIMEOUT129, false, function MeleeCrippledPlayerTimeout)
            if (GetLocalPlayer() == indexPlayer255){
                TimerDialogDisplay(bj_crippledTimerWindows137[playerIndex330], true)
                DisplayTimedTextToPlayer(indexPlayer255, 0., 0., bj_MELEE_CRIPPLE_MSG_DURATION802, MeleeGetCrippledWarningMessage(indexPlayer255))
            } else {
            }
        } else {
            if (bj_playerIsCrippled159[playerIndex330] and (not isNowCrippled225)){
                bj_playerIsCrippled159[playerIndex330] = false
                PauseTimer(bj_crippledTimer113[playerIndex330])
                if (GetLocalPlayer() == indexPlayer255){
                    TimerDialogDisplay(bj_crippledTimerWindows137[playerIndex330], false)
                    if (MeleeGetAllyStructureCount(indexPlayer255) > 0){
                        if bj_playerIsExposed112[playerIndex330]{
                            DisplayTimedTextToPlayer(indexPlayer255, 0., 0., bj_MELEE_CRIPPLE_MSG_DURATION802, GetLocalizedString("CRIPPLE_UNREVEALED"))
                        } else {
                            DisplayTimedTextToPlayer(indexPlayer255, 0., 0., bj_MELEE_CRIPPLE_MSG_DURATION802, GetLocalizedString("CRIPPLE_UNCRIPPLED"))
                        }
                    } else {
                    }
                } else {
                }
                MeleeExposePlayer(indexPlayer255, false)
            } else {
            }
        }
        playerIndex330 = (playerIndex330 + 1)
        exitwhen (playerIndex330 == bj_MAX_PLAYERS403)
    }
}


function GetTriggerPlayer() returns player{ 
}


function RemovePlayerPreserveUnitsBJ(player whichPlayer165, playergameresult gameResult172, boolean leftGame682) returns void{ 
    if AllowVictoryDefeat(gameResult172){
        RemovePlayer(whichPlayer165, gameResult172)
        if (gameResult172 == PLAYER_GAME_RESULT_VICTORY166){
            MeleeVictoryDialogBJ(whichPlayer165, leftGame682)
            return %nothing%
        } else {
            if (gameResult172 == PLAYER_GAME_RESULT_DEFEAT231){
                MeleeDefeatDialogBJ(whichPlayer165, leftGame682)
            } else {
                GameOverDialogBJ(whichPlayer165, leftGame682)
            }
        }
    } else {
    }
}


function CachePlayerHeroData(player whichPlayer251) returns void{ 
}


function MeleeGetAllyCount(player whichPlayer143) returns integer{ 
    local integer playerIndex196
    local integer playerCount161
    local player indexPlayer958
    null
    null
    null
    playerCount161 = 0
    playerIndex196 = 0
    loop {
        indexPlayer958 = Player(playerIndex196)
        if ((PlayersAreCoAllied(whichPlayer143, indexPlayer958) and (not bj_meleeDefeated328[playerIndex196])) and (whichPlayer143 != indexPlayer958)){
            playerCount161 = (playerCount161 + 1)
        } else {
        }
        playerIndex196 = (playerIndex196 + 1)
        exitwhen (playerIndex196 == bj_MAX_PLAYERS403)
    }
    return playerCount161
}


function ShareEverythingWithTeam(player whichPlayer161) returns void{ 
    local integer playerIndex629
    local player indexPlayer155
    null
    null
    playerIndex629 = 0
    loop {
        indexPlayer155 = Player(playerIndex629)
        if (PlayersAreCoAllied(whichPlayer161, indexPlayer155) and (whichPlayer161 != indexPlayer155)){
            SetPlayerAlliance(whichPlayer161, indexPlayer155, ALLIANCE_SHARED_VISION130, true)
            SetPlayerAlliance(whichPlayer161, indexPlayer155, ALLIANCE_SHARED_CONTROL326, true)
            SetPlayerAlliance(indexPlayer155, whichPlayer161, ALLIANCE_SHARED_CONTROL326, true)
            SetPlayerAlliance(whichPlayer161, indexPlayer155, ALLIANCE_SHARED_ADVANCED_CONTROL194, true)
        } else {
        }
        playerIndex629 = (playerIndex629 + 1)
        exitwhen (playerIndex629 == bj_MAX_PLAYERS403)
    }
}


function MeleeDoLeave(player whichPlayer141) returns void{ 
    if (GetIntegerGameState(GAME_STATE_DISCONNECTED233) != 0){
        GameOverDialogBJ(whichPlayer141, true)
    } else {
        bj_meleeDefeated328[GetPlayerId(whichPlayer141)] = true
        RemovePlayerPreserveUnitsBJ(whichPlayer141, PLAYER_GAME_RESULT_DEFEAT231, true)
    }
}


function MakeUnitsPassiveForTeam(player whichPlayer141) returns void{ 
    local integer playerIndex159
    local player indexPlayer101
    null
    null
    playerIndex159 = 0
    loop {
        indexPlayer101 = Player(playerIndex159)
        if PlayersAreCoAllied(whichPlayer141, indexPlayer101){
            MakeUnitsPassiveForPlayer(indexPlayer101)
        } else {
        }
        playerIndex159 = (playerIndex159 + 1)
        exitwhen (playerIndex159 == bj_MAX_PLAYERS403)
    }
}


function MeleeDoDefeat(player whichPlayer290) returns void{ 
    bj_meleeDefeated328[GetPlayerId(whichPlayer290)] = true
    RemovePlayerPreserveUnitsBJ(whichPlayer290, PLAYER_GAME_RESULT_DEFEAT231, false)
}


function GetConstructingStructure() returns unit{ 
}


function MeleeCheckAddedUnit(unit addedUnit225) returns void{ 
    local player addedUnitOwner249
    addedUnitOwner249 = GetOwningPlayer(addedUnit225)
    if bj_playerIsCrippled159[GetPlayerId(addedUnitOwner249)]{
        MeleeCheckForCrippledPlayers()
    } else {
    }
}


function GetDyingUnit() returns unit{ 
}


function IsUnitType(unit whichUnit123, unittype whichUnitType157) returns boolean{ 
}


function MeleeCheckLostUnit(unit lostUnit111) returns void{ 
    local player lostUnitOwner858
    lostUnitOwner858 = GetOwningPlayer(lostUnit111)
    if (GetPlayerStructureCount(lostUnitOwner858, true) <= 0){
        MeleeCheckForLosersAndVictors()
    } else {
    }
    MeleeCheckForCrippledPlayers()
}


function GetCancelledStructure() returns unit{ 
}


function GetOwningPlayer(unit whichUnit108) returns player{ 
}


function GetPlayerStructureCount(player whichPlayer144, boolean includeIncomplete333) returns integer{ 
}


function MeleePlayerIsCrippled(player whichPlayer160) returns boolean{ 
    local integer allyStructures748
    local integer allyKeyStructures228
    allyStructures748 = MeleeGetAllyStructureCount(whichPlayer160)
    allyKeyStructures228 = MeleeGetAllyKeyStructureCount(whichPlayer160)
    return ((allyStructures748 > 0) and (allyKeyStructures228 <= 0))
}


function MeleeCrippledPlayerTimeout() returns void{ 
    local timer expiredTimer191
    local integer playerIndex324
    local player exposedPlayer328
    expiredTimer191 = GetExpiredTimer()
    null
    null
    playerIndex324 = 0
    loop {
        if (bj_crippledTimer113[playerIndex324] == expiredTimer191){
            exitwhen true
        } else {
        }
        playerIndex324 = (playerIndex324 + 1)
        exitwhen (playerIndex324 == bj_MAX_PLAYERS403)
    }
    if (playerIndex324 == bj_MAX_PLAYERS403){
        return %nothing%
    } else {
    }
    exposedPlayer328 = Player(playerIndex324)
    if (GetLocalPlayer() == exposedPlayer328){
        TimerDialogDisplay(bj_crippledTimerWindows137[playerIndex324], false)
    } else {
    }
    DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_MELEE_CRIPPLE_MSG_DURATION802, MeleeGetCrippledRevealedMessage(exposedPlayer328))
    MeleeExposePlayer(exposedPlayer328, true)
}


function MeleeGetCrippledWarningMessage(player whichPlayer162) returns string{ 
    local race r846
    r846 = GetPlayerRace(whichPlayer162)
    if (r846 == RACE_HUMAN790){
        return GetLocalizedString("CRIPPLE_WARNING_HUMAN")
    } else {
        if (r846 == RACE_ORC107){
            return GetLocalizedString("CRIPPLE_WARNING_ORC")
        } else {
            if (r846 == RACE_NIGHTELF389){
                return GetLocalizedString("CRIPPLE_WARNING_NIGHTELF")
            } else {
                if (r846 == RACE_UNDEAD456){
                    return GetLocalizedString("CRIPPLE_WARNING_UNDEAD")
                } else {
                    return ""
                }
            }
        }
    }
}


function DisplayTimedTextToPlayer(player toPlayer248, real x237, real y225, real duration119, string message269) returns void{ 
}


function MeleeGetAllyStructureCount(player whichPlayer317) returns integer{ 
    local integer playerIndex194
    local integer buildingCount181
    local player indexPlayer226
    null
    null
    null
    buildingCount181 = 0
    playerIndex194 = 0
    loop {
        indexPlayer226 = Player(playerIndex194)
        if PlayersAreCoAllied(whichPlayer317, indexPlayer226){
            buildingCount181 = (buildingCount181 + GetPlayerStructureCount(indexPlayer226, true))
        } else {
        }
        playerIndex194 = (playerIndex194 + 1)
        exitwhen (playerIndex194 == bj_MAX_PLAYERS403)
    }
    return buildingCount181
}


function GetLocalizedString(string source268) returns string{ 
}


function MeleeExposePlayer(player whichPlayer604, boolean expose150) returns void{ 
    local integer playerIndex334
    local player indexPlayer178
    local force toExposeTo181
    null
    null
    toExposeTo181 = CreateForce()
    CripplePlayer(whichPlayer604, toExposeTo181, false)
    bj_playerIsExposed112[GetPlayerId(whichPlayer604)] = expose150
    playerIndex334 = 0
    loop {
        indexPlayer178 = Player(playerIndex334)
        if (not PlayersAreCoAllied(whichPlayer604, indexPlayer178)){
            ForceAddPlayer(toExposeTo181, indexPlayer178)
        } else {
        }
        playerIndex334 = (playerIndex334 + 1)
        exitwhen (playerIndex334 == bj_MAX_PLAYERS403)
    }
    CripplePlayer(whichPlayer604, toExposeTo181, expose150)
    DestroyForce(toExposeTo181)
}


function MeleeGetAllyKeyStructureCount(player whichPlayer208) returns integer{ 
    local integer playerIndex942
    local player indexPlayer831
    local integer keyStructs223
    null
    null
    null
    keyStructs223 = 0
    playerIndex942 = 0
    loop {
        indexPlayer831 = Player(playerIndex942)
        if PlayersAreCoAllied(whichPlayer208, indexPlayer831){
            keyStructs223 = (keyStructs223 + GetPlayerTypedUnitCount(indexPlayer831, "townhall", true, true))
            keyStructs223 = (keyStructs223 + GetPlayerTypedUnitCount(indexPlayer831, "greathall", true, true))
            keyStructs223 = (keyStructs223 + GetPlayerTypedUnitCount(indexPlayer831, "treeoflife", true, true))
            keyStructs223 = (keyStructs223 + GetPlayerTypedUnitCount(indexPlayer831, "necropolis", true, true))
        } else {
        }
        playerIndex942 = (playerIndex942 + 1)
        exitwhen (playerIndex942 == bj_MAX_PLAYERS403)
    }
    return keyStructs223
}


function GetExpiredTimer() returns timer{ 
}


function MeleeGetCrippledRevealedMessage(player whichPlayer797) returns string{ 
    return ((GetLocalizedString("CRIPPLE_REVEALING_PREFIX") + GetPlayerName(whichPlayer797)) + GetLocalizedString("CRIPPLE_REVEALING_POSTFIX"))
}


function ForceClear(force whichForce259) returns void{ 
}


function CripplePlayer(player whichPlayer562, force toWhichPlayers727, boolean flag765) returns void{ 
}


function DestroyForce(force whichForce100) returns void{ 
}


function GetPlayerName(player whichPlayer224) returns string{ 
}


function GetPlayerRace(player whichPlayer118) returns race{ 
}


function GetIntegerGameState(igamestate whichIntegerGameState102) returns integer{ 
}


function MeleeCheckForVictors() returns force{ 
    local integer playerIndex329
    local integer opponentIndex237
    local force opponentlessPlayers264
    local boolean gameOver327
    null
    null
    opponentlessPlayers264 = CreateForce()
    gameOver327 = false
    playerIndex329 = 0
    loop {
        if (not bj_meleeDefeated328[playerIndex329]){
            opponentIndex237 = 0
            loop {
                if MeleePlayerIsOpponent(playerIndex329, opponentIndex237){
                    return CreateForce()
                } else {
                }
                opponentIndex237 = (opponentIndex237 + 1)
                exitwhen (opponentIndex237 == bj_MAX_PLAYERS403)
            }
            ForceAddPlayer(opponentlessPlayers264, Player(playerIndex329))
            gameOver327 = true
        } else {
        }
        playerIndex329 = (playerIndex329 + 1)
        exitwhen (playerIndex329 == bj_MAX_PLAYERS403)
    }
    bj_meleeGameOver228 = gameOver327
    return opponentlessPlayers264
}


function MeleePlayerIsOpponent(integer playerIndex300, integer opponentIndex171) returns boolean{ 
    local player thePlayer509
    local player theOpponent891
    thePlayer509 = Player(playerIndex300)
    theOpponent891 = Player(opponentIndex171)
    if (playerIndex300 == opponentIndex171){
        return false
    } else {
    }
    if (GetPlayerSlotState(theOpponent891) != PLAYER_SLOT_STATE_PLAYING211){
        return false
    } else {
    }
    if bj_meleeDefeated328[opponentIndex171]{
        return false
    } else {
    }
    if GetPlayerAlliance(thePlayer509, theOpponent891, ALLIANCE_PASSIVE213){
        if GetPlayerAlliance(theOpponent891, thePlayer509, ALLIANCE_PASSIVE213){
            if (GetPlayerState(thePlayer509, PLAYER_STATE_ALLIED_VICTORY212) == 1){
                if (GetPlayerState(theOpponent891, PLAYER_STATE_ALLIED_VICTORY212) == 1){
                    return false
                } else {
                }
            } else {
            }
        } else {
        }
    } else {
    }
    return true
}


function GameOverDialogBJ(player whichPlayer173, boolean leftGame314) returns void{ 
    local trigger t156
    local dialog d835
    local string s188
    t156 = CreateTrigger()
    d835 = DialogCreate()
    null
    DisplayTimedTextFromPlayer(whichPlayer173, 0., 0., 60., GetLocalizedString("PLAYER_LEFT_GAME"))
    if (GetIntegerGameState(GAME_STATE_DISCONNECTED233) != 0){
        s188 = GetLocalizedString("GAMEOVER_DISCONNECTED")
    } else {
        s188 = GetLocalizedString("GAMEOVER_GAME_OVER")
    }
    DialogSetMessage(d835, s188)
    t156 = CreateTrigger()
    TriggerRegisterDialogButtonEvent(t156, DialogAddQuitButton(d835, true, GetLocalizedString("GAMEOVER_OK"), GetLocalizedHotkey("GAMEOVER_OK")))
    DialogDisplay(whichPlayer173, d835, true)
    StartSoundForPlayerBJ(whichPlayer173, bj_defeatDialogSound309)
}


function GetEnumPlayer() returns player{ 
}


function GetPlayerTypedUnitCount(player whichPlayer112, string unitName537, boolean includeIncomplete138, boolean includeUpgrades192) returns integer{ 
}


function GetPlayerAlliance(player sourcePlayer182, player otherPlayer267, alliancetype whichAllianceSetting125) returns boolean{ 
}


function GetPlayerState(player whichPlayer250, playerstate whichPlayerState108) returns integer{ 
}


function LockGuardPosition(unit targ313) returns void{ 
    SetUnitCreepGuard(targ313, true)
}


function SetUnitCreepGuard(unit whichUnit119, boolean creepGuard538) returns void{ 
}


function MeleeStartingAI() returns void{ 
    local integer index292
    local player indexPlayer100
    local race indexRace165
    null
    null
    null
    index292 = 0
    loop {
        indexPlayer100 = Player(index292)
        if (GetPlayerSlotState(indexPlayer100) == PLAYER_SLOT_STATE_PLAYING211){
            indexRace165 = GetPlayerRace(indexPlayer100)
            if (GetPlayerController(indexPlayer100) == MAP_CONTROL_COMPUTER289){
                if (indexRace165 == RACE_HUMAN790){
                    PickMeleeAI(indexPlayer100, "human.ai", null, null)
                } else {
                    if (indexRace165 == RACE_ORC107){
                        PickMeleeAI(indexPlayer100, "orc.ai", null, null)
                    } else {
                        if (indexRace165 == RACE_UNDEAD456){
                            PickMeleeAI(indexPlayer100, "undead.ai", null, null)
                            RecycleGuardPosition(bj_ghoul302[index292])
                        } else {
                            if (indexRace165 == RACE_NIGHTELF389){
                                PickMeleeAI(indexPlayer100, "elf.ai", null, null)
                            } else {
                            }
                        }
                    }
                }
                ShareEverythingWithTeamAI(indexPlayer100)
            } else {
            }
        } else {
        }
        index292 = (index292 + 1)
        exitwhen (index292 == bj_MAX_PLAYERS403)
    }
}


function PickMeleeAI(player num167, string s1281, string s2286, string s3371) returns void{ 
    local integer pick280
    null
    if (GetAIDifficulty(num167) == AI_DIFFICULTY_NEWBIE299){
        StartMeleeAI(num167, s1281)
        return %nothing%
    } else {
    }
    if (s2286 == null){
        pick280 = 1
    } else {
        if (s3371 == null){
            pick280 = GetRandomInt(1, 2)
        } else {
            pick280 = GetRandomInt(1, 3)
        }
    }
    if (pick280 == 1){
        StartMeleeAI(num167, s1281)
    } else {
        if (pick280 == 2){
            StartMeleeAI(num167, s2286)
        } else {
            StartMeleeAI(num167, s3371)
        }
    }
}


function RecycleGuardPosition(unit hUnit254) returns void{ 
}


function ShareEverythingWithTeamAI(player whichPlayer191) returns void{ 
    local integer playerIndex327
    local player indexPlayer103
    null
    null
    playerIndex327 = 0
    loop {
        indexPlayer103 = Player(playerIndex327)
        if (PlayersAreCoAllied(whichPlayer191, indexPlayer103) and (whichPlayer191 != indexPlayer103)){
            if (GetPlayerController(indexPlayer103) == MAP_CONTROL_COMPUTER289){
                SetPlayerAlliance(whichPlayer191, indexPlayer103, ALLIANCE_SHARED_VISION130, true)
                SetPlayerAlliance(whichPlayer191, indexPlayer103, ALLIANCE_SHARED_CONTROL326, true)
                SetPlayerAlliance(whichPlayer191, indexPlayer103, ALLIANCE_SHARED_ADVANCED_CONTROL194, true)
            } else {
            }
        } else {
        }
        playerIndex327 = (playerIndex327 + 1)
        exitwhen (playerIndex327 == bj_MAX_PLAYERS403)
    }
}


function GetAIDifficulty(player num679) returns aidifficulty{ 
}


function StartMeleeAI(player num253, string script165) returns void{ 
}


function MeleeStartingUnitsForPlayer(race whichRace304, player whichPlayer937, location loc289, boolean doHeroes111) returns void{ 
    if (whichRace304 == RACE_HUMAN790){
        MeleeStartingUnitsHuman(whichPlayer937, loc289, doHeroes111, false, false)
    } else {
        if (whichRace304 == RACE_ORC107){
            MeleeStartingUnitsOrc(whichPlayer937, loc289, doHeroes111, false, false)
        } else {
            if (whichRace304 == RACE_UNDEAD456){
                MeleeStartingUnitsUndead(whichPlayer937, loc289, doHeroes111, false, false)
            } else {
                if (whichRace304 == RACE_NIGHTELF389){
                    MeleeStartingUnitsNightElf(whichPlayer937, loc289, doHeroes111, false, false)
                } else {
                }
            }
        }
    }
}


function MeleeStartingUnitsHuman(player whichPlayer294, location startLoc114, boolean doHeroes776, boolean doCamera218, boolean doPreload228) returns void{ 
    local boolean useRandomHero224
    local real unitSpacing224
    local unit nearestMine104
    local location nearMineLoc444
    local location heroLoc216
    local real peonX254
    local real peonY152
    local unit townHall149
    useRandomHero224 = IsMapFlagSet(MAP_RANDOM_HERO272)
    unitSpacing224 = 64.00
    null
    null
    null
    null
    null
    townHall149 = null
    if doPreload228{
        Preloader("scripts\HumanMelee.pld")
    } else {
    }
    nearestMine104 = MeleeFindNearestMine(startLoc114, bj_MELEE_MINE_SEARCH_RADIUS233)
    if (nearestMine104 != null){
        townHall149 = CreateUnitAtLoc(whichPlayer294, 1752461175, startLoc114, bj_UNIT_FACING166)
        nearMineLoc444 = MeleeGetProjectedLoc(GetUnitLoc(nearestMine104), startLoc114, 320., 0.)
        peonX254 = GetLocationX(nearMineLoc444)
        peonY152 = GetLocationY(nearMineLoc444)
        CreateUnit(whichPlayer294, 1752196449, (peonX254 + (0.00 * unitSpacing224)), (peonY152 + (1.00 * unitSpacing224)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer294, 1752196449, (peonX254 + (1.00 * unitSpacing224)), (peonY152 + (0.15 * unitSpacing224)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer294, 1752196449, (peonX254 - (1.00 * unitSpacing224)), (peonY152 + (0.15 * unitSpacing224)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer294, 1752196449, (peonX254 + (0.60 * unitSpacing224)), (peonY152 - (1.00 * unitSpacing224)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer294, 1752196449, (peonX254 - (0.60 * unitSpacing224)), (peonY152 - (1.00 * unitSpacing224)), bj_UNIT_FACING166)
        heroLoc216 = MeleeGetProjectedLoc(GetUnitLoc(nearestMine104), startLoc114, 384., 45.)
    } else {
        townHall149 = CreateUnitAtLoc(whichPlayer294, 1752461175, startLoc114, bj_UNIT_FACING166)
        peonX254 = GetLocationX(startLoc114)
        peonY152 = (GetLocationY(startLoc114) - 224.00)
        CreateUnit(whichPlayer294, 1752196449, (peonX254 + (2.00 * unitSpacing224)), (peonY152 + (0.00 * unitSpacing224)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer294, 1752196449, (peonX254 + (1.00 * unitSpacing224)), (peonY152 + (0.00 * unitSpacing224)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer294, 1752196449, (peonX254 + (0.00 * unitSpacing224)), (peonY152 + (0.00 * unitSpacing224)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer294, 1752196449, (peonX254 - (1.00 * unitSpacing224)), (peonY152 + (0.00 * unitSpacing224)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer294, 1752196449, (peonX254 - (2.00 * unitSpacing224)), (peonY152 + (0.00 * unitSpacing224)), bj_UNIT_FACING166)
        heroLoc216 = Location(peonX254, (peonY152 - (2.00 * unitSpacing224)))
    }
    if (townHall149 != null){
        UnitAddAbilityBJ(1097689443, townHall149)
        UnitMakeAbilityPermanentBJ(true, 1097689443, townHall149)
    } else {
    }
    if doHeroes776{
        if useRandomHero224{
            MeleeRandomHeroLoc(whichPlayer294, 1214344551, 1215130471, 1215324524, 1214409837, heroLoc216)
        } else {
            SetPlayerState(whichPlayer294, PLAYER_STATE_RESOURCE_HERO_TOKENS173, bj_MELEE_STARTING_HERO_TOKENS328)
        }
    } else {
    }
    if doCamera218{
        SetCameraPositionForPlayer(whichPlayer294, peonX254, peonY152)
        SetCameraQuickPositionForPlayer(whichPlayer294, peonX254, peonY152)
    } else {
    }
}


function MeleeStartingUnitsOrc(player whichPlayer220, location startLoc760, boolean doHeroes731, boolean doCamera182, boolean doPreload829) returns void{ 
    local boolean useRandomHero334
    local real unitSpacing333
    local unit nearestMine118
    local location nearMineLoc600
    local location heroLoc160
    local real peonX685
    local real peonY547
    useRandomHero334 = IsMapFlagSet(MAP_RANDOM_HERO272)
    unitSpacing333 = 64.00
    null
    null
    null
    null
    null
    if doPreload829{
        Preloader("scripts\OrcMelee.pld")
    } else {
    }
    nearestMine118 = MeleeFindNearestMine(startLoc760, bj_MELEE_MINE_SEARCH_RADIUS233)
    if (nearestMine118 != null){
        CreateUnitAtLoc(whichPlayer220, 1869050469, startLoc760, bj_UNIT_FACING166)
        nearMineLoc600 = MeleeGetProjectedLoc(GetUnitLoc(nearestMine118), startLoc760, 320., 0.)
        peonX685 = GetLocationX(nearMineLoc600)
        peonY547 = GetLocationY(nearMineLoc600)
        CreateUnit(whichPlayer220, 1869636975, (peonX685 + (0.00 * unitSpacing333)), (peonY547 + (1.00 * unitSpacing333)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer220, 1869636975, (peonX685 + (1.00 * unitSpacing333)), (peonY547 + (0.15 * unitSpacing333)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer220, 1869636975, (peonX685 - (1.00 * unitSpacing333)), (peonY547 + (0.15 * unitSpacing333)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer220, 1869636975, (peonX685 + (0.60 * unitSpacing333)), (peonY547 - (1.00 * unitSpacing333)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer220, 1869636975, (peonX685 - (0.60 * unitSpacing333)), (peonY547 - (1.00 * unitSpacing333)), bj_UNIT_FACING166)
        heroLoc160 = MeleeGetProjectedLoc(GetUnitLoc(nearestMine118), startLoc760, 384., 45.)
    } else {
        CreateUnitAtLoc(whichPlayer220, 1869050469, startLoc760, bj_UNIT_FACING166)
        peonX685 = GetLocationX(startLoc760)
        peonY547 = (GetLocationY(startLoc760) - 224.00)
        CreateUnit(whichPlayer220, 1869636975, (peonX685 + (2.00 * unitSpacing333)), (peonY547 + (0.00 * unitSpacing333)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer220, 1869636975, (peonX685 + (1.00 * unitSpacing333)), (peonY547 + (0.00 * unitSpacing333)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer220, 1869636975, (peonX685 + (0.00 * unitSpacing333)), (peonY547 + (0.00 * unitSpacing333)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer220, 1869636975, (peonX685 - (1.00 * unitSpacing333)), (peonY547 + (0.00 * unitSpacing333)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer220, 1869636975, (peonX685 - (2.00 * unitSpacing333)), (peonY547 + (0.00 * unitSpacing333)), bj_UNIT_FACING166)
        heroLoc160 = Location(peonX685, (peonY547 - (2.00 * unitSpacing333)))
    }
    if doHeroes731{
        if useRandomHero334{
            MeleeRandomHeroLoc(whichPlayer220, 1331850337, 1332109682, 1333027688, 1332963428, heroLoc160)
        } else {
            SetPlayerState(whichPlayer220, PLAYER_STATE_RESOURCE_HERO_TOKENS173, bj_MELEE_STARTING_HERO_TOKENS328)
        }
    } else {
    }
    if doCamera182{
        SetCameraPositionForPlayer(whichPlayer220, peonX685, peonY547)
        SetCameraQuickPositionForPlayer(whichPlayer220, peonX685, peonY547)
    } else {
    }
}


function MeleeStartingUnitsUndead(player whichPlayer349, location startLoc203, boolean doHeroes190, boolean doCamera295, boolean doPreload918) returns void{ 
    local boolean useRandomHero225
    local real unitSpacing241
    local unit nearestMine191
    local location nearMineLoc317
    local location nearTownLoc285
    local location heroLoc610
    local real peonX545
    local real peonY208
    local real ghoulX207
    local real ghoulY155
    useRandomHero225 = IsMapFlagSet(MAP_RANDOM_HERO272)
    unitSpacing241 = 64.00
    null
    null
    null
    null
    null
    null
    null
    null
    if doPreload918{
        Preloader("scripts\UndeadMelee.pld")
    } else {
    }
    nearestMine191 = MeleeFindNearestMine(startLoc203, bj_MELEE_MINE_SEARCH_RADIUS233)
    if (nearestMine191 != null){
        CreateUnitAtLoc(whichPlayer349, 1970172012, startLoc203, bj_UNIT_FACING166)
        nearestMine191 = BlightGoldMineForPlayerBJ(nearestMine191, whichPlayer349)
        nearTownLoc285 = MeleeGetProjectedLoc(startLoc203, GetUnitLoc(nearestMine191), 288., 0.)
        ghoulX207 = GetLocationX(nearTownLoc285)
        ghoulY155 = GetLocationY(nearTownLoc285)
        bj_ghoul302[GetPlayerId(whichPlayer349)] = CreateUnit(whichPlayer349, 1969711215, (ghoulX207 + (0.00 * unitSpacing241)), (ghoulY155 + (0.00 * unitSpacing241)), bj_UNIT_FACING166)
        nearMineLoc317 = MeleeGetProjectedLoc(GetUnitLoc(nearestMine191), startLoc203, 320., 0.)
        peonX545 = GetLocationX(nearMineLoc317)
        peonY208 = GetLocationY(nearMineLoc317)
        CreateUnit(whichPlayer349, 1969316719, (peonX545 + (0.00 * unitSpacing241)), (peonY208 + (0.50 * unitSpacing241)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer349, 1969316719, (peonX545 + (0.65 * unitSpacing241)), (peonY208 - (0.50 * unitSpacing241)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer349, 1969316719, (peonX545 - (0.65 * unitSpacing241)), (peonY208 - (0.50 * unitSpacing241)), bj_UNIT_FACING166)
        SetBlightLoc(whichPlayer349, nearMineLoc317, 768., true)
        heroLoc610 = MeleeGetProjectedLoc(GetUnitLoc(nearestMine191), startLoc203, 384., 45.)
    } else {
        CreateUnitAtLoc(whichPlayer349, 1970172012, startLoc203, bj_UNIT_FACING166)
        peonX545 = GetLocationX(startLoc203)
        peonY208 = (GetLocationY(startLoc203) - 224.00)
        CreateUnit(whichPlayer349, 1969316719, (peonX545 - (1.50 * unitSpacing241)), (peonY208 + (0.00 * unitSpacing241)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer349, 1969316719, (peonX545 - (0.50 * unitSpacing241)), (peonY208 + (0.00 * unitSpacing241)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer349, 1969316719, (peonX545 + (0.50 * unitSpacing241)), (peonY208 + (0.00 * unitSpacing241)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer349, 1969711215, (peonX545 + (1.50 * unitSpacing241)), (peonY208 + (0.00 * unitSpacing241)), bj_UNIT_FACING166)
        SetBlightLoc(whichPlayer349, startLoc203, 768., true)
        heroLoc610 = Location(peonX545, (peonY208 - (2.00 * unitSpacing241)))
    }
    if doHeroes190{
        if useRandomHero225{
            MeleeRandomHeroLoc(whichPlayer349, 1432642913, 1432646245, 1433168227, 1432580716, heroLoc610)
        } else {
            SetPlayerState(whichPlayer349, PLAYER_STATE_RESOURCE_HERO_TOKENS173, bj_MELEE_STARTING_HERO_TOKENS328)
        }
    } else {
    }
    if doCamera295{
        SetCameraPositionForPlayer(whichPlayer349, peonX545, peonY208)
        SetCameraQuickPositionForPlayer(whichPlayer349, peonX545, peonY208)
    } else {
    }
}


function MeleeStartingUnitsNightElf(player whichPlayer130, location startLoc237, boolean doHeroes122, boolean doCamera332, boolean doPreload316) returns void{ 
    local boolean useRandomHero220
    local real unitSpacing121
    local real minTreeDist322
    local real minWispDist392
    local unit nearestMine630
    local location nearMineLoc189
    local location wispLoc202
    local location heroLoc913
    local real peonX161
    local real peonY327
    local unit tree203
    useRandomHero220 = IsMapFlagSet(MAP_RANDOM_HERO272)
    unitSpacing121 = 64.00
    minTreeDist322 = (3.50 * bj_CELLWIDTH310)
    minWispDist392 = (1.75 * bj_CELLWIDTH310)
    null
    null
    null
    null
    null
    null
    null
    if doPreload316{
        Preloader("scripts\NightElfMelee.pld")
    } else {
    }
    nearestMine630 = MeleeFindNearestMine(startLoc237, bj_MELEE_MINE_SEARCH_RADIUS233)
    if (nearestMine630 != null){
        nearMineLoc189 = MeleeGetProjectedLoc(GetUnitLoc(nearestMine630), startLoc237, 650., 0.)
        nearMineLoc189 = MeleeGetLocWithinRect(nearMineLoc189, GetRectFromCircleBJ(GetUnitLoc(nearestMine630), minTreeDist322))
        tree203 = CreateUnitAtLoc(whichPlayer130, 1702129516, nearMineLoc189, bj_UNIT_FACING166)
        IssueTargetOrder(tree203, "entangleinstant", nearestMine630)
        wispLoc202 = MeleeGetProjectedLoc(GetUnitLoc(nearestMine630), startLoc237, 320., 0.)
        wispLoc202 = MeleeGetLocWithinRect(wispLoc202, GetRectFromCircleBJ(GetUnitLoc(nearestMine630), minWispDist392))
        peonX161 = GetLocationX(wispLoc202)
        peonY327 = GetLocationY(wispLoc202)
        CreateUnit(whichPlayer130, 1702327152, (peonX161 + (0.00 * unitSpacing121)), (peonY327 + (1.00 * unitSpacing121)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer130, 1702327152, (peonX161 + (1.00 * unitSpacing121)), (peonY327 + (0.15 * unitSpacing121)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer130, 1702327152, (peonX161 - (1.00 * unitSpacing121)), (peonY327 + (0.15 * unitSpacing121)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer130, 1702327152, (peonX161 + (0.58 * unitSpacing121)), (peonY327 - (1.00 * unitSpacing121)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer130, 1702327152, (peonX161 - (0.58 * unitSpacing121)), (peonY327 - (1.00 * unitSpacing121)), bj_UNIT_FACING166)
        heroLoc913 = MeleeGetProjectedLoc(GetUnitLoc(nearestMine630), startLoc237, 384., 45.)
    } else {
        CreateUnitAtLoc(whichPlayer130, 1702129516, startLoc237, bj_UNIT_FACING166)
        peonX161 = GetLocationX(startLoc237)
        peonY327 = (GetLocationY(startLoc237) - 224.00)
        CreateUnit(whichPlayer130, 1702327152, (peonX161 - (2.00 * unitSpacing121)), (peonY327 + (0.00 * unitSpacing121)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer130, 1702327152, (peonX161 - (1.00 * unitSpacing121)), (peonY327 + (0.00 * unitSpacing121)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer130, 1702327152, (peonX161 + (0.00 * unitSpacing121)), (peonY327 + (0.00 * unitSpacing121)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer130, 1702327152, (peonX161 + (1.00 * unitSpacing121)), (peonY327 + (0.00 * unitSpacing121)), bj_UNIT_FACING166)
        CreateUnit(whichPlayer130, 1702327152, (peonX161 + (2.00 * unitSpacing121)), (peonY327 + (0.00 * unitSpacing121)), bj_UNIT_FACING166)
        heroLoc913 = Location(peonX161, (peonY327 - (2.00 * unitSpacing121)))
    }
    if doHeroes122{
        if useRandomHero220{
            MeleeRandomHeroLoc(whichPlayer130, 1164207469, 1164666213, 1164799855, 1165451634, heroLoc913)
        } else {
            SetPlayerState(whichPlayer130, PLAYER_STATE_RESOURCE_HERO_TOKENS173, bj_MELEE_STARTING_HERO_TOKENS328)
        }
    } else {
    }
    if doCamera332{
        SetCameraPositionForPlayer(whichPlayer130, peonX161, peonY327)
        SetCameraQuickPositionForPlayer(whichPlayer130, peonX161, peonY327)
    } else {
    }
}


function MeleeStartingUnits() returns void{ 
    local integer index961
    local player indexPlayer164
    local location indexStartLoc132
    local race indexRace921
    null
    null
    null
    null
    Preloader("scripts\SharedMelee.pld")
    index961 = 0
    loop {
        indexPlayer164 = Player(index961)
        if (GetPlayerSlotState(indexPlayer164) == PLAYER_SLOT_STATE_PLAYING211){
            indexStartLoc132 = GetStartLocationLoc(GetPlayerStartLocation(indexPlayer164))
            indexRace921 = GetPlayerRace(indexPlayer164)
            if (indexRace921 == RACE_HUMAN790){
                MeleeStartingUnitsHuman(indexPlayer164, indexStartLoc132, true, true, true)
            } else {
                if (indexRace921 == RACE_ORC107){
                    MeleeStartingUnitsOrc(indexPlayer164, indexStartLoc132, true, true, true)
                } else {
                    if (indexRace921 == RACE_UNDEAD456){
                        MeleeStartingUnitsUndead(indexPlayer164, indexStartLoc132, true, true, true)
                    } else {
                        if (indexRace921 == RACE_NIGHTELF389){
                            MeleeStartingUnitsNightElf(indexPlayer164, indexStartLoc132, true, true, true)
                        } else {
                            MeleeStartingUnitsUnknownRace(indexPlayer164, indexStartLoc132, true, true, true)
                        }
                    }
                }
            }
        } else {
        }
        index961 = (index961 + 1)
        exitwhen (index961 == bj_MAX_PLAYERS403)
    }
}


function Preloader(string filename307) returns void{ 
}


function GetPlayerStartLocation(player whichPlayer232) returns integer{ 
}


function GetStartLocationLoc(integer whichStartLocation140) returns location{ 
}


function MeleeStartingUnitsUnknownRace(player whichPlayer447, location startLoc284, boolean doHeroes788, boolean doCamera256, boolean doPreload239) returns void{ 
    local integer index282
    null
    if doPreload239{
    } else {
    }
    index282 = 0
    loop {
        CreateUnit(whichPlayer447, 1853057125, (GetLocationX(startLoc284) + GetRandomReal((- 256), 256.)), (GetLocationY(startLoc284) + GetRandomReal((- 256), 256.)), GetRandomReal(0., 360.))
        index282 = (index282 + 1)
        exitwhen (index282 == 12)
    }
    if doHeroes788{
        SetPlayerState(whichPlayer447, PLAYER_STATE_RESOURCE_HERO_TOKENS173, bj_MELEE_STARTING_HERO_TOKENS328)
    } else {
    }
    if doCamera256{
        SetCameraPositionLocForPlayer(whichPlayer447, startLoc284)
        SetCameraQuickPositionLocForPlayer(whichPlayer447, startLoc284)
    } else {
    }
}


function GetLocationX(location whichLocation145) returns real{ 
}


function GetLocationY(location whichLocation334) returns real{ 
}


function CreateUnit(player id325, integer unitid627, real x446, real y691, real face292) returns unit{ 
}


function SetPlayerState(player whichPlayer130, playerstate whichPlayerState820, integer value101) returns void{ 
}


function SetCameraPositionLocForPlayer(player whichPlayer185, location loc105) returns void{ 
    if (GetLocalPlayer() == whichPlayer185){
        SetCameraPosition(GetLocationX(loc105), GetLocationY(loc105))
    } else {
    }
}


function SetCameraQuickPositionLocForPlayer(player whichPlayer824, location loc166) returns void{ 
    if (GetLocalPlayer() == whichPlayer824){
        SetCameraQuickPosition(GetLocationX(loc166), GetLocationY(loc166))
    } else {
    }
}


function IsMapFlagSet(mapflag whichMapFlag131) returns boolean{ 
}


function MeleeFindNearestMine(location src337, real range276) returns unit{ 
    local group nearbyMines324
    null
    bj_meleeNearestMine660 = null
    bj_meleeNearestMineDist165 = (- 1)
    bj_meleeNearestMineToLoc276 = src337
    nearbyMines324 = CreateGroup()
    GroupEnumUnitsInRangeOfLoc(nearbyMines324, src337, range276, null)
    ForGroup(nearbyMines324, function MeleeEnumFindNearestMine)
    DestroyGroup(nearbyMines324)
    return bj_meleeNearestMine660
}


function GetUnitLoc(unit whichUnit764) returns location{ 
}


function MeleeGetProjectedLoc(location src237, location targ198, real distance109, real deltaAngle226) returns location{ 
    local real srcX213
    local real srcY298
    local real direction184
    srcX213 = GetLocationX(src237)
    srcY298 = GetLocationY(src237)
    direction184 = (Atan2((GetLocationY(targ198) - srcY298), (GetLocationX(targ198) - srcX213)) + deltaAngle226)
    return Location((srcX213 + (distance109 * Cos(direction184))), (srcY298 + (distance109 * Sin(direction184))))
}


function GetRectFromCircleBJ(location center420, real radius190) returns rect{ 
    local real centerX258
    local real centerY222
    centerX258 = GetLocationX(center420)
    centerY222 = GetLocationY(center420)
    return Rect((centerX258 - radius190), (centerY222 - radius190), (centerX258 + radius190), (centerY222 + radius190))
}


function MeleeGetLocWithinRect(location src306, rect r192) returns location{ 
    local real withinX104
    local real withinY188
    withinX104 = MeleeGetNearestValueWithin(GetLocationX(src306), GetRectMinX(r192), GetRectMaxX(r192))
    withinY188 = MeleeGetNearestValueWithin(GetLocationY(src306), GetRectMinY(r192), GetRectMaxY(r192))
    return Location(withinX104, withinY188)
}


function CreateUnitAtLoc(player id795, integer unitid200, location whichLocation220, real face143) returns unit{ 
}


function IssueTargetOrder(unit whichUnit141, string order179, widget targetWidget129) returns boolean{ 
}


function Location(real x764, real y175) returns location{ 
}


function MeleeRandomHeroLoc(player p290, integer id1322, integer id2175, integer id3103, integer id4149, location loc288) returns unit{ 
    local unit hero154
    local integer roll316
    local integer pick356
    local version v131
    hero154 = null
    null
    null
    null
    v131 = VersionGet()
    if (v131 == VERSION_REIGN_OF_CHAOS265){
        roll316 = GetRandomInt(1, 3)
    } else {
        roll316 = GetRandomInt(1, 4)
    }
    if (roll316 == 1){
        pick356 = id1322
    } else {
        if (roll316 == 2){
            pick356 = id2175
        } else {
            if (roll316 == 3){
                pick356 = id3103
            } else {
                if (roll316 == 4){
                    pick356 = id4149
                } else {
                    pick356 = id1322
                }
            }
        }
    }
    hero154 = CreateUnitAtLoc(p290, pick356, loc288, bj_UNIT_FACING166)
    if bj_meleeGrantHeroItems130{
        MeleeGrantItemsToHero(hero154)
    } else {
    }
    return hero154
}


function SetCameraPositionForPlayer(player whichPlayer316, real x250, real y114) returns void{ 
    if (GetLocalPlayer() == whichPlayer316){
        SetCameraPosition(x250, y114)
    } else {
    }
}


function SetCameraQuickPositionForPlayer(player whichPlayer187, real x791, real y108) returns void{ 
    if (GetLocalPlayer() == whichPlayer187){
        SetCameraQuickPosition(x791, y108)
    } else {
    }
}


function BlightGoldMineForPlayerBJ(unit goldMine175, player whichPlayer335) returns unit{ 
    local real mineX921
    local real mineY591
    local integer mineGold614
    local unit newMine225
    null
    null
    null
    null
    if (GetUnitTypeId(goldMine175) != 1852272492){
        return null
    } else {
    }
    mineX921 = GetUnitX(goldMine175)
    mineY591 = GetUnitY(goldMine175)
    mineGold614 = GetResourceAmount(goldMine175)
    RemoveUnit(goldMine175)
    newMine225 = CreateBlightedGoldmine(whichPlayer335, mineX921, mineY591, bj_UNIT_FACING166)
    SetResourceAmount(newMine225, mineGold614)
    return newMine225
}


function SetBlightLoc(player whichPlayer145, location whichLocation832, real radius188, boolean addBlight204) returns void{ 
}


function UnitAddAbilityBJ(integer abilityId323, unit whichUnit325) returns boolean{ 
    return UnitAddAbility(whichUnit325, abilityId323)
}


function UnitMakeAbilityPermanentBJ(boolean permanent419, integer abilityId309, unit whichUnit302) returns boolean{ 
    return UnitMakeAbilityPermanent(whichUnit302, permanent419, abilityId309)
}


function GetRectMinX(rect whichRect275) returns real{ 
}


function GetRectMaxX(rect whichRect223) returns real{ 
}


function MeleeGetNearestValueWithin(real val207, real minVal135, real maxVal262) returns real{ 
    if (val207 < minVal135){
        return minVal135
    } else {
        if (val207 > maxVal262){
            return maxVal262
        } else {
            return val207
        }
    }
}


function GetRectMinY(rect whichRect489) returns real{ 
}


function GetRectMaxY(rect whichRect334) returns real{ 
}


function Atan2(real y140, real x253) returns real{ 
}


function Cos(real radians292) returns real{ 
}


function Sin(real radians324) returns real{ 
}


function MeleeGrantItemsToHero(unit whichUnit285) returns void{ 
    local integer owner116
    owner116 = GetPlayerId(GetOwningPlayer(whichUnit285))
    if (bj_meleeTwinkedHeroes125[owner116] < bj_MELEE_MAX_TWINKED_HEROES187){
        UnitAddItemById(whichUnit285, 1937012592)
        bj_meleeTwinkedHeroes125[owner116] = (bj_meleeTwinkedHeroes125[owner116] + 1)
    } else {
    }
}


function GroupEnumUnitsInRangeOfLoc(group whichGroup265, location whichLocation136, real radius232, boolexpr filter299) returns void{ 
}


function MeleeEnumFindNearestMine() returns void{ 
    local unit enumUnit240
    local real dist187
    local location unitLoc106
    enumUnit240 = GetEnumUnit()
    null
    null
    if (GetUnitTypeId(enumUnit240) == 1852272492){
        unitLoc106 = GetUnitLoc(enumUnit240)
        dist187 = DistanceBetweenPoints(unitLoc106, bj_meleeNearestMineToLoc276)
        RemoveLocation(unitLoc106)
        if ((bj_meleeNearestMineDist165 < 0.) or (dist187 < bj_meleeNearestMineDist165)){
            bj_meleeNearestMine660 = enumUnit240
            bj_meleeNearestMineDist165 = dist187
        } else {
        }
    } else {
    }
}


function DistanceBetweenPoints(location locA237, location locB151) returns real{ 
    local real dx192
    local real dy154
    dx192 = (GetLocationX(locB151) - GetLocationX(locA237))
    dy154 = (GetLocationY(locB151) - GetLocationY(locA237))
    return SquareRoot(((dx192 * dx192) + (dy154 * dy154)))
}


function RemoveLocation(location whichLocation129) returns void{ 
}


function MeleeClearExcessUnits() returns void{ 
    local integer index715
    local real locX248
    local real locY448
    local player indexPlayer134
    null
    null
    null
    null
    index715 = 0
    loop {
        indexPlayer134 = Player(index715)
        if (GetPlayerSlotState(indexPlayer134) == PLAYER_SLOT_STATE_PLAYING211){
            locX248 = GetStartLocationX(GetPlayerStartLocation(indexPlayer134))
            locY448 = GetStartLocationY(GetPlayerStartLocation(indexPlayer134))
            MeleeClearNearbyUnits(locX248, locY448, bj_MELEE_CLEAR_UNITS_RADIUS151)
        } else {
        }
        index715 = (index715 + 1)
        exitwhen (index715 == bj_MAX_PLAYERS403)
    }
}


function GetStartLocationX(integer whichStartLocation220) returns real{ 
}


function GetStartLocationY(integer whichStartLocation191) returns real{ 
}


function MeleeClearNearbyUnits(real x163, real y611, real range157) returns void{ 
    local group nearbyUnits194
    null
    nearbyUnits194 = CreateGroup()
    GroupEnumUnitsInRange(nearbyUnits194, x163, y611, range157, null)
    ForGroup(nearbyUnits194, function MeleeClearExcessUnit)
    DestroyGroup(nearbyUnits194)
}


function GroupEnumUnitsInRange(group whichGroup112, real x556, real y295, real radius158, boolexpr filter282) returns void{ 
}


function MeleeClearExcessUnit() returns void{ 
    local unit theUnit911
    local integer owner310
    theUnit911 = GetEnumUnit()
    owner310 = GetPlayerId(GetOwningPlayer(theUnit911))
    if (owner310 == PLAYER_NEUTRAL_AGGRESSIVE139){
        RemoveUnit(GetEnumUnit())
    } else {
        if (owner310 == PLAYER_NEUTRAL_PASSIVE452){
            if (not IsUnitType(theUnit911, UNIT_TYPE_STRUCTURE273)){
                RemoveUnit(GetEnumUnit())
            } else {
            }
        } else {
        }
    }
}


function RemoveUnit(unit whichUnit264) returns void{ 
}


function MeleeGrantHeroItems() returns void{ 
    local integer index324
    local trigger trig270
    null
    null
    index324 = 0
    loop {
        bj_meleeTwinkedHeroes125[index324] = 0
        index324 = (index324 + 1)
        exitwhen (index324 == bj_MAX_PLAYER_SLOTS129)
    }
    index324 = 0
    loop {
        trig270 = CreateTrigger()
        TriggerRegisterPlayerUnitEvent(trig270, Player(index324), EVENT_PLAYER_UNIT_TRAIN_FINISH137, filterMeleeTrainedUnitIsHeroBJ318)
        TriggerAddAction(trig270, function MeleeGrantItemsToTrainedHero)
        index324 = (index324 + 1)
        exitwhen (index324 == bj_MAX_PLAYERS403)
    }
    trig270 = CreateTrigger()
    TriggerRegisterPlayerUnitEvent(trig270, Player(PLAYER_NEUTRAL_PASSIVE452), EVENT_PLAYER_UNIT_SELL521, filterMeleeTrainedUnitIsHeroBJ318)
    TriggerAddAction(trig270, function MeleeGrantItemsToHiredHero)
    bj_meleeGrantHeroItems130 = true
}


function MeleeGrantItemsToTrainedHero() returns void{ 
    MeleeGrantItemsToHero(GetTrainedUnit())
}


function MeleeGrantItemsToHiredHero() returns void{ 
    MeleeGrantItemsToHero(GetSoldUnit())
}


function GetSoldUnit() returns unit{ 
}


function GetTrainedUnit() returns unit{ 
}


function UnitAddItemById(unit whichUnit192, integer itemId119) returns item{ 
}


function GetFilterUnit() returns unit{ 
}


function MeleeStartingHeroLimit() returns void{ 
    local integer index553
    null
    index553 = 0
    loop {
        SetPlayerMaxHeroesAllowed(bj_MELEE_HERO_LIMIT920, Player(index553))
        ReducePlayerTechMaxAllowed(Player(index553), 1214344551, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1215130471, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1215324524, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1214409837, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1331850337, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1332109682, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1333027688, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1332963428, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1164207469, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1164666213, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1164799855, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1165451634, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1432642913, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1432646245, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1433168227, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1432580716, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1315988077, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1315074670, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1315858291, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1315990632, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1315074932, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1315007587, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1316252014, bj_MELEE_HERO_TYPE_LIMIT441)
        ReducePlayerTechMaxAllowed(Player(index553), 1315334514, bj_MELEE_HERO_TYPE_LIMIT441)
        index553 = (index553 + 1)
        exitwhen (index553 == bj_MAX_PLAYERS403)
    }
}


function SetPlayerMaxHeroesAllowed(integer maximum126, player whichPlayer335) returns void{ 
    SetPlayerTechMaxAllowed(whichPlayer335, 1212502607, maximum126)
}


function ReducePlayerTechMaxAllowed(player whichPlayer201, integer techId769, integer limit733) returns void{ 
    local integer oldMax127
    oldMax127 = GetPlayerTechMaxAllowed(whichPlayer201, techId769)
    if ((oldMax127 < 0) or (oldMax127 > limit733)){
        SetPlayerTechMaxAllowed(whichPlayer201, techId769, limit733)
    } else {
    }
}


function GetPlayerTechMaxAllowed(player whichPlayer115, integer techid173) returns integer{ 
}


function MeleeStartingResources() returns void{ 
    local integer index727
    local player indexPlayer135
    local version v142
    local integer startingGold133
    local integer startingLumber130
    null
    null
    null
    null
    null
    v142 = VersionGet()
    if (v142 == VERSION_REIGN_OF_CHAOS265){
        startingGold133 = bj_MELEE_STARTING_GOLD_V0156
        startingLumber130 = bj_MELEE_STARTING_LUMBER_V0458
    } else {
        startingGold133 = bj_MELEE_STARTING_GOLD_V1139
        startingLumber130 = bj_MELEE_STARTING_LUMBER_V1305
    }
    index727 = 0
    loop {
        indexPlayer135 = Player(index727)
        if (GetPlayerSlotState(indexPlayer135) == PLAYER_SLOT_STATE_PLAYING211){
            SetPlayerState(indexPlayer135, PLAYER_STATE_RESOURCE_GOLD332, startingGold133)
            SetPlayerState(indexPlayer135, PLAYER_STATE_RESOURCE_LUMBER277, startingLumber130)
        } else {
        }
        index727 = (index727 + 1)
        exitwhen (index727 == bj_MAX_PLAYERS403)
    }
}


function MeleeStartingVisibility() returns void{ 
    SetFloatGameState(GAME_STATE_TIME_OF_DAY906, bj_MELEE_STARTING_TOD142)
}


function SetFloatGameState(fgamestate whichFloatGameState299, real value298) returns void{ 
}


function GetAbilityName(integer abilcode188) returns string{ 
    return GetObjectName(abilcode188)
}


function GetObjectName(integer objectId801) returns string{ 
}


function SetBlightRadiusLocBJ(boolean addBlight542, player whichPlayer324, location loc152, real radius196) returns void{ 
    SetBlightLoc(whichPlayer324, loc152, radius196, addBlight542)
}


function SetBlightRectBJ(boolean addBlight125, player whichPlayer306, rect r101) returns void{ 
    SetBlightRect(whichPlayer306, r101, addBlight125)
}


function SetBlightRect(player whichPlayer276, rect r239, boolean addBlight346) returns void{ 
}


function SaveDyingWidget() returns void{ 
    bj_lastDyingWidget156 = GetTriggerWidget()
}


function GetTriggerWidget() returns widget{ 
}


function SetUnitRallyDestructable(unit whichUnit852, destructable targDest146) returns void{ 
    IssueTargetOrder(whichUnit852, "setrally", targDest146)
}


function SetUnitRallyUnit(unit whichUnit234, unit targUnit157) returns void{ 
    IssueTargetOrder(whichUnit234, "setrally", targUnit157)
}


function SetUnitRallyPoint(unit whichUnit977, location targPos203) returns void{ 
    IssuePointOrderLocBJ(whichUnit977, "setrally", targPos203)
}


function IssuePointOrderLocBJ(unit whichUnit193, string order370, location whichLocation295) returns boolean{ 
    return IssuePointOrderLoc(whichUnit193, order370, whichLocation295)
}


function GetDyingDestructable() returns destructable{ 
    return GetTriggerDestructable()
}


function GetTriggerDestructable() returns destructable{ 
}


function GroupTargetItemOrder(group whichGroup291, string order111, widget targetWidget319) returns boolean{ 
    return GroupTargetOrder(whichGroup291, order111, targetWidget319)
}


function GroupTargetOrder(group whichGroup289, string order142, widget targetWidget332) returns boolean{ 
}


function GroupTargetDestructableOrder(group whichGroup235, string order126, widget targetWidget539) returns boolean{ 
    return GroupTargetOrder(whichGroup235, order126, targetWidget539)
}


function GroupImmediateOrderBJ(group whichGroup183, string order138) returns boolean{ 
    return GroupImmediateOrder(whichGroup183, order138)
}


function GroupImmediateOrder(group whichGroup754, string order257) returns boolean{ 
}


function GroupPointOrderLocBJ(group whichGroup204, string order111, location whichLocation777) returns boolean{ 
    return GroupPointOrderLoc(whichGroup204, order111, whichLocation777)
}


function GroupPointOrderLoc(group whichGroup942, string order328, location whichLocation312) returns boolean{ 
}


function GroupTargetOrderBJ(group whichGroup789, string order810, widget targetWidget242) returns boolean{ 
    return GroupTargetOrder(whichGroup789, order810, targetWidget242)
}


function IssueImmediateOrderBJ(unit whichUnit931, string order327) returns boolean{ 
    return IssueImmediateOrder(whichUnit931, order327)
}


function IssueImmediateOrder(unit whichUnit150, string order204) returns boolean{ 
}


function IssueTargetItemOrder(unit whichUnit310, string order262, widget targetWidget206) returns boolean{ 
    return IssueTargetOrder(whichUnit310, order262, targetWidget206)
}


function IssueTargetDestructableOrder(unit whichUnit205, string order975, widget targetWidget200) returns boolean{ 
    return IssueTargetOrder(whichUnit205, order975, targetWidget200)
}


function IssuePointOrderLoc(unit whichUnit229, string order267, location whichLocation133) returns boolean{ 
}


function IssueTargetOrderBJ(unit whichUnit298, string order279, widget targetWidget885) returns boolean{ 
    return IssueTargetOrder(whichUnit298, order279, targetWidget885)
}


function UnlockGameSpeedBJ() returns void{ 
    SetMapFlag(MAP_LOCK_SPEED243, false)
}


function SetMapFlag(mapflag whichMapFlag212, boolean value183) returns void{ 
}


function LockGameSpeedBJ() returns void{ 
    SetMapFlag(MAP_LOCK_SPEED243, true)
}


function SetPlayerUnitAvailableBJ(integer unitId190, boolean allowed147, player whichPlayer229) returns void{ 
    if allowed147{
        SetPlayerTechMaxAllowed(whichPlayer229, unitId190, (- 1))
    } else {
        SetPlayerTechMaxAllowed(whichPlayer229, unitId190, 0)
    }
}


function SetPlayerColorBJ(player whichPlayer985, playercolor color227, boolean changeExisting311) returns void{ 
    local group g315
    null
    SetPlayerColor(whichPlayer985, color227)
    if changeExisting311{
        bj_setPlayerTargetColor174 = color227
        g315 = CreateGroup()
        GroupEnumUnitsOfPlayer(g315, whichPlayer985, null)
        ForGroup(g315, function SetPlayerColorBJEnum)
        DestroyGroup(g315)
    } else {
    }
}


function SetPlayerColor(player whichPlayer333, playercolor color174) returns void{ 
}


function GroupEnumUnitsOfPlayer(group whichGroup170, player whichPlayer282, boolexpr filter252) returns void{ 
}


function SetPlayerColorBJEnum() returns void{ 
    SetUnitColor(GetEnumUnit(), bj_setPlayerTargetColor174)
}


function SetUnitColor(unit whichUnit826, playercolor whichColor915) returns void{ 
}


function IsPointBlightedBJ(location where919) returns boolean{ 
    return IsPointBlighted(GetLocationX(where919), GetLocationY(where919))
}


function IsPointBlighted(real x239, real y159) returns boolean{ 
}


function GetLastHauntedGoldMine() returns unit{ 
    return bj_lastHauntedGoldMine208
}


function BlightGoldMineForPlayer(unit goldMine180, player whichPlayer257) returns unit{ 
    bj_lastHauntedGoldMine208 = BlightGoldMineForPlayerBJ(goldMine180, whichPlayer257)
    return bj_lastHauntedGoldMine208
}


function GetResourceAmount(unit whichUnit182) returns integer{ 
}


function CreateBlightedGoldmine(player id174, real x215, real y189, real face121) returns unit{ 
}


function SetResourceAmount(unit whichUnit142, integer amount317) returns void{ 
}


function GetRectHeightBJ(rect r270) returns real{ 
    return (GetRectMaxY(r270) - GetRectMinY(r270))
}


function GetRectWidthBJ(rect r294) returns real{ 
    return (GetRectMaxX(r294) - GetRectMinX(r294))
}


function ConvertedPlayer(integer convertedPlayerId701) returns player{ 
    return Player((convertedPlayerId701 - 1))
}


function GetConvertedPlayerId(player whichPlayer167) returns integer{ 
    return (GetPlayerId(whichPlayer167) + 1)
}


function AddResourceAmountBJ(integer delta134, unit whichUnit998) returns void{ 
    AddResourceAmount(whichUnit998, delta134)
}


function AddResourceAmount(unit whichUnit398, integer amount231) returns void{ 
}


function IsPlayerFlagSetBJ(playerstate whichPlayerFlag179, player whichPlayer253) returns boolean{ 
    return (GetPlayerState(whichPlayer253, whichPlayerFlag179) == 1)
}


function GetPlayerTaxRateBJ(playerstate whichResource331, player sourcePlayer181, player otherPlayer215) returns integer{ 
    return GetPlayerTaxRate(sourcePlayer181, otherPlayer215, whichResource331)
}


function GetPlayerTaxRate(player sourcePlayer827, player otherPlayer328, playerstate whichResource281) returns integer{ 
}


function SetPlayerTaxRateBJ(integer rate177, playerstate whichResource107, player sourcePlayer321, player otherPlayer209) returns void{ 
    SetPlayerTaxRate(sourcePlayer321, otherPlayer209, whichResource107, rate177)
}


function SetPlayerTaxRate(player sourcePlayer991, player otherPlayer203, playerstate whichResource110, integer rate162) returns void{ 
}


function SetPlayerFlagBJ(playerstate whichPlayerFlag573, boolean flag219, player whichPlayer895) returns void{ 
    SetPlayerState(whichPlayer895, whichPlayerFlag573, IntegerTertiaryOp(flag219, 1, 0))
}


function IntegerTertiaryOp(boolean flag308, integer valueA189, integer valueB240) returns integer{ 
    if flag308{
        return valueA189
    } else {
        return valueB240
    }
}


function SetPlayerStateBJ(player whichPlayer299, playerstate whichPlayerState262, integer value446) returns void{ 
    local integer oldValue123
    oldValue123 = GetPlayerState(whichPlayer299, whichPlayerState262)
    AdjustPlayerStateBJ((value446 - oldValue123), whichPlayer299, whichPlayerState262)
}


function AdjustPlayerStateBJ(integer delta145, player whichPlayer585, playerstate whichPlayerState251) returns void{ 
    if (delta145 > 0){
        if (whichPlayerState251 == PLAYER_STATE_RESOURCE_GOLD332){
            AdjustPlayerStateSimpleBJ(whichPlayer585, PLAYER_STATE_GOLD_GATHERED132, delta145)
        } else {
            if (whichPlayerState251 == PLAYER_STATE_RESOURCE_LUMBER277){
                AdjustPlayerStateSimpleBJ(whichPlayer585, PLAYER_STATE_LUMBER_GATHERED136, delta145)
            } else {
            }
        }
    } else {
    }
    AdjustPlayerStateSimpleBJ(whichPlayer585, whichPlayerState251, delta145)
}


function AdjustPlayerStateSimpleBJ(player whichPlayer937, playerstate whichPlayerState155, integer delta178) returns void{ 
    SetPlayerState(whichPlayer937, whichPlayerState155, (GetPlayerState(whichPlayer937, whichPlayerState155) + delta178))
}


function GetFadeFromSecondsAsReal(real seconds849) returns real{ 
    if (seconds849 != 0.){
        return (128.00 / seconds849)
    } else {
    }
    return 10000.00
}


function GetFadeFromSeconds(real seconds230) returns integer{ 
    if (seconds230 != 0.){
        return (128 / R2I(seconds230))
    } else {
    }
    return 10000
}


function R2I(real r709) returns integer{ 
}


function IsPlayerSlotState(player whichPlayer169, playerslotstate whichState286) returns boolean{ 
    return (GetPlayerSlotState(whichPlayer169) == whichState286)
}


function GetRectCenter(rect whichRect125) returns location{ 
    return Location(GetRectCenterX(whichRect125), GetRectCenterY(whichRect125))
}


function GetRectCenterX(rect whichRect266) returns real{ 
}


function GetRectCenterY(rect whichRect186) returns real{ 
}


function GetPlayerStartLocationLoc(player whichPlayer271) returns location{ 
    return GetStartLocationLoc(GetPlayerStartLocation(whichPlayer271))
}


function GetPlayerStartLocationY(player whichPlayer880) returns real{ 
    return GetStartLocationY(GetPlayerStartLocation(whichPlayer880))
}


function GetPlayerStartLocationX(player whichPlayer461) returns real{ 
    return GetStartLocationX(GetPlayerStartLocation(whichPlayer461))
}


function CopySaveGameBJ(string sourceSaveName606, string destSaveName300) returns boolean{ 
    return CopySaveGame(sourceSaveName606, destSaveName300)
}


function CopySaveGame(string sourceSaveName110, string destSaveName132) returns boolean{ 
}


function RemoveSaveDirectoryBJ(string sourceDirName199) returns boolean{ 
    return RemoveSaveDirectory(sourceDirName199)
}


function RemoveSaveDirectory(string sourceDirName260) returns boolean{ 
}


function RenameSaveDirectoryBJ(string sourceDirName321, string destDirName333) returns boolean{ 
    return RenameSaveDirectory(sourceDirName321, destDirName333)
}


function RenameSaveDirectory(string sourceDirName173, string destDirName741) returns boolean{ 
}


function SaveAndLoadGameBJ(string saveFileName306, string loadFileName134, boolean doScoreScreen375) returns void{ 
    SaveGame(saveFileName306)
    LoadGame(loadFileName134, doScoreScreen375)
}


function SaveGame(string saveFileName194) returns void{ 
}


function LoadGame(string saveFileName794, boolean doScoreScreen190) returns void{ 
}


function SaveAndChangeLevelBJ(string saveFileName774, string newLevel920, boolean doScoreScreen329) returns void{ 
    SaveGame(saveFileName774)
    ChangeLevel(newLevel920, doScoreScreen329)
}


function ChangeLevel(string newLevel200, boolean doScoreScreen147) returns void{ 
}


function LoadGameBJ(string loadFileName253, boolean doScoreScreen254) returns void{ 
    LoadGame(loadFileName253, doScoreScreen254)
}


function IsCustomCampaignButtonVisibile(integer whichButton247) returns boolean{ 
    return GetCustomCampaignButtonVisible((whichButton247 - 1))
}


function GetCustomCampaignButtonVisible(integer whichButton234) returns boolean{ 
}


function ShowCustomCampaignButton(boolean show200, integer whichButton222) returns void{ 
    SetCustomCampaignButtonVisible((whichButton222 - 1), show200)
}


function SetCustomCampaignButtonVisible(integer whichButton943, boolean visible239) returns void{ 
}


function HaveSavedValue(integer key332, integer valueType177, integer missionKey172, hashtable table174) returns boolean{ 
    if (valueType177 == bj_HASHTABLE_BOOLEAN539){
        return HaveSavedBoolean(table174, missionKey172, key332)
    } else {
        if (valueType177 == bj_HASHTABLE_INTEGER280){
            return HaveSavedInteger(table174, missionKey172, key332)
        } else {
            if (valueType177 == bj_HASHTABLE_REAL905){
                return HaveSavedReal(table174, missionKey172, key332)
            } else {
                if (valueType177 == bj_HASHTABLE_STRING196){
                    return HaveSavedString(table174, missionKey172, key332)
                } else {
                    if (valueType177 == bj_HASHTABLE_HANDLE507){
                        return HaveSavedHandle(table174, missionKey172, key332)
                    } else {
                        return false
                    }
                }
            }
        }
    }
}


function HaveSavedBoolean(hashtable table592, integer parentKey239, integer childKey143) returns boolean{ 
}


function HaveSavedInteger(hashtable table160, integer parentKey270, integer childKey608) returns boolean{ 
}


function HaveSavedReal(hashtable table274, integer parentKey279, integer childKey152) returns boolean{ 
}


function HaveSavedString(hashtable table259, integer parentKey148, integer childKey334) returns boolean{ 
}


function HaveSavedHandle(hashtable table611, integer parentKey262, integer childKey179) returns boolean{ 
}


function HaveStoredValue(string key331, integer valueType245, string missionKey167, gamecache cache230) returns boolean{ 
    if (valueType245 == bj_GAMECACHE_BOOLEAN165){
        return HaveStoredBoolean(cache230, missionKey167, key331)
    } else {
        if (valueType245 == bj_GAMECACHE_INTEGER283){
            return HaveStoredInteger(cache230, missionKey167, key331)
        } else {
            if (valueType245 == bj_GAMECACHE_REAL150){
                return HaveStoredReal(cache230, missionKey167, key331)
            } else {
                if (valueType245 == bj_GAMECACHE_UNIT125){
                    return HaveStoredUnit(cache230, missionKey167, key331)
                } else {
                    if (valueType245 == bj_GAMECACHE_STRING320){
                        return HaveStoredString(cache230, missionKey167, key331)
                    } else {
                        return false
                    }
                }
            }
        }
    }
}


function HaveStoredBoolean(gamecache cache128, string missionKey246, string key327) returns boolean{ 
}


function HaveStoredInteger(gamecache cache818, string missionKey886, string key199) returns boolean{ 
}


function HaveStoredReal(gamecache cache330, string missionKey138, string key497) returns boolean{ 
}


function HaveStoredUnit(gamecache cache117, string missionKey446, string key200) returns boolean{ 
}


function HaveStoredString(gamecache cache199, string missionKey715, string key323) returns boolean{ 
}


function FlushChildHashtableBJ(integer missionKey432, hashtable table265) returns void{ 
    FlushChildHashtable(table265, missionKey432)
}


function FlushChildHashtable(hashtable table161, integer parentKey217) returns void{ 
}


function FlushParentHashtableBJ(hashtable table252) returns void{ 
    FlushParentHashtable(table252)
}


function FlushParentHashtable(hashtable table626) returns void{ 
}


function FlushStoredMissionBJ(string missionKey276, gamecache cache269) returns void{ 
    FlushStoredMission(cache269, missionKey276)
}


function FlushStoredMission(gamecache cache177, string missionKey209) returns void{ 
}


function FlushGameCacheBJ(gamecache cache291) returns void{ 
    FlushGameCache(cache291)
}


function FlushGameCache(gamecache cache211) returns void{ 
}


function GetLastRestoredUnitBJ() returns unit{ 
    return bj_lastLoadedUnit123
}


function RestoreUnitLocFacingPointBJ(string key609, string missionKey330, gamecache cache323, player forWhichPlayer329, location loc715, location lookAt309) returns unit{ 
    return RestoreUnitLocFacingAngleBJ(key609, missionKey330, cache323, forWhichPlayer329, loc715, AngleBetweenPoints(loc715, lookAt309))
}


function AngleBetweenPoints(location locA277, location locB271) returns real{ 
    return (bj_RADTODEG319 * Atan2((GetLocationY(locB271) - GetLocationY(locA277)), (GetLocationX(locB271) - GetLocationX(locA277))))
}


function RestoreUnitLocFacingAngleBJ(string key114, string missionKey154, gamecache cache178, player forWhichPlayer120, location loc531, real facing264) returns unit{ 
    bj_lastLoadedUnit123 = RestoreUnit(cache178, missionKey154, key114, forWhichPlayer120, GetLocationX(loc531), GetLocationY(loc531), facing264)
    return bj_lastLoadedUnit123
}


function RestoreUnit(gamecache cache224, string missionKey470, string key946, player forWhichPlayer281, real x598, real y878, real facing152) returns unit{ 
}


function LoadHashtableHandleBJ(integer key911, integer missionKey117, hashtable table304) returns hashtable{ 
    return LoadHashtableHandle(table304, missionKey117, key911)
}


function LoadHashtableHandle(hashtable table113, integer parentKey174, integer childKey225) returns hashtable{ 
}


function LoadFogModifierHandleBJ(integer key202, integer missionKey113, hashtable table302) returns fogmodifier{ 
    return LoadFogModifierHandle(table302, missionKey113, key202)
}


function LoadFogModifierHandle(hashtable table241, integer parentKey229, integer childKey220) returns fogmodifier{ 
}


function LoadFogStateHandleBJ(integer key313, integer missionKey696, hashtable table172) returns fogstate{ 
    return LoadFogStateHandle(table172, missionKey696, key313)
}


function LoadFogStateHandle(hashtable table115, integer parentKey142, integer childKey114) returns fogstate{ 
}


function LoadRegionHandleBJ(integer key153, integer missionKey138, hashtable table207) returns region{ 
    return LoadRegionHandle(table207, missionKey138, key153)
}


function LoadRegionHandle(hashtable table328, integer parentKey868, integer childKey321) returns region{ 
}


function LoadUbersplatHandleBJ(integer key696, integer missionKey775, hashtable table252) returns ubersplat{ 
    return LoadUbersplatHandle(table252, missionKey775, key696)
}


function LoadUbersplatHandle(hashtable table325, integer parentKey243, integer childKey131) returns ubersplat{ 
}


function LoadImageHandleBJ(integer key356, integer missionKey570, hashtable table173) returns image{ 
    return LoadImageHandle(table173, missionKey570, key356)
}


function LoadImageHandle(hashtable table470, integer parentKey283, integer childKey146) returns image{ 
}


function LoadLightningHandleBJ(integer key147, integer missionKey157, hashtable table314) returns lightning{ 
    return LoadLightningHandle(table314, missionKey157, key147)
}


function LoadLightningHandle(hashtable table171, integer parentKey193, integer childKey169) returns lightning{ 
}


function LoadTextTagHandleBJ(integer key313, integer missionKey296, hashtable table191) returns texttag{ 
    return LoadTextTagHandle(table191, missionKey296, key313)
}


function LoadTextTagHandle(hashtable table125, integer parentKey436, integer childKey164) returns texttag{ 
}


function LoadButtonHandleBJ(integer key250, integer missionKey310, hashtable table752) returns button{ 
    return LoadButtonHandle(table752, missionKey310, key250)
}


function LoadButtonHandle(hashtable table246, integer parentKey302, integer childKey130) returns button{ 
}


function LoadDialogHandleBJ(integer key199, integer missionKey169, hashtable table556) returns dialog{ 
    return LoadDialogHandle(table556, missionKey169, key199)
}


function LoadDialogHandle(hashtable table579, integer parentKey272, integer childKey284) returns dialog{ 
}


function LoadTrackableHandleBJ(integer key296, integer missionKey176, hashtable table153) returns trackable{ 
    return LoadTrackableHandle(table153, missionKey176, key296)
}


function LoadTrackableHandle(hashtable table967, integer parentKey154, integer childKey253) returns trackable{ 
}


function LoadMultiboardItemHandleBJ(integer key153, integer missionKey352, hashtable table233) returns multiboarditem{ 
    return LoadMultiboardItemHandle(table233, missionKey352, key153)
}


function LoadMultiboardItemHandle(hashtable table931, integer parentKey105, integer childKey200) returns multiboarditem{ 
}


function LoadMultiboardHandleBJ(integer key182, integer missionKey150, hashtable table174) returns multiboard{ 
    return LoadMultiboardHandle(table174, missionKey150, key182)
}


function LoadMultiboardHandle(hashtable table132, integer parentKey332, integer childKey223) returns multiboard{ 
}


function LoadLeaderboardHandleBJ(integer key137, integer missionKey261, hashtable table188) returns leaderboard{ 
    return LoadLeaderboardHandle(table188, missionKey261, key137)
}


function LoadLeaderboardHandle(hashtable table291, integer parentKey306, integer childKey281) returns leaderboard{ 
}


function LoadTimerDialogHandleBJ(integer key200, integer missionKey191, hashtable table280) returns timerdialog{ 
    return LoadTimerDialogHandle(table280, missionKey191, key200)
}


function LoadTimerDialogHandle(hashtable table178, integer parentKey128, integer childKey315) returns timerdialog{ 
}


function LoadDefeatConditionHandleBJ(integer key206, integer missionKey235, hashtable table239) returns defeatcondition{ 
    return LoadDefeatConditionHandle(table239, missionKey235, key206)
}


function LoadDefeatConditionHandle(hashtable table221, integer parentKey247, integer childKey151) returns defeatcondition{ 
}


function LoadQuestItemHandleBJ(integer key195, integer missionKey830, hashtable table211) returns questitem{ 
    return LoadQuestItemHandle(table211, missionKey830, key195)
}


function LoadQuestItemHandle(hashtable table287, integer parentKey323, integer childKey300) returns questitem{ 
}


function LoadQuestHandleBJ(integer key198, integer missionKey102, hashtable table100) returns quest{ 
    return LoadQuestHandle(table100, missionKey102, key198)
}


function LoadQuestHandle(hashtable table107, integer parentKey241, integer childKey439) returns quest{ 
}


function LoadItemPoolHandleBJ(integer key304, integer missionKey235, hashtable table143) returns itempool{ 
    return LoadItemPoolHandle(table143, missionKey235, key304)
}


function LoadItemPoolHandle(hashtable table826, integer parentKey879, integer childKey224) returns itempool{ 
}


function LoadUnitPoolHandleBJ(integer key426, integer missionKey118, hashtable table367) returns unitpool{ 
    return LoadUnitPoolHandle(table367, missionKey118, key426)
}


function LoadUnitPoolHandle(hashtable table233, integer parentKey121, integer childKey149) returns unitpool{ 
}


function LoadEffectHandleBJ(integer key138, integer missionKey752, hashtable table305) returns effect{ 
    return LoadEffectHandle(table305, missionKey752, key138)
}


function LoadEffectHandle(hashtable table271, integer parentKey205, integer childKey167) returns effect{ 
}


function LoadSoundHandleBJ(integer key196, integer missionKey184, hashtable table721) returns sound{ 
    return LoadSoundHandle(table721, missionKey184, key196)
}


function LoadSoundHandle(hashtable table507, integer parentKey271, integer childKey252) returns sound{ 
}


function LoadBooleanExprHandleBJ(integer key213, integer missionKey271, hashtable table238) returns boolexpr{ 
    return LoadBooleanExprHandle(table238, missionKey271, key213)
}


function LoadBooleanExprHandle(hashtable table874, integer parentKey228, integer childKey555) returns boolexpr{ 
}


function LoadRectHandleBJ(integer key112, integer missionKey190, hashtable table284) returns rect{ 
    return LoadRectHandle(table284, missionKey190, key112)
}


function LoadRectHandle(hashtable table188, integer parentKey206, integer childKey130) returns rect{ 
}


function LoadLocationHandleBJ(integer key275, integer missionKey734, hashtable table418) returns location{ 
    return LoadLocationHandle(table418, missionKey734, key275)
}


function LoadLocationHandle(hashtable table293, integer parentKey169, integer childKey151) returns location{ 
}


function LoadGroupHandleBJ(integer key258, integer missionKey167, hashtable table933) returns group{ 
    return LoadGroupHandle(table933, missionKey167, key258)
}


function LoadGroupHandle(hashtable table328, integer parentKey930, integer childKey327) returns group{ 
}


function LoadForceHandleBJ(integer key316, integer missionKey705, hashtable table135) returns force{ 
    return LoadForceHandle(table135, missionKey705, key316)
}


function LoadForceHandle(hashtable table284, integer parentKey164, integer childKey222) returns force{ 
}


function LoadTriggerEventHandleBJ(integer key117, integer missionKey865, hashtable table138) returns event{ 
    return LoadTriggerEventHandle(table138, missionKey865, key117)
}


function LoadTriggerEventHandle(hashtable table898, integer parentKey156, integer childKey179) returns event{ 
}


function LoadTriggerActionHandleBJ(integer key400, integer missionKey328, hashtable table219) returns triggeraction{ 
    return LoadTriggerActionHandle(table219, missionKey328, key400)
}


function LoadTriggerActionHandle(hashtable table875, integer parentKey316, integer childKey219) returns triggeraction{ 
}


function LoadTriggerConditionHandleBJ(integer key124, integer missionKey212, hashtable table155) returns triggercondition{ 
    return LoadTriggerConditionHandle(table155, missionKey212, key124)
}


function LoadTriggerConditionHandle(hashtable table318, integer parentKey712, integer childKey327) returns triggercondition{ 
}


function LoadTriggerHandleBJ(integer key167, integer missionKey142, hashtable table112) returns trigger{ 
    return LoadTriggerHandle(table112, missionKey142, key167)
}


function LoadTriggerHandle(hashtable table189, integer parentKey264, integer childKey136) returns trigger{ 
}


function LoadTimerHandleBJ(integer key744, integer missionKey292, hashtable table151) returns timer{ 
    return LoadTimerHandle(table151, missionKey292, key744)
}


function LoadTimerHandle(hashtable table321, integer parentKey192, integer childKey531) returns timer{ 
}


function LoadAbilityHandleBJ(integer key300, integer missionKey490, hashtable table934) returns ability{ 
    return LoadAbilityHandle(table934, missionKey490, key300)
}


function LoadAbilityHandle(hashtable table622, integer parentKey947, integer childKey204) returns ability{ 
}


function LoadUnitHandleBJ(integer key148, integer missionKey255, hashtable table567) returns unit{ 
    return LoadUnitHandle(table567, missionKey255, key148)
}


function LoadUnitHandle(hashtable table142, integer parentKey112, integer childKey194) returns unit{ 
}


function LoadItemHandleBJ(integer key263, integer missionKey331, hashtable table302) returns item{ 
    return LoadItemHandle(table302, missionKey331, key263)
}


function LoadItemHandle(hashtable table146, integer parentKey329, integer childKey957) returns item{ 
}


function LoadDestructableHandleBJ(integer key192, integer missionKey546, hashtable table335) returns destructable{ 
    return LoadDestructableHandle(table335, missionKey546, key192)
}


function LoadDestructableHandle(hashtable table177, integer parentKey205, integer childKey230) returns destructable{ 
}


function LoadWidgetHandleBJ(integer key151, integer missionKey274, hashtable table924) returns widget{ 
    return LoadWidgetHandle(table924, missionKey274, key151)
}


function LoadWidgetHandle(hashtable table906, integer parentKey916, integer childKey354) returns widget{ 
}


function LoadPlayerHandleBJ(integer key279, integer missionKey909, hashtable table946) returns player{ 
    return LoadPlayerHandle(table946, missionKey909, key279)
}


function LoadPlayerHandle(hashtable table696, integer parentKey182, integer childKey242) returns player{ 
}


function LoadStringBJ(integer key109, integer missionKey309, hashtable table303) returns string{ 
    local string s769
    null
    s769 = LoadStr(table303, missionKey309, key109)
    if (s769 == null){
        return ""
    } else {
        return s769
    }
}


function LoadStr(hashtable table572, integer parentKey326, integer childKey724) returns string{ 
}


function LoadBooleanBJ(integer key132, integer missionKey180, hashtable table753) returns boolean{ 
    return LoadBoolean(table753, missionKey180, key132)
}


function LoadBoolean(hashtable table196, integer parentKey175, integer childKey143) returns boolean{ 
}


function LoadIntegerBJ(integer key125, integer missionKey228, hashtable table253) returns integer{ 
    return LoadInteger(table253, missionKey228, key125)
}


function LoadInteger(hashtable table145, integer parentKey702, integer childKey574) returns integer{ 
}


function LoadRealBJ(integer key145, integer missionKey822, hashtable table207) returns real{ 
    return LoadReal(table207, missionKey822, key145)
}


function LoadReal(hashtable table298, integer parentKey236, integer childKey136) returns real{ 
}


function GetStoredStringBJ(string key207, string missionKey233, gamecache cache914) returns string{ 
    local string s188
    null
    s188 = GetStoredString(cache914, missionKey233, key207)
    if (s188 == null){
        return ""
    } else {
        return s188
    }
}


function GetStoredString(gamecache cache179, string missionKey138, string key265) returns string{ 
}


function GetStoredBooleanBJ(string key158, string missionKey326, gamecache cache328) returns boolean{ 
    return GetStoredBoolean(cache328, missionKey326, key158)
}


function GetStoredBoolean(gamecache cache283, string missionKey126, string key300) returns boolean{ 
}


function GetStoredIntegerBJ(string key359, string missionKey262, gamecache cache309) returns integer{ 
    return GetStoredInteger(cache309, missionKey262, key359)
}


function GetStoredInteger(gamecache cache118, string missionKey122, string key172) returns integer{ 
}


function GetStoredRealBJ(string key134, string missionKey133, gamecache cache325) returns real{ 
    return GetStoredReal(cache325, missionKey133, key134)
}


function GetStoredReal(gamecache cache265, string missionKey407, string key103) returns real{ 
}


function SaveHashtableHandleBJ(hashtable whichHashtable534, integer key131, integer missionKey316, hashtable table845) returns boolean{ 
    return SaveHashtableHandle(table845, missionKey316, key131, whichHashtable534)
}


function SaveHashtableHandle(hashtable table163, integer parentKey314, integer childKey314, hashtable whichHashtable977) returns boolean{ 
}


function SaveAgentHandleBJ(agent whichAgent230, integer key148, integer missionKey148, hashtable table137) returns boolean{ 
    return SaveAgentHandle(table137, missionKey148, key148, whichAgent230)
}


function SaveAgentHandle(hashtable table313, integer parentKey296, integer childKey902, agent whichAgent571) returns boolean{ 
}


function SaveFogModifierHandleBJ(fogmodifier whichFogModifier511, integer key842, integer missionKey331, hashtable table305) returns boolean{ 
    return SaveFogModifierHandle(table305, missionKey331, key842, whichFogModifier511)
}


function SaveFogModifierHandle(hashtable table728, integer parentKey132, integer childKey204, fogmodifier whichFogModifier228) returns boolean{ 
}


function SaveFogStateHandleBJ(fogstate whichFogState248, integer key128, integer missionKey177, hashtable table124) returns boolean{ 
    return SaveFogStateHandle(table124, missionKey177, key128, whichFogState248)
}


function SaveFogStateHandle(hashtable table260, integer parentKey323, integer childKey334, fogstate whichFogState213) returns boolean{ 
}


function SaveRegionHandleBJ(region whichRegion158, integer key328, integer missionKey273, hashtable table100) returns boolean{ 
    return SaveRegionHandle(table100, missionKey273, key328, whichRegion158)
}


function SaveRegionHandle(hashtable table135, integer parentKey207, integer childKey331, region whichRegion113) returns boolean{ 
}


function SaveUbersplatHandleBJ(ubersplat whichUbersplat229, integer key219, integer missionKey317, hashtable table264) returns boolean{ 
    return SaveUbersplatHandle(table264, missionKey317, key219, whichUbersplat229)
}


function SaveUbersplatHandle(hashtable table292, integer parentKey181, integer childKey206, ubersplat whichUbersplat196) returns boolean{ 
}


function SaveImageHandleBJ(image whichImage709, integer key156, integer missionKey313, hashtable table138) returns boolean{ 
    return SaveImageHandle(table138, missionKey313, key156, whichImage709)
}


function SaveImageHandle(hashtable table181, integer parentKey232, integer childKey254, image whichImage261) returns boolean{ 
}


function SaveLightningHandleBJ(lightning whichLightning252, integer key297, integer missionKey173, hashtable table621) returns boolean{ 
    return SaveLightningHandle(table621, missionKey173, key297, whichLightning252)
}


function SaveLightningHandle(hashtable table115, integer parentKey317, integer childKey294, lightning whichLightning288) returns boolean{ 
}


function SaveTextTagHandleBJ(texttag whichTexttag266, integer key187, integer missionKey272, hashtable table549) returns boolean{ 
    return SaveTextTagHandle(table549, missionKey272, key187, whichTexttag266)
}


function SaveTextTagHandle(hashtable table262, integer parentKey299, integer childKey218, texttag whichTexttag146) returns boolean{ 
}


function SaveButtonHandleBJ(button whichButton307, integer key149, integer missionKey545, hashtable table117) returns boolean{ 
    return SaveButtonHandle(table117, missionKey545, key149, whichButton307)
}


function SaveButtonHandle(hashtable table139, integer parentKey271, integer childKey317, button whichButton287) returns boolean{ 
}


function SaveDialogHandleBJ(dialog whichDialog243, integer key156, integer missionKey213, hashtable table398) returns boolean{ 
    return SaveDialogHandle(table398, missionKey213, key156, whichDialog243)
}


function SaveDialogHandle(hashtable table203, integer parentKey122, integer childKey277, dialog whichDialog265) returns boolean{ 
}


function SaveTrackableHandleBJ(trackable whichTrackable223, integer key312, integer missionKey149, hashtable table105) returns boolean{ 
    return SaveTrackableHandle(table105, missionKey149, key312, whichTrackable223)
}


function SaveTrackableHandle(hashtable table150, integer parentKey255, integer childKey195, trackable whichTrackable220) returns boolean{ 
}


function SaveMultiboardItemHandleBJ(multiboarditem whichMultiboarditem119, integer key139, integer missionKey148, hashtable table329) returns boolean{ 
    return SaveMultiboardItemHandle(table329, missionKey148, key139, whichMultiboarditem119)
}


function SaveMultiboardItemHandle(hashtable table188, integer parentKey212, integer childKey256, multiboarditem whichMultiboarditem325) returns boolean{ 
}


function SaveMultiboardHandleBJ(multiboard whichMultiboard156, integer key432, integer missionKey285, hashtable table201) returns boolean{ 
    return SaveMultiboardHandle(table201, missionKey285, key432, whichMultiboard156)
}


function SaveMultiboardHandle(hashtable table377, integer parentKey109, integer childKey698, multiboard whichMultiboard184) returns boolean{ 
}


function SaveLeaderboardHandleBJ(leaderboard whichLeaderboard182, integer key709, integer missionKey502, hashtable table240) returns boolean{ 
    return SaveLeaderboardHandle(table240, missionKey502, key709, whichLeaderboard182)
}


function SaveLeaderboardHandle(hashtable table204, integer parentKey178, integer childKey195, leaderboard whichLeaderboard132) returns boolean{ 
}


function SaveTimerDialogHandleBJ(timerdialog whichTimerdialog332, integer key121, integer missionKey119, hashtable table187) returns boolean{ 
    return SaveTimerDialogHandle(table187, missionKey119, key121, whichTimerdialog332)
}


function SaveTimerDialogHandle(hashtable table834, integer parentKey286, integer childKey313, timerdialog whichTimerdialog245) returns boolean{ 
}


function SaveDefeatConditionHandleBJ(defeatcondition whichDefeatcondition542, integer key286, integer missionKey178, hashtable table274) returns boolean{ 
    return SaveDefeatConditionHandle(table274, missionKey178, key286, whichDefeatcondition542)
}


function SaveDefeatConditionHandle(hashtable table202, integer parentKey511, integer childKey246, defeatcondition whichDefeatcondition196) returns boolean{ 
}


function SaveQuestItemHandleBJ(questitem whichQuestitem137, integer key156, integer missionKey147, hashtable table232) returns boolean{ 
    return SaveQuestItemHandle(table232, missionKey147, key156, whichQuestitem137)
}


function SaveQuestItemHandle(hashtable table275, integer parentKey183, integer childKey165, questitem whichQuestitem733) returns boolean{ 
}


function SaveQuestHandleBJ(quest whichQuest273, integer key225, integer missionKey313, hashtable table132) returns boolean{ 
    return SaveQuestHandle(table132, missionKey313, key225, whichQuest273)
}


function SaveQuestHandle(hashtable table108, integer parentKey200, integer childKey179, quest whichQuest322) returns boolean{ 
}


function SaveItemPoolHandleBJ(itempool whichItempool210, integer key248, integer missionKey314, hashtable table285) returns boolean{ 
    return SaveItemPoolHandle(table285, missionKey314, key248, whichItempool210)
}


function SaveItemPoolHandle(hashtable table834, integer parentKey292, integer childKey119, itempool whichItempool180) returns boolean{ 
}


function SaveUnitPoolHandleBJ(unitpool whichUnitpool306, integer key208, integer missionKey279, hashtable table163) returns boolean{ 
    return SaveUnitPoolHandle(table163, missionKey279, key208, whichUnitpool306)
}


function SaveUnitPoolHandle(hashtable table423, integer parentKey287, integer childKey325, unitpool whichUnitpool248) returns boolean{ 
}


function SaveEffectHandleBJ(effect whichEffect159, integer key242, integer missionKey334, hashtable table192) returns boolean{ 
    return SaveEffectHandle(table192, missionKey334, key242, whichEffect159)
}


function SaveEffectHandle(hashtable table124, integer parentKey283, integer childKey112, effect whichEffect908) returns boolean{ 
}


function SaveSoundHandleBJ(sound whichSound631, integer key302, integer missionKey106, hashtable table226) returns boolean{ 
    return SaveSoundHandle(table226, missionKey106, key302, whichSound631)
}


function SaveSoundHandle(hashtable table173, integer parentKey258, integer childKey152, sound whichSound233) returns boolean{ 
}


function SaveBooleanExprHandleBJ(boolexpr whichBoolexpr109, integer key150, integer missionKey451, hashtable table223) returns boolean{ 
    return SaveBooleanExprHandle(table223, missionKey451, key150, whichBoolexpr109)
}


function SaveBooleanExprHandle(hashtable table281, integer parentKey206, integer childKey224, boolexpr whichBoolexpr215) returns boolean{ 
}


function SaveRectHandleBJ(rect whichRect260, integer key310, integer missionKey123, hashtable table217) returns boolean{ 
    return SaveRectHandle(table217, missionKey123, key310, whichRect260)
}


function SaveRectHandle(hashtable table921, integer parentKey817, integer childKey236, rect whichRect292) returns boolean{ 
}


function SaveLocationHandleBJ(location whichLocation467, integer key311, integer missionKey613, hashtable table764) returns boolean{ 
    return SaveLocationHandle(table764, missionKey613, key311, whichLocation467)
}


function SaveLocationHandle(hashtable table236, integer parentKey237, integer childKey239, location whichLocation196) returns boolean{ 
}


function SaveGroupHandleBJ(group whichGroup672, integer key278, integer missionKey231, hashtable table205) returns boolean{ 
    return SaveGroupHandle(table205, missionKey231, key278, whichGroup672)
}


function SaveGroupHandle(hashtable table312, integer parentKey297, integer childKey724, group whichGroup108) returns boolean{ 
}


function SaveForceHandleBJ(force whichForce854, integer key119, integer missionKey556, hashtable table229) returns boolean{ 
    return SaveForceHandle(table229, missionKey556, key119, whichForce854)
}


function SaveForceHandle(hashtable table239, integer parentKey147, integer childKey108, force whichForce571) returns boolean{ 
}


function SaveTriggerEventHandleBJ(event whichEvent100, integer key199, integer missionKey202, hashtable table186) returns boolean{ 
    return SaveTriggerEventHandle(table186, missionKey202, key199, whichEvent100)
}


function SaveTriggerEventHandle(hashtable table565, integer parentKey687, integer childKey121, event whichEvent328) returns boolean{ 
}


function SaveTriggerActionHandleBJ(triggeraction whichTriggeraction214, integer key307, integer missionKey966, hashtable table144) returns boolean{ 
    return SaveTriggerActionHandle(table144, missionKey966, key307, whichTriggeraction214)
}


function SaveTriggerActionHandle(hashtable table174, integer parentKey242, integer childKey319, triggeraction whichTriggeraction717) returns boolean{ 
}


function SaveTriggerConditionHandleBJ(triggercondition whichTriggercondition476, integer key238, integer missionKey274, hashtable table350) returns boolean{ 
    return SaveTriggerConditionHandle(table350, missionKey274, key238, whichTriggercondition476)
}


function SaveTriggerConditionHandle(hashtable table126, integer parentKey808, integer childKey294, triggercondition whichTriggercondition704) returns boolean{ 
}


function SaveTriggerHandleBJ(trigger whichTrigger183, integer key247, integer missionKey175, hashtable table151) returns boolean{ 
    return SaveTriggerHandle(table151, missionKey175, key247, whichTrigger183)
}


function SaveTriggerHandle(hashtable table740, integer parentKey310, integer childKey716, trigger whichTrigger128) returns boolean{ 
}


function SaveTimerHandleBJ(timer whichTimer178, integer key251, integer missionKey145, hashtable table291) returns boolean{ 
    return SaveTimerHandle(table291, missionKey145, key251, whichTimer178)
}


function SaveTimerHandle(hashtable table184, integer parentKey314, integer childKey184, timer whichTimer114) returns boolean{ 
}


function SaveAbilityHandleBJ(ability whichAbility159, integer key233, integer missionKey243, hashtable table650) returns boolean{ 
    return SaveAbilityHandle(table650, missionKey243, key233, whichAbility159)
}


function SaveAbilityHandle(hashtable table241, integer parentKey235, integer childKey670, ability whichAbility726) returns boolean{ 
}


function SaveUnitHandleBJ(unit whichUnit280, integer key565, integer missionKey163, hashtable table873) returns boolean{ 
    return SaveUnitHandle(table873, missionKey163, key565, whichUnit280)
}


function SaveUnitHandle(hashtable table308, integer parentKey127, integer childKey252, unit whichUnit104) returns boolean{ 
}


function SaveItemHandleBJ(item whichItem143, integer key504, integer missionKey482, hashtable table190) returns boolean{ 
    return SaveItemHandle(table190, missionKey482, key504, whichItem143)
}


function SaveItemHandle(hashtable table269, integer parentKey213, integer childKey189, item whichItem417) returns boolean{ 
}


function SaveDestructableHandleBJ(destructable whichDestructable357, integer key884, integer missionKey152, hashtable table884) returns boolean{ 
    return SaveDestructableHandle(table884, missionKey152, key884, whichDestructable357)
}


function SaveDestructableHandle(hashtable table209, integer parentKey224, integer childKey591, destructable whichDestructable317) returns boolean{ 
}


function SaveWidgetHandleBJ(widget whichWidget264, integer key218, integer missionKey201, hashtable table211) returns boolean{ 
    return SaveWidgetHandle(table211, missionKey201, key218, whichWidget264)
}


function SaveWidgetHandle(hashtable table821, integer parentKey145, integer childKey135, widget whichWidget577) returns boolean{ 
}


function SavePlayerHandleBJ(player whichPlayer278, integer key199, integer missionKey150, hashtable table642) returns boolean{ 
    return SavePlayerHandle(table642, missionKey150, key199, whichPlayer278)
}


function SavePlayerHandle(hashtable table244, integer parentKey323, integer childKey312, player whichPlayer234) returns boolean{ 
}


function SaveStringBJ(string value154, integer key262, integer missionKey125, hashtable table237) returns boolean{ 
    return SaveStr(table237, missionKey125, key262, value154)
}


function SaveStr(hashtable table228, integer parentKey299, integer childKey148, string value296) returns boolean{ 
}


function SaveBooleanBJ(boolean value295, integer key206, integer missionKey243, hashtable table226) returns void{ 
    SaveBoolean(table226, missionKey243, key206, value295)
}


function SaveBoolean(hashtable table320, integer parentKey297, integer childKey198, boolean value248) returns void{ 
}


function SaveIntegerBJ(integer value212, integer key162, integer missionKey634, hashtable table244) returns void{ 
    SaveInteger(table244, missionKey634, key162, value212)
}


function SaveInteger(hashtable table206, integer parentKey218, integer childKey268, integer value215) returns void{ 
}


function SaveRealBJ(real value134, integer key812, integer missionKey593, hashtable table316) returns void{ 
    SaveReal(table316, missionKey593, key812, value134)
}


function SaveReal(hashtable table218, integer parentKey208, integer childKey258, real value115) returns void{ 
}


function StoreUnitBJ(unit whichUnit275, string key266, string missionKey232, gamecache cache254) returns boolean{ 
    return StoreUnit(cache254, missionKey232, key266, whichUnit275)
}


function StoreUnit(gamecache cache267, string missionKey328, string key649, unit whichUnit157) returns boolean{ 
}


function StoreStringBJ(string value313, string key241, string missionKey195, gamecache cache325) returns boolean{ 
    return StoreString(cache325, missionKey195, key241, value313)
}


function StoreString(gamecache cache256, string missionKey269, string key965, string value172) returns boolean{ 
}


function StoreBooleanBJ(boolean value162, string key123, string missionKey333, gamecache cache320) returns void{ 
    StoreBoolean(cache320, missionKey333, key123, value162)
}


function StoreBoolean(gamecache cache115, string missionKey218, string key285, boolean value306) returns void{ 
}


function StoreIntegerBJ(integer value146, string key814, string missionKey319, gamecache cache239) returns void{ 
    StoreInteger(cache239, missionKey319, key814, value146)
}


function StoreInteger(gamecache cache246, string missionKey404, string key931, integer value207) returns void{ 
}


function StoreRealBJ(real value841, string key229, string missionKey141, gamecache cache206) returns void{ 
    StoreReal(cache206, missionKey141, key229, value841)
}


function StoreReal(gamecache cache489, string missionKey241, string key335, real value147) returns void{ 
}


function GetLastCreatedHashtableBJ() returns hashtable{ 
    return bj_lastCreatedHashtable245
}


function InitHashtableBJ() returns hashtable{ 
    bj_lastCreatedHashtable245 = InitHashtable()
    return bj_lastCreatedHashtable245
}


function InitHashtable() returns hashtable{ 
}


function GetLastCreatedGameCacheBJ() returns gamecache{ 
    return bj_lastCreatedGameCache170
}


function SaveGameCacheBJ(gamecache cache260) returns boolean{ 
    return SaveGameCache(cache260)
}


function SaveGameCache(gamecache whichCache141) returns boolean{ 
}


function InitGameCacheBJ(string campaignFile178) returns gamecache{ 
    bj_lastCreatedGameCache170 = InitGameCache(campaignFile178)
    return bj_lastCreatedGameCache170
}


function InitGameCache(string campaignFile119) returns gamecache{ 
}


function SetCinematicAvailableBJ(boolean available855, integer cinematicIndex318) returns void{ 
    if (cinematicIndex318 == bj_CINEMATICINDEX_TOP274){
        SetOpCinematicAvailable(bj_CAMPAIGN_INDEX_T673, available855)
        PlayCinematic("TutorialOp")
    } else {
        if (cinematicIndex318 == bj_CINEMATICINDEX_HOP120){
            SetOpCinematicAvailable(bj_CAMPAIGN_INDEX_H253, available855)
            PlayCinematic("HumanOp")
        } else {
            if (cinematicIndex318 == bj_CINEMATICINDEX_HED536){
                SetEdCinematicAvailable(bj_CAMPAIGN_INDEX_H253, available855)
                PlayCinematic("HumanEd")
            } else {
                if (cinematicIndex318 == bj_CINEMATICINDEX_OOP204){
                    SetOpCinematicAvailable(bj_CAMPAIGN_INDEX_O177, available855)
                    PlayCinematic("OrcOp")
                } else {
                    if (cinematicIndex318 == bj_CINEMATICINDEX_OED507){
                        SetEdCinematicAvailable(bj_CAMPAIGN_INDEX_O177, available855)
                        PlayCinematic("OrcEd")
                    } else {
                        if (cinematicIndex318 == bj_CINEMATICINDEX_UOP332){
                            SetEdCinematicAvailable(bj_CAMPAIGN_INDEX_U825, available855)
                            PlayCinematic("UndeadOp")
                        } else {
                            if (cinematicIndex318 == bj_CINEMATICINDEX_UED102){
                                SetEdCinematicAvailable(bj_CAMPAIGN_INDEX_U825, available855)
                                PlayCinematic("UndeadEd")
                            } else {
                                if (cinematicIndex318 == bj_CINEMATICINDEX_NOP270){
                                    SetEdCinematicAvailable(bj_CAMPAIGN_INDEX_N920, available855)
                                    PlayCinematic("NightElfOp")
                                } else {
                                    if (cinematicIndex318 == bj_CINEMATICINDEX_NED279){
                                        SetEdCinematicAvailable(bj_CAMPAIGN_INDEX_N920, available855)
                                        PlayCinematic("NightElfEd")
                                    } else {
                                        if (cinematicIndex318 == bj_CINEMATICINDEX_XOP117){
                                            SetOpCinematicAvailable(bj_CAMPAIGN_OFFSET_XN321, available855)
                                            PlayCinematic("IntroX")
                                        } else {
                                            if (cinematicIndex318 == bj_CINEMATICINDEX_XED466){
                                                SetEdCinematicAvailable(bj_CAMPAIGN_OFFSET_XU145, available855)
                                                PlayCinematic("OutroX")
                                            } else {
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}


function SetOpCinematicAvailable(integer campaignNumber913, boolean available251) returns void{ 
}


function PlayCinematic(string movieName158) returns void{ 
}


function SetEdCinematicAvailable(integer campaignNumber306, boolean available943) returns void{ 
}


function SetCampaignAvailableBJ(boolean available178, integer campaignNumber120) returns void{ 
    local integer campaignOffset273
    null
    if (campaignNumber120 == bj_CAMPAIGN_INDEX_H253){
        SetTutorialCleared(true)
    } else {
    }
    if (campaignNumber120 == bj_CAMPAIGN_INDEX_XN439){
        campaignOffset273 = bj_CAMPAIGN_OFFSET_XN321
    } else {
        if (campaignNumber120 == bj_CAMPAIGN_INDEX_XH286){
            campaignOffset273 = bj_CAMPAIGN_OFFSET_XH174
        } else {
            if (campaignNumber120 == bj_CAMPAIGN_INDEX_XU276){
                campaignOffset273 = bj_CAMPAIGN_OFFSET_XU145
            } else {
                if (campaignNumber120 == bj_CAMPAIGN_INDEX_XO180){
                    campaignOffset273 = bj_CAMPAIGN_OFFSET_XO229
                } else {
                    campaignOffset273 = campaignNumber120
                }
            }
        }
    }
    SetCampaignAvailable(campaignOffset273, available178)
    SetCampaignMenuRaceBJ(campaignNumber120)
    ForceCampaignSelectScreen()
}


function SetTutorialCleared(boolean cleared986) returns void{ 
}


function SetCampaignAvailable(integer campaignNumber117, boolean available200) returns void{ 
}


function SetCampaignMenuRaceBJ(integer campaignNumber180) returns void{ 
    if (campaignNumber180 == bj_CAMPAIGN_INDEX_T673){
        SetCampaignMenuRace(RACE_OTHER196)
    } else {
        if (campaignNumber180 == bj_CAMPAIGN_INDEX_H253){
            SetCampaignMenuRace(RACE_HUMAN790)
        } else {
            if (campaignNumber180 == bj_CAMPAIGN_INDEX_U825){
                SetCampaignMenuRace(RACE_UNDEAD456)
            } else {
                if (campaignNumber180 == bj_CAMPAIGN_INDEX_O177){
                    SetCampaignMenuRace(RACE_ORC107)
                } else {
                    if (campaignNumber180 == bj_CAMPAIGN_INDEX_N920){
                        SetCampaignMenuRace(RACE_NIGHTELF389)
                    } else {
                        if (campaignNumber180 == bj_CAMPAIGN_INDEX_XN439){
                            SetCampaignMenuRaceEx(bj_CAMPAIGN_OFFSET_XN321)
                        } else {
                            if (campaignNumber180 == bj_CAMPAIGN_INDEX_XH286){
                                SetCampaignMenuRaceEx(bj_CAMPAIGN_OFFSET_XH174)
                            } else {
                                if (campaignNumber180 == bj_CAMPAIGN_INDEX_XU276){
                                    SetCampaignMenuRaceEx(bj_CAMPAIGN_OFFSET_XU145)
                                } else {
                                    if (campaignNumber180 == bj_CAMPAIGN_INDEX_XO180){
                                        SetCampaignMenuRaceEx(bj_CAMPAIGN_OFFSET_XO229)
                                    } else {
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}


function ForceCampaignSelectScreen() returns void{ 
}


function SetMissionAvailableBJ(boolean available598, integer missionIndex287) returns void{ 
    local integer campaignNumber721
    local integer missionNumber110
    campaignNumber721 = (missionIndex287 / 1000)
    missionNumber110 = (missionIndex287 - (campaignNumber721 * 1000))
    SetMissionAvailable(campaignNumber721, missionNumber110, available598)
}


function SetMissionAvailable(integer campaignNumber213, integer missionNumber185, boolean available261) returns void{ 
}


function SetCampaignMenuRace(race r162) returns void{ 
}


function SetCampaignMenuRaceEx(integer campaignIndex330) returns void{ 
}


function SetPlayerAbilityAvailableBJ(boolean avail174, integer abilid238, player whichPlayer540) returns void{ 
    SetPlayerAbilityAvailable(whichPlayer540, abilid238, avail174)
}


function SetPlayerAbilityAvailable(player whichPlayer681, integer abilid224, boolean avail113) returns void{ 
}


function GetPlayerTechMaxAllowedSwap(integer techid123, player whichPlayer136) returns integer{ 
    return GetPlayerTechMaxAllowed(whichPlayer136, techid123)
}


function GetPlayerTechCountSimple(integer techid296, player whichPlayer313) returns integer{ 
    return GetPlayerTechCount(whichPlayer313, techid296, true)
}


function GetPlayerTechCount(player whichPlayer539, integer techid212, boolean specificonly161) returns integer{ 
}


function SetPlayerTechMaxAllowedSwap(integer techid221, integer maximum111, player whichPlayer296) returns void{ 
    SetPlayerTechMaxAllowed(whichPlayer296, techid221, maximum111)
}


function SetPlayerTechResearchedSwap(integer techid616, integer levels200, player whichPlayer160) returns void{ 
    SetPlayerTechResearched(whichPlayer160, techid616, levels200)
}


function SetPlayerTechResearched(player whichPlayer106, integer techid301, integer setToLevel429) returns void{ 
}


function TryInitRescuableTriggersBJ() returns void{ 
    local integer index604
    null
    if (bj_rescueUnitBehavior292 == null){
        bj_rescueUnitBehavior292 = CreateTrigger()
        index604 = 0
        loop {
            TriggerRegisterPlayerUnitEvent(bj_rescueUnitBehavior292, Player(index604), EVENT_PLAYER_UNIT_RESCUED197, null)
            index604 = (index604 + 1)
            exitwhen (index604 == bj_MAX_PLAYER_SLOTS129)
        }
        TriggerAddAction(bj_rescueUnitBehavior292, function TriggerActionUnitRescuedBJ)
    } else {
    }
}


function MakeUnitRescuableToForceBJ(unit whichUnit934, boolean isRescuable315, force whichForce145) returns void{ 
    bj_makeUnitRescuableUnit682 = whichUnit934
    bj_makeUnitRescuableFlag965 = isRescuable315
    ForForce(whichForce145, function MakeUnitRescuableToForceBJEnum)
}


function MakeUnitRescuableToForceBJEnum() returns void{ 
    TryInitRescuableTriggersBJ()
    SetUnitRescuable(bj_makeUnitRescuableUnit682, GetEnumPlayer(), bj_makeUnitRescuableFlag965)
}


function SetUnitRescuable(unit whichUnit160, player byWhichPlayer578, boolean flag321) returns void{ 
}


function SetRescueBuildingColorChangeBJ(boolean changeColor237) returns void{ 
    bj_rescueChangeColorBldg228 = changeColor237
}


function SetRescueUnitColorChangeBJ(boolean changeColor227) returns void{ 
    bj_rescueChangeColorUnit280 = changeColor227
}


function TriggerActionUnitRescuedBJ() returns void{ 
    local unit theUnit146
    theUnit146 = GetTriggerUnit()
    if IsUnitType(theUnit146, UNIT_TYPE_STRUCTURE273){
        RescueUnitBJ(theUnit146, GetOwningPlayer(GetRescuer()), bj_rescueChangeColorBldg228)
    } else {
        RescueUnitBJ(theUnit146, GetOwningPlayer(GetRescuer()), bj_rescueChangeColorUnit280)
    }
}


function GetTriggerUnit() returns unit{ 
}


function GetRescuer() returns unit{ 
}


function RescueUnitBJ(unit whichUnit713, player rescuer101, boolean changeColor362) returns void{ 
    if (IsUnitDeadBJ(whichUnit713) or (GetOwningPlayer(whichUnit713) == rescuer101)){
        return %nothing%
    } else {
    }
    StartSound(bj_rescueSound266)
    SetUnitOwner(whichUnit713, rescuer101, changeColor362)
    UnitAddIndicator(whichUnit713, 0, 255, 0, 255)
    PingMinimapForPlayer(rescuer101, GetUnitX(whichUnit713), GetUnitY(whichUnit713), bj_RESCUE_PING_TIME214)
}


function IsUnitDeadBJ(unit whichUnit211) returns boolean{ 
    return (GetUnitState(whichUnit211, UNIT_STATE_LIFE161) <= 0.)
}


function SetUnitOwner(unit whichUnit494, player whichPlayer123, boolean changeColor112) returns void{ 
}


function UnitAddIndicator(unit whichUnit315, integer red326, integer green310, integer blue115, integer alpha675) returns void{ 
}


function PingMinimapForPlayer(player whichPlayer181, real x278, real y113, real duration113) returns void{ 
    if (GetLocalPlayer() == whichPlayer181){
        PingMinimap(x278, y113, duration113)
    } else {
    }
}


function CinematicFilterGenericBJ(real duration238, blendmode bmode208, string tex299, real red0719, real green0170, real blue0280, real trans0362, real red1244, real green1151, real blue1161, real trans1303) returns void{ 
    AbortCinematicFadeBJ()
    SetCineFilterTexture(tex299)
    SetCineFilterBlendMode(bmode208)
    SetCineFilterTexMapFlags(TEXMAP_FLAG_NONE275)
    SetCineFilterStartUV(0., 0., 1., 1.)
    SetCineFilterEndUV(0., 0., 1., 1.)
    SetCineFilterStartColor(PercentTo255(red0719), PercentTo255(green0170), PercentTo255(blue0280), PercentTo255((100. - trans0362)))
    SetCineFilterEndColor(PercentTo255(red1244), PercentTo255(green1151), PercentTo255(blue1161), PercentTo255((100. - trans1303)))
    SetCineFilterDuration(duration238)
    DisplayCineFilter(true)
}


function AbortCinematicFadeBJ() returns void{ 
    if (bj_cineFadeContinueTimer197 != null){
        DestroyTimer(bj_cineFadeContinueTimer197)
    } else {
    }
    if (bj_cineFadeFinishTimer178 != null){
        DestroyTimer(bj_cineFadeFinishTimer178)
    } else {
    }
}


function SetCineFilterTexture(string filename108) returns void{ 
}


function SetCineFilterBlendMode(blendmode whichMode180) returns void{ 
}


function SetCineFilterTexMapFlags(texmapflags whichFlags257) returns void{ 
}


function SetCineFilterStartUV(real minu200, real minv496, real maxu225, real maxv319) returns void{ 
}


function SetCineFilterEndUV(real minu248, real minv213, real maxu267, real maxv235) returns void{ 
}


function PercentTo255(real percentage117) returns integer{ 
    return PercentToInt(percentage117, 255)
}


function SetCineFilterStartColor(integer red303, integer green160, integer blue280, integer alpha113) returns void{ 
}


function SetCineFilterEndColor(integer red140, integer green366, integer blue143, integer alpha305) returns void{ 
}


function SetCineFilterDuration(real duration774) returns void{ 
}


function DisplayCineFilter(boolean flag285) returns void{ 
}


function CinematicFadeBJ(integer fadetype143, real duration789, string tex498, real red198, real green319, real blue248, real trans303) returns void{ 
    if (fadetype143 == bj_CINEFADETYPE_FADEOUT244){
        AbortCinematicFadeBJ()
        CinematicFadeCommonBJ(red198, green319, blue248, duration789, tex498, 100., trans303)
    } else {
        if (fadetype143 == bj_CINEFADETYPE_FADEIN698){
            AbortCinematicFadeBJ()
            CinematicFadeCommonBJ(red198, green319, blue248, duration789, tex498, trans303, 100.)
            FinishCinematicFadeAfterBJ(duration789)
        } else {
            if (fadetype143 == bj_CINEFADETYPE_FADEOUTIN244){
                if (duration789 > 0.){
                    AbortCinematicFadeBJ()
                    CinematicFadeCommonBJ(red198, green319, blue248, (duration789 * 0.5), tex498, 100., trans303)
                    ContinueCinematicFadeAfterBJ((duration789 * 0.5), red198, green319, blue248, trans303, tex498)
                    FinishCinematicFadeAfterBJ(duration789)
                } else {
                }
            } else {
            }
        }
    }
}


function CinematicFadeCommonBJ(real red182, real green299, real blue219, real duration108, string tex184, real startTrans160, real endTrans112) returns void{ 
    if (duration108 == 0.){
        startTrans160 = endTrans112
    } else {
    }
    EnableUserUI(false)
    SetCineFilterTexture(tex184)
    SetCineFilterBlendMode(BLEND_MODE_BLEND236)
    SetCineFilterTexMapFlags(TEXMAP_FLAG_NONE275)
    SetCineFilterStartUV(0., 0., 1., 1.)
    SetCineFilterEndUV(0., 0., 1., 1.)
    SetCineFilterStartColor(PercentTo255(red182), PercentTo255(green299), PercentTo255(blue219), PercentTo255((100. - startTrans160)))
    SetCineFilterEndColor(PercentTo255(red182), PercentTo255(green299), PercentTo255(blue219), PercentTo255((100. - endTrans112)))
    SetCineFilterDuration(duration108)
    DisplayCineFilter(true)
}


function FinishCinematicFadeAfterBJ(real duration859) returns void{ 
    bj_cineFadeFinishTimer178 = CreateTimer()
    TimerStart(bj_cineFadeFinishTimer178, duration859, false, function FinishCinematicFadeBJ)
}


function ContinueCinematicFadeAfterBJ(real duration356, real red245, real green149, real blue403, real trans295, string tex279) returns void{ 
    bj_cineFadeContinueRed179 = red245
    bj_cineFadeContinueGreen194 = green149
    bj_cineFadeContinueBlue252 = blue403
    bj_cineFadeContinueTrans135 = trans295
    bj_cineFadeContinueDuration139 = duration356
    bj_cineFadeContinueTex317 = tex279
    bj_cineFadeContinueTimer197 = CreateTimer()
    TimerStart(bj_cineFadeContinueTimer197, duration356, false, function ContinueCinematicFadeBJ)
}


function ContinueCinematicFadeBJ() returns void{ 
    DestroyTimer(bj_cineFadeContinueTimer197)
    bj_cineFadeContinueTimer197 = null
    CinematicFadeCommonBJ(bj_cineFadeContinueRed179, bj_cineFadeContinueGreen194, bj_cineFadeContinueBlue252, bj_cineFadeContinueDuration139, bj_cineFadeContinueTex317, bj_cineFadeContinueTrans135, 100.)
}


function FinishCinematicFadeBJ() returns void{ 
    DestroyTimer(bj_cineFadeFinishTimer178)
    bj_cineFadeFinishTimer178 = null
    DisplayCineFilter(false)
    EnableUserUI(true)
}


function EnableUserUI(boolean b306) returns void{ 
}


function DisplayCineFilterBJ(boolean flag119) returns void{ 
    DisplayCineFilter(flag119)
}


function CinematicModeBJ(boolean cineMode241, force forForce247) returns void{ 
    CinematicModeExBJ(cineMode241, forForce247, bj_CINEMODE_INTERFACEFADE274)
}


function CinematicModeExBJ(boolean cineMode848, force forForce142, real interfaceFadeTime319) returns void{ 
    if (not bj_gameStarted865){
        interfaceFadeTime319 = 0.
    } else {
    }
    if cineMode848{
        if (not bj_cineModeAlreadyIn192){
            bj_cineModeAlreadyIn192 = true
            bj_cineModePriorSpeed173 = GetGameSpeed()
            bj_cineModePriorFogSetting329 = IsFogEnabled()
            bj_cineModePriorMaskSetting205 = IsFogMaskEnabled()
            bj_cineModePriorDawnDusk212 = IsDawnDuskEnabled()
            bj_cineModeSavedSeed333 = GetRandomInt(0, 1000000)
        } else {
        }
        if IsPlayerInForce(GetLocalPlayer(), forForce142){
            ClearTextMessages()
            ShowInterface(false, interfaceFadeTime319)
            EnableUserControl(false)
            EnableOcclusion(false)
            SetCineModeVolumeGroupsBJ()
        } else {
        }
        SetGameSpeed(bj_CINEMODE_GAMESPEED503)
        SetMapFlag(MAP_LOCK_SPEED243, true)
        FogMaskEnable(false)
        FogEnable(false)
        EnableWorldFogBoundary(false)
        EnableDawnDusk(false)
        SetRandomSeed(0)
    } else {
        bj_cineModeAlreadyIn192 = false
        if IsPlayerInForce(GetLocalPlayer(), forForce142){
            ShowInterface(true, interfaceFadeTime319)
            EnableUserControl(true)
            EnableOcclusion(true)
            VolumeGroupReset()
            EndThematicMusic()
            CameraResetSmoothingFactorBJ()
        } else {
        }
        SetMapFlag(MAP_LOCK_SPEED243, false)
        SetGameSpeed(bj_cineModePriorSpeed173)
        FogMaskEnable(bj_cineModePriorMaskSetting205)
        FogEnable(bj_cineModePriorFogSetting329)
        EnableWorldFogBoundary(true)
        EnableDawnDusk(bj_cineModePriorDawnDusk212)
        SetRandomSeed(bj_cineModeSavedSeed333)
    }
}


function IsDawnDuskEnabled() returns boolean{ 
    return bj_useDawnDuskSounds234
}


function IsPlayerInForce(player whichPlayer274, force whichForce262) returns boolean{ 
}


function ClearTextMessages() returns void{ 
}


function ShowInterface(boolean flag120, real fadeDuration285) returns void{ 
}


function EnableUserControl(boolean b125) returns void{ 
}


function EnableOcclusion(boolean flag283) returns void{ 
}


function SetCineModeVolumeGroupsBJ() returns void{ 
    if bj_gameStarted865{
        SetCineModeVolumeGroupsImmediateBJ()
    } else {
        TimerStart(bj_volumeGroupsTimer329, bj_GAME_STARTED_THRESHOLD324, false, function SetCineModeVolumeGroupsImmediateBJ)
    }
}


function SetGameSpeed(gamespeed whichspeed449) returns void{ 
}


function FogMaskEnable(boolean enable398) returns void{ 
}


function FogEnable(boolean enable273) returns void{ 
}


function EnableWorldFogBoundary(boolean b867) returns void{ 
}


function EnableDawnDusk(boolean flag521) returns void{ 
    bj_useDawnDuskSounds234 = flag521
}


function SetRandomSeed(integer seed125) returns void{ 
}


function VolumeGroupReset() returns void{ 
}


function EndThematicMusic() returns void{ 
}


function CameraResetSmoothingFactorBJ() returns void{ 
    CameraSetSmoothingFactor(0.)
}


function ForceCinematicSubtitlesBJ(boolean flag328) returns void{ 
    ForceCinematicSubtitles(flag328)
}


function ForceCinematicSubtitles(boolean flag248) returns void{ 
}


function GetLastTransmissionDurationBJ() returns real{ 
    return bj_lastTransmissionDuration193
}


function TransmissionFromUnitTypeWithNameBJ(force toForce858, player fromPlayer303, integer unitId146, string unitName573, location loc191, sound soundHandle163, string message184, integer timeType142, real timeVal166, boolean wait280) returns void{ 
    TryInitCinematicBehaviorBJ()
    timeVal166 = RMaxBJ(timeVal166, 0.)
    bj_lastTransmissionDuration193 = GetTransmissionDuration(soundHandle163, timeType142, timeVal166)
    bj_lastPlayedSound283 = soundHandle163
    if IsPlayerInForce(GetLocalPlayer(), toForce858){
        DoTransmissionBasicsXYBJ(unitId146, GetPlayerColor(fromPlayer303), GetLocationX(loc191), GetLocationY(loc191), soundHandle163, unitName573, message184, bj_lastTransmissionDuration193)
    } else {
    }
    if (wait280 and (bj_lastTransmissionDuration193 > 0.)){
        WaitTransmissionDuration(soundHandle163, timeType142, timeVal166)
    } else {
    }
}


function TryInitCinematicBehaviorBJ() returns void{ 
    local integer index150
    null
    if (bj_cineSceneBeingSkipped801 == null){
        bj_cineSceneBeingSkipped801 = CreateTrigger()
        index150 = 0
        loop {
            TriggerRegisterPlayerEvent(bj_cineSceneBeingSkipped801, Player(index150), EVENT_PLAYER_END_CINEMATIC128)
            index150 = (index150 + 1)
            exitwhen (index150 == bj_MAX_PLAYERS403)
        }
        TriggerAddAction(bj_cineSceneBeingSkipped801, function CancelCineSceneBJ)
    } else {
    }
}


function RMaxBJ(real a235, real b266) returns real{ 
    if (a235 < b266){
        return b266
    } else {
        return a235
    }
}


function GetTransmissionDuration(sound soundHandle168, integer timeType294, real timeVal323) returns real{ 
    local real duration227
    null
    if (timeType294 == bj_TIMETYPE_ADD699){
        duration227 = (GetSoundDurationBJ(soundHandle168) + timeVal323)
    } else {
        if (timeType294 == bj_TIMETYPE_SET237){
            duration227 = timeVal323
        } else {
            if (timeType294 == bj_TIMETYPE_SUB275){
                duration227 = (GetSoundDurationBJ(soundHandle168) - timeVal323)
            } else {
                duration227 = GetSoundDurationBJ(soundHandle168)
            }
        }
    }
    if (duration227 < 0.){
        duration227 = 0.
    } else {
    }
    return duration227
}


function GetPlayerColor(player whichPlayer131) returns playercolor{ 
}


function DoTransmissionBasicsXYBJ(integer unitId602, playercolor color216, real x678, real y272, sound soundHandle374, string unitName253, string message500, real duration471) returns void{ 
    SetCinematicSceneBJ(soundHandle374, unitId602, color216, unitName253, message500, (duration471 + bj_TRANSMISSION_PORT_HANGTIME112), duration471)
    if (unitId602 != 0){
        PingMinimap(x678, y272, bj_TRANSMISSION_PING_TIME162)
    } else {
    }
}


function WaitTransmissionDuration(sound soundHandle950, integer timeType111, real timeVal300) returns void{ 
    if (timeType111 == bj_TIMETYPE_SET237){
        TriggerSleepAction(timeVal300)
    } else {
        if (soundHandle950 == null){
            TriggerSleepAction(bj_NOTHING_SOUND_DURATION284)
        } else {
            if (timeType111 == bj_TIMETYPE_SUB275){
                WaitForSoundBJ(soundHandle950, timeVal300)
            } else {
                if (timeType111 == bj_TIMETYPE_ADD699){
                    WaitForSoundBJ(soundHandle950, 0.)
                    TriggerSleepAction(timeVal300)
                } else {
                }
            }
        }
    }
}


function TransmissionFromUnitWithNameBJ(force toForce258, unit whichUnit234, string unitName122, sound soundHandle212, string message542, integer timeType206, real timeVal127, boolean wait301) returns void{ 
    TryInitCinematicBehaviorBJ()
    timeVal127 = RMaxBJ(timeVal127, 0.)
    bj_lastTransmissionDuration193 = GetTransmissionDuration(soundHandle212, timeType206, timeVal127)
    bj_lastPlayedSound283 = soundHandle212
    if IsPlayerInForce(GetLocalPlayer(), toForce258){
        if (whichUnit234 == null){
            DoTransmissionBasicsXYBJ(0, PLAYER_COLOR_RED257, 0., 0., soundHandle212, unitName122, message542, bj_lastTransmissionDuration193)
        } else {
            DoTransmissionBasicsXYBJ(GetUnitTypeId(whichUnit234), GetPlayerColor(GetOwningPlayer(whichUnit234)), GetUnitX(whichUnit234), GetUnitY(whichUnit234), soundHandle212, unitName122, message542, bj_lastTransmissionDuration193)
            if (not IsUnitHidden(whichUnit234)){
                UnitAddIndicator(whichUnit234, bj_TRANSMISSION_IND_RED263, bj_TRANSMISSION_IND_BLUE293, bj_TRANSMISSION_IND_GREEN282, bj_TRANSMISSION_IND_ALPHA603)
            } else {
            }
        }
    } else {
    }
    if (wait301 and (bj_lastTransmissionDuration193 > 0.)){
        WaitTransmissionDuration(soundHandle212, timeType206, timeVal127)
    } else {
    }
}


function IsUnitHidden(unit whichUnit916) returns boolean{ 
}


function SetCinematicSceneBJ(sound soundHandle294, integer portraitUnitId478, playercolor color213, string speakerTitle298, string text240, real sceneDuration329, real voiceoverDuration545) returns void{ 
    bj_cineSceneLastSound188 = soundHandle294
    PlaySoundBJ(soundHandle294)
    SetCinematicScene(portraitUnitId478, color213, speakerTitle298, text240, sceneDuration329, voiceoverDuration545)
}


function PingMinimap(real x272, real y256, real duration758) returns void{ 
}


function TriggerSleepAction(real timeout174) returns void{ 
}


function WaitForSoundBJ(sound soundHandle156, real offset216) returns void{ 
    TriggerWaitForSound(soundHandle156, offset216)
}


function GetSoundDurationBJ(sound soundHandle293) returns real{ 
    if (soundHandle293 == null){
        return bj_NOTHING_SOUND_DURATION284
    } else {
        return (I2R(GetSoundDuration(soundHandle293)) * 0.001)
    }
}


function PlaySoundBJ(sound soundHandle193) returns void{ 
    bj_lastPlayedSound283 = soundHandle193
    if (soundHandle193 != null){
        StartSound(soundHandle193)
    } else {
    }
}


function SetCinematicScene(integer portraitUnitId287, playercolor color143, string speakerTitle561, string text116, real sceneDuration516, real voiceoverDuration184) returns void{ 
}


function CancelCineSceneBJ() returns void{ 
    StopSoundBJ(bj_cineSceneLastSound188, true)
    EndCinematicScene()
}


function StopSoundBJ(sound soundHandle332, boolean fadeOut114) returns void{ 
    StopSound(soundHandle332, false, fadeOut114)
}


function EndCinematicScene() returns void{ 
}


function EnableOcclusionBJ(boolean enable131, force f251) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), f251){
        EnableOcclusion(enable131)
    } else {
    }
}


function EnableWorldFogBoundaryBJ(boolean enable215, force f173) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), f173){
        EnableWorldFogBoundary(enable215)
    } else {
    }
}


function PingMinimapLocForForceEx(force whichForce637, location loc108, real duration277, integer style231, real red243, real green157, real blue281) returns void{ 
    PingMinimapForForceEx(whichForce637, GetLocationX(loc108), GetLocationY(loc108), duration277, style231, red243, green157, blue281)
}


function PingMinimapForForceEx(force whichForce108, real x694, real y205, real duration676, integer style791, real red209, real green102, real blue203) returns void{ 
    local integer red255303
    local integer green255204
    local integer blue255433
    red255303 = PercentTo255(red209)
    green255204 = PercentTo255(green102)
    blue255433 = PercentTo255(blue203)
    if IsPlayerInForce(GetLocalPlayer(), whichForce108){
        if (((red255303 == 255) and (green255204 == 0)) and (blue255433 == 0)){
            red255303 = 254
        } else {
        }
        if (style791 == bj_MINIMAPPINGSTYLE_SIMPLE326){
            PingMinimapEx(x694, y205, duration676, red255303, green255204, blue255433, false)
        } else {
            if (style791 == bj_MINIMAPPINGSTYLE_FLASHY136){
                PingMinimapEx(x694, y205, duration676, red255303, green255204, blue255433, true)
            } else {
                if (style791 == bj_MINIMAPPINGSTYLE_ATTACK730){
                    PingMinimapEx(x694, y205, duration676, 255, 0, 0, false)
                } else {
                }
            }
        }
    } else {
    }
}


function PingMinimapEx(real x241, real y850, real duration311, integer red181, integer green123, integer blue444, boolean extraEffects154) returns void{ 
}


function PingMinimapLocForPlayer(player whichPlayer297, location loc492, real duration266) returns void{ 
    PingMinimapForPlayer(whichPlayer297, GetLocationX(loc492), GetLocationY(loc492), duration266)
}


function PingMinimapLocForForce(force whichForce116, location loc360, real duration331) returns void{ 
    PingMinimapForForce(whichForce116, GetLocationX(loc360), GetLocationY(loc360), duration331)
}


function PingMinimapForForce(force whichForce322, real x167, real y672, real duration164) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), whichForce322){
        PingMinimap(x167, y672, duration164)
    } else {
    }
}


function ShowInterfaceForceOff(force whichForce294, real fadeDuration539) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), whichForce294){
        ShowInterface(false, fadeDuration539)
    } else {
    }
}


function ShowInterfaceForceOn(force whichForce146, real fadeDuration148) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), whichForce146){
        ShowInterface(true, fadeDuration148)
    } else {
    }
}


function SetUserControlForceOff(force whichForce670) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), whichForce670){
        EnableUserControl(false)
    } else {
    }
}


function SetUserControlForceOn(force whichForce201) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), whichForce201){
        EnableUserControl(true)
    } else {
    }
}


function PauseGameOff() returns void{ 
    PauseGame(false)
}


function PauseGame(boolean flag328) returns void{ 
}


function PauseGameOn() returns void{ 
    PauseGame(true)
}


function GetLastCreatedTextTag() returns texttag{ 
    return bj_lastCreatedTextTag340
}


function ShowTextTagForceBJ(boolean show138, texttag tt596, force whichForce274) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), whichForce274){
        SetTextTagVisibility(tt596, show138)
    } else {
    }
}


function SetTextTagVisibility(texttag t221, boolean flag251) returns void{ 
}


function DestroyTextTagBJ(texttag tt630) returns void{ 
    DestroyTextTag(tt630)
}


function DestroyTextTag(texttag t291) returns void{ 
}


function CreateTextTagUnitBJ(string s451, unit whichUnit220, real zOffset246, real size160, real red179, real green265, real blue250, real transparency609) returns texttag{ 
    bj_lastCreatedTextTag340 = CreateTextTag()
    SetTextTagTextBJ(bj_lastCreatedTextTag340, s451, size160)
    SetTextTagPosUnitBJ(bj_lastCreatedTextTag340, whichUnit220, zOffset246)
    SetTextTagColorBJ(bj_lastCreatedTextTag340, red179, green265, blue250, transparency609)
    return bj_lastCreatedTextTag340
}


function CreateTextTag() returns texttag{ 
}


function SetTextTagTextBJ(texttag tt120, string s163, real size280) returns void{ 
    local real textHeight162
    textHeight162 = TextTagSize2Height(size280)
    SetTextTagText(tt120, s163, textHeight162)
}


function SetTextTagPosUnitBJ(texttag tt171, unit whichUnit100, real zOffset189) returns void{ 
    SetTextTagPosUnit(tt171, whichUnit100, zOffset189)
}


function SetTextTagColorBJ(texttag tt329, real red292, real green242, real blue211, real transparency320) returns void{ 
    SetTextTagColor(tt329, PercentTo255(red292), PercentTo255(green242), PercentTo255(blue211), PercentTo255((100.0 - transparency320)))
}


function CreateTextTagLocBJ(string s264, location loc191, real zOffset169, real size120, real red152, real green106, real blue130, real transparency276) returns texttag{ 
    bj_lastCreatedTextTag340 = CreateTextTag()
    SetTextTagTextBJ(bj_lastCreatedTextTag340, s264, size120)
    SetTextTagPosBJ(bj_lastCreatedTextTag340, loc191, zOffset169)
    SetTextTagColorBJ(bj_lastCreatedTextTag340, red152, green106, blue130, transparency276)
    return bj_lastCreatedTextTag340
}


function SetTextTagPosBJ(texttag tt120, location loc513, real zOffset141) returns void{ 
    SetTextTagPos(tt120, GetLocationX(loc513), GetLocationY(loc513), zOffset141)
}


function SetTextTagFadepointBJ(texttag tt186, real fadepoint218) returns void{ 
    SetTextTagFadepoint(tt186, fadepoint218)
}


function SetTextTagFadepoint(texttag t157, real fadepoint275) returns void{ 
}


function SetTextTagLifespanBJ(texttag tt849, real lifespan152) returns void{ 
    SetTextTagLifespan(tt849, lifespan152)
}


function SetTextTagLifespan(texttag t591, real lifespan169) returns void{ 
}


function SetTextTagAgeBJ(texttag tt306, real age292) returns void{ 
    SetTextTagAge(tt306, age292)
}


function SetTextTagAge(texttag t185, real age271) returns void{ 
}


function SetTextTagPermanentBJ(texttag tt237, boolean flag161) returns void{ 
    SetTextTagPermanent(tt237, flag161)
}


function SetTextTagPermanent(texttag t102, boolean flag243) returns void{ 
}


function SetTextTagSuspendedBJ(texttag tt159, boolean flag578) returns void{ 
    SetTextTagSuspended(tt159, flag578)
}


function SetTextTagSuspended(texttag t283, boolean flag129) returns void{ 
}


function SetTextTagPosUnit(texttag t195, unit whichUnit148, real heightOffset242) returns void{ 
}


function SetTextTagPos(texttag t196, real x145, real y799, real heightOffset794) returns void{ 
}


function TextTagSize2Height(real size128) returns real{ 
    return ((size128 * 0.023) / 10.)
}


function SetTextTagText(texttag t192, string s147, real height222) returns void{ 
}


function SetTextTagVelocityBJ(texttag tt157, real speed164, real angle187) returns void{ 
    local real vel108
    local real xvel983
    local real yvel218
    vel108 = TextTagSpeed2Velocity(speed164)
    xvel983 = (vel108 * Cos((angle187 * bj_DEGTORAD197)))
    yvel218 = (vel108 * Sin((angle187 * bj_DEGTORAD197)))
    SetTextTagVelocity(tt157, xvel983, yvel218)
}


function TextTagSpeed2Velocity(real speed218) returns real{ 
    return ((speed218 * 0.071) / 128.)
}


function SetTextTagVelocity(texttag t536, real xvel555, real yvel228) returns void{ 
}


function SetTextTagColor(texttag t184, integer red256, integer green654, integer blue266, integer alpha745) returns void{ 
}


function MultiboardSetItemIconBJ(multiboard mb250, integer col488, integer row613, string iconFileName199) returns void{ 
    local integer curRow184
    local integer curCol317
    local integer numRows165
    local integer numCols223
    local multiboarditem mbitem198
    curRow184 = 0
    curCol317 = 0
    numRows165 = MultiboardGetRowCount(mb250)
    numCols223 = MultiboardGetColumnCount(mb250)
    mbitem198 = null
    loop {
        curRow184 = (curRow184 + 1)
        exitwhen (curRow184 > numRows165)
        if ((row613 == 0) or (row613 == curRow184)){
            curCol317 = 0
            loop {
                curCol317 = (curCol317 + 1)
                exitwhen (curCol317 > numCols223)
                if ((col488 == 0) or (col488 == curCol317)){
                    mbitem198 = MultiboardGetItem(mb250, (curRow184 - 1), (curCol317 - 1))
                    MultiboardSetItemIcon(mbitem198, iconFileName199)
                    MultiboardReleaseItem(mbitem198)
                } else {
                }
            }
        } else {
        }
    }
}


function MultiboardGetRowCount(multiboard lb776) returns integer{ 
}


function MultiboardGetColumnCount(multiboard lb925) returns integer{ 
}


function MultiboardGetItem(multiboard lb597, integer row103, integer column112) returns multiboarditem{ 
}


function MultiboardSetItemIcon(multiboarditem mbi183, string iconFileName813) returns void{ 
}


function MultiboardReleaseItem(multiboarditem mbi253) returns void{ 
}


function MultiboardSetItemWidthBJ(multiboard mb251, integer col154, integer row230, real width377) returns void{ 
    local integer curRow217
    local integer curCol243
    local integer numRows124
    local integer numCols240
    local multiboarditem mbitem240
    curRow217 = 0
    curCol243 = 0
    numRows124 = MultiboardGetRowCount(mb251)
    numCols240 = MultiboardGetColumnCount(mb251)
    mbitem240 = null
    loop {
        curRow217 = (curRow217 + 1)
        exitwhen (curRow217 > numRows124)
        if ((row230 == 0) or (row230 == curRow217)){
            curCol243 = 0
            loop {
                curCol243 = (curCol243 + 1)
                exitwhen (curCol243 > numCols240)
                if ((col154 == 0) or (col154 == curCol243)){
                    mbitem240 = MultiboardGetItem(mb251, (curRow217 - 1), (curCol243 - 1))
                    MultiboardSetItemWidth(mbitem240, (width377 / 100.0))
                    MultiboardReleaseItem(mbitem240)
                } else {
                }
            }
        } else {
        }
    }
}


function MultiboardSetItemWidth(multiboarditem mbi157, real width266) returns void{ 
}


function MultiboardSetItemColorBJ(multiboard mb258, integer col113, integer row216, real red781, real green867, real blue979, real transparency161) returns void{ 
    local integer curRow214
    local integer curCol121
    local integer numRows217
    local integer numCols112
    local multiboarditem mbitem287
    curRow214 = 0
    curCol121 = 0
    numRows217 = MultiboardGetRowCount(mb258)
    numCols112 = MultiboardGetColumnCount(mb258)
    mbitem287 = null
    loop {
        curRow214 = (curRow214 + 1)
        exitwhen (curRow214 > numRows217)
        if ((row216 == 0) or (row216 == curRow214)){
            curCol121 = 0
            loop {
                curCol121 = (curCol121 + 1)
                exitwhen (curCol121 > numCols112)
                if ((col113 == 0) or (col113 == curCol121)){
                    mbitem287 = MultiboardGetItem(mb258, (curRow214 - 1), (curCol121 - 1))
                    MultiboardSetItemValueColor(mbitem287, PercentTo255(red781), PercentTo255(green867), PercentTo255(blue979), PercentTo255((100.0 - transparency161)))
                    MultiboardReleaseItem(mbitem287)
                } else {
                }
            }
        } else {
        }
    }
}


function MultiboardSetItemValueColor(multiboarditem mbi192, integer red287, integer green329, integer blue252, integer alpha324) returns void{ 
}


function MultiboardSetItemValueBJ(multiboard mb254, integer col874, integer row160, string val268) returns void{ 
    local integer curRow138
    local integer curCol253
    local integer numRows173
    local integer numCols190
    local multiboarditem mbitem234
    curRow138 = 0
    curCol253 = 0
    numRows173 = MultiboardGetRowCount(mb254)
    numCols190 = MultiboardGetColumnCount(mb254)
    mbitem234 = null
    loop {
        curRow138 = (curRow138 + 1)
        exitwhen (curRow138 > numRows173)
        if ((row160 == 0) or (row160 == curRow138)){
            curCol253 = 0
            loop {
                curCol253 = (curCol253 + 1)
                exitwhen (curCol253 > numCols190)
                if ((col874 == 0) or (col874 == curCol253)){
                    mbitem234 = MultiboardGetItem(mb254, (curRow138 - 1), (curCol253 - 1))
                    MultiboardSetItemValue(mbitem234, val268)
                    MultiboardReleaseItem(mbitem234)
                } else {
                }
            }
        } else {
        }
    }
}


function MultiboardSetItemValue(multiboarditem mbi288, string val696) returns void{ 
}


function MultiboardSetItemStyleBJ(multiboard mb148, integer col109, integer row114, boolean showValue214, boolean showIcon260) returns void{ 
    local integer curRow301
    local integer curCol307
    local integer numRows284
    local integer numCols107
    local multiboarditem mbitem233
    curRow301 = 0
    curCol307 = 0
    numRows284 = MultiboardGetRowCount(mb148)
    numCols107 = MultiboardGetColumnCount(mb148)
    mbitem233 = null
    loop {
        curRow301 = (curRow301 + 1)
        exitwhen (curRow301 > numRows284)
        if ((row114 == 0) or (row114 == curRow301)){
            curCol307 = 0
            loop {
                curCol307 = (curCol307 + 1)
                exitwhen (curCol307 > numCols107)
                if ((col109 == 0) or (col109 == curCol307)){
                    mbitem233 = MultiboardGetItem(mb148, (curRow301 - 1), (curCol307 - 1))
                    MultiboardSetItemStyle(mbitem233, showValue214, showIcon260)
                    MultiboardReleaseItem(mbitem233)
                } else {
                }
            }
        } else {
        }
    }
}


function MultiboardSetItemStyle(multiboarditem mbi257, boolean showValue243, boolean showIcon149) returns void{ 
}


function MultiboardAllowDisplayBJ(boolean flag282) returns void{ 
    MultiboardSuppressDisplay((not flag282))
}


function MultiboardSuppressDisplay(boolean flag322) returns void{ 
}


function MultiboardSetTitleTextColorBJ(multiboard mb103, real red808, real green249, real blue787, real transparency714) returns void{ 
    MultiboardSetTitleTextColor(mb103, PercentTo255(red808), PercentTo255(green249), PercentTo255(blue787), PercentTo255((100.0 - transparency714)))
}


function MultiboardSetTitleTextColor(multiboard lb167, integer red227, integer green271, integer blue126, integer alpha940) returns void{ 
}


function MultiboardMinimizeBJ(boolean minimize556, multiboard mb174) returns void{ 
    MultiboardMinimize(mb174, minimize556)
}


function MultiboardMinimize(multiboard lb156, boolean minimize195) returns void{ 
}


function MultiboardDisplayBJ(boolean show165, multiboard mb661) returns void{ 
    MultiboardDisplay(mb661, show165)
}


function MultiboardDisplay(multiboard lb165, boolean show331) returns void{ 
}


function GetLastCreatedMultiboard() returns multiboard{ 
    return bj_lastCreatedMultiboard393
}


function DestroyMultiboardBJ(multiboard mb617) returns void{ 
    DestroyMultiboard(mb617)
}


function DestroyMultiboard(multiboard lb272) returns void{ 
}


function CreateMultiboardBJ(integer cols362, integer rows477, string title161) returns multiboard{ 
    bj_lastCreatedMultiboard393 = CreateMultiboard()
    MultiboardSetRowCount(bj_lastCreatedMultiboard393, rows477)
    MultiboardSetColumnCount(bj_lastCreatedMultiboard393, cols362)
    MultiboardSetTitleText(bj_lastCreatedMultiboard393, title161)
    MultiboardDisplay(bj_lastCreatedMultiboard393, true)
    return bj_lastCreatedMultiboard393
}


function CreateMultiboard() returns multiboard{ 
}


function MultiboardSetRowCount(multiboard lb276, integer count230) returns void{ 
}


function MultiboardSetColumnCount(multiboard lb356, integer count168) returns void{ 
}


function MultiboardSetTitleText(multiboard lb211, string label118) returns void{ 
}


function GetLastCreatedLeaderboard() returns leaderboard{ 
    return bj_lastCreatedLeaderboard256
}


function PlayerGetLeaderboardBJ(player whichPlayer151) returns leaderboard{ 
    return PlayerGetLeaderboard(whichPlayer151)
}


function PlayerGetLeaderboard(player toPlayer287) returns leaderboard{ 
}


function LeaderboardGetIndexedPlayerBJ(integer position308, leaderboard lb253) returns player{ 
    local integer index309
    local player indexPlayer151
    null
    null
    index309 = 0
    loop {
        indexPlayer151 = Player(index309)
        if (LeaderboardGetPlayerIndex(lb253, indexPlayer151) == (position308 - 1)){
            return indexPlayer151
        } else {
        }
        index309 = (index309 + 1)
        exitwhen (index309 == bj_MAX_PLAYERS403)
    }
    return Player(PLAYER_NEUTRAL_PASSIVE452)
}


function LeaderboardGetPlayerIndex(leaderboard lb456, player p137) returns integer{ 
}


function LeaderboardGetPlayerIndexBJ(player whichPlayer160, leaderboard lb437) returns integer{ 
    return (LeaderboardGetPlayerIndex(lb437, whichPlayer160) + 1)
}


function LeaderboardSortItemsByLabelBJ(leaderboard lb912, boolean ascending333) returns void{ 
    LeaderboardSortItemsByLabel(lb912, ascending333)
}


function LeaderboardSortItemsByLabel(leaderboard lb261, boolean ascending271) returns void{ 
}


function LeaderboardSortItemsByPlayerBJ(leaderboard lb309, boolean ascending332) returns void{ 
    LeaderboardSortItemsByPlayer(lb309, ascending332)
}


function LeaderboardSortItemsByPlayer(leaderboard lb136, boolean ascending250) returns void{ 
}


function LeaderboardSortItemsBJ(leaderboard lb675, integer sortType211, boolean ascending364) returns void{ 
    if (sortType211 == bj_SORTTYPE_SORTBYVALUE677){
        LeaderboardSortItemsByValue(lb675, ascending364)
    } else {
        if (sortType211 == bj_SORTTYPE_SORTBYPLAYER298){
            LeaderboardSortItemsByPlayer(lb675, ascending364)
        } else {
            if (sortType211 == bj_SORTTYPE_SORTBYLABEL194){
                LeaderboardSortItemsByLabel(lb675, ascending364)
            } else {
            }
        }
    }
}


function LeaderboardSortItemsByValue(leaderboard lb883, boolean ascending174) returns void{ 
}


function LeaderboardRemovePlayerItemBJ(player whichPlayer167, leaderboard lb192) returns void{ 
    LeaderboardRemovePlayerItem(lb192, whichPlayer167)
    LeaderboardResizeBJ(lb192)
}


function LeaderboardRemovePlayerItem(leaderboard lb326, player p306) returns void{ 
}


function LeaderboardResizeBJ(leaderboard lb139) returns void{ 
    local integer size314
    size314 = LeaderboardGetItemCount(lb139)
    if (LeaderboardGetLabelText(lb139) == ""){
        size314 = (size314 - 1)
    } else {
    }
    LeaderboardSetSizeByItemCount(lb139, size314)
}


function LeaderboardAddItemBJ(player whichPlayer204, leaderboard lb165, string label536, integer value318) returns void{ 
    if LeaderboardHasPlayerItem(lb165, whichPlayer204){
        LeaderboardRemovePlayerItem(lb165, whichPlayer204)
    } else {
    }
    LeaderboardAddItem(lb165, label536, value318, whichPlayer204)
    LeaderboardResizeBJ(lb165)
}


function LeaderboardHasPlayerItem(leaderboard lb178, player p198) returns boolean{ 
}


function LeaderboardAddItem(leaderboard lb676, string label763, integer value110, player p202) returns void{ 
}


function LeaderboardDisplayBJ(boolean show221, leaderboard lb360) returns void{ 
    LeaderboardDisplay(lb360, show221)
}


function LeaderboardDisplay(leaderboard lb158, boolean show270) returns void{ 
}


function DestroyLeaderboardBJ(leaderboard lb144) returns void{ 
    DestroyLeaderboard(lb144)
}


function DestroyLeaderboard(leaderboard lb116) returns void{ 
}


function CreateLeaderboardBJ(force toForce757, string label123) returns leaderboard{ 
    bj_lastCreatedLeaderboard256 = CreateLeaderboard()
    LeaderboardSetLabel(bj_lastCreatedLeaderboard256, label123)
    ForceSetLeaderboardBJ(bj_lastCreatedLeaderboard256, toForce757)
    LeaderboardDisplay(bj_lastCreatedLeaderboard256, true)
    return bj_lastCreatedLeaderboard256
}


function CreateLeaderboard() returns leaderboard{ 
}


function LeaderboardSetLabel(leaderboard lb242, string label260) returns void{ 
}


function ForceSetLeaderboardBJ(leaderboard lb404, force toForce262) returns void{ 
    local integer index172
    local player indexPlayer189
    null
    null
    index172 = 0
    loop {
        indexPlayer189 = Player(index172)
        if IsPlayerInForce(indexPlayer189, toForce262){
            PlayerSetLeaderboard(indexPlayer189, lb404)
        } else {
        }
        index172 = (index172 + 1)
        exitwhen (index172 == bj_MAX_PLAYERS403)
    }
}


function PlayerSetLeaderboard(player toPlayer167, leaderboard lb228) returns void{ 
}


function LeaderboardHasPlayerItemBJ(leaderboard lb302, player whichPlayer784) returns boolean{ 
    return LeaderboardHasPlayerItem(lb302, whichPlayer784)
}


function LeaderboardGetItemCountBJ(leaderboard lb110) returns integer{ 
    return LeaderboardGetItemCount(lb110)
}


function LeaderboardGetItemCount(leaderboard lb911) returns integer{ 
}


function LeaderboardSetStyleBJ(leaderboard lb251, boolean showLabel141, boolean showNames153, boolean showValues166, boolean showIcons726) returns void{ 
    LeaderboardSetStyle(lb251, showLabel141, showNames153, showValues166, showIcons726)
}


function LeaderboardSetStyle(leaderboard lb362, boolean showLabel269, boolean showNames141, boolean showValues985, boolean showIcons701) returns void{ 
}


function LeaderboardSetLabelBJ(leaderboard lb132, string label133) returns void{ 
    LeaderboardSetLabel(lb132, label133)
    LeaderboardResizeBJ(lb132)
}


function LeaderboardSetValueColorBJ(leaderboard lb132, real red258, real green217, real blue300, real transparency232) returns void{ 
    LeaderboardSetValueColor(lb132, PercentTo255(red258), PercentTo255(green217), PercentTo255(blue300), PercentTo255((100.0 - transparency232)))
}


function LeaderboardSetValueColor(leaderboard lb251, integer red246, integer green175, integer blue308, integer alpha265) returns void{ 
}


function LeaderboardSetLabelColorBJ(leaderboard lb627, real red931, real green172, real blue113, real transparency122) returns void{ 
    LeaderboardSetLabelColor(lb627, PercentTo255(red931), PercentTo255(green172), PercentTo255(blue113), PercentTo255((100.0 - transparency122)))
}


function LeaderboardSetLabelColor(leaderboard lb265, integer red128, integer green779, integer blue184, integer alpha152) returns void{ 
}


function LeaderboardSetPlayerItemValueColorBJ(player whichPlayer201, leaderboard lb254, real red416, real green201, real blue114, real transparency643) returns void{ 
    LeaderboardSetItemValueColor(lb254, LeaderboardGetPlayerIndex(lb254, whichPlayer201), PercentTo255(red416), PercentTo255(green201), PercentTo255(blue114), PercentTo255((100.0 - transparency643)))
}


function LeaderboardSetItemValueColor(leaderboard lb208, integer whichItem122, integer red159, integer green149, integer blue295, integer alpha257) returns void{ 
}


function LeaderboardSetPlayerItemLabelColorBJ(player whichPlayer271, leaderboard lb194, real red259, real green184, real blue135, real transparency156) returns void{ 
    LeaderboardSetItemLabelColor(lb194, LeaderboardGetPlayerIndex(lb194, whichPlayer271), PercentTo255(red259), PercentTo255(green184), PercentTo255(blue135), PercentTo255((100.0 - transparency156)))
}


function LeaderboardSetItemLabelColor(leaderboard lb625, integer whichItem248, integer red158, integer green104, integer blue333, integer alpha285) returns void{ 
}


function LeaderboardSetPlayerItemStyleBJ(player whichPlayer288, leaderboard lb580, boolean showLabel127, boolean showValue187, boolean showIcon116) returns void{ 
    LeaderboardSetItemStyle(lb580, LeaderboardGetPlayerIndex(lb580, whichPlayer288), showLabel127, showValue187, showIcon116)
}


function LeaderboardSetItemStyle(leaderboard lb918, integer whichItem282, boolean showLabel179, boolean showValue105, boolean showIcon780) returns void{ 
}


function LeaderboardSetPlayerItemLabelBJ(player whichPlayer542, leaderboard lb500, string val203) returns void{ 
    LeaderboardSetItemLabel(lb500, LeaderboardGetPlayerIndex(lb500, whichPlayer542), val203)
}


function LeaderboardSetItemLabel(leaderboard lb266, integer whichItem749, string val329) returns void{ 
}


function LeaderboardSetPlayerItemValueBJ(player whichPlayer941, leaderboard lb239, integer val221) returns void{ 
    LeaderboardSetItemValue(lb239, LeaderboardGetPlayerIndex(lb239, whichPlayer941), val221)
}


function LeaderboardSetItemValue(leaderboard lb210, integer whichItem131, integer val502) returns void{ 
}


function LeaderboardGetLabelText(leaderboard lb268) returns string{ 
}


function LeaderboardSetSizeByItemCount(leaderboard lb181, integer count758) returns void{ 
}


function GetLastCreatedTimerDialogBJ() returns timerdialog{ 
    return bj_lastCreatedTimerDialog308
}


function TimerDialogDisplayBJ(boolean show236, timerdialog td168) returns void{ 
    TimerDialogDisplay(td168, show236)
}


function TimerDialogDisplayForPlayerBJ(boolean show307, timerdialog td150, player whichPlayer194) returns void{ 
    if (GetLocalPlayer() == whichPlayer194){
        TimerDialogDisplay(td150, show307)
    } else {
    }
}


function TimerDialogSetSpeedBJ(timerdialog td169, real speedMultFactor321) returns void{ 
    TimerDialogSetSpeed(td169, speedMultFactor321)
}


function TimerDialogSetSpeed(timerdialog whichDialog816, real speedMultFactor109) returns void{ 
}


function TimerDialogSetTimeColorBJ(timerdialog td132, real red130, real green227, real blue126, real transparency285) returns void{ 
    TimerDialogSetTimeColor(td132, PercentTo255(red130), PercentTo255(green227), PercentTo255(blue126), PercentTo255((100.0 - transparency285)))
}


function TimerDialogSetTimeColor(timerdialog whichDialog313, integer red140, integer green190, integer blue225, integer alpha644) returns void{ 
}


function TimerDialogSetTitleColorBJ(timerdialog td732, real red146, real green234, real blue206, real transparency241) returns void{ 
    TimerDialogSetTitleColor(td732, PercentTo255(red146), PercentTo255(green234), PercentTo255(blue206), PercentTo255((100.0 - transparency241)))
}


function TimerDialogSetTitleColor(timerdialog whichDialog115, integer red400, integer green198, integer blue708, integer alpha936) returns void{ 
}


function TimerDialogSetTitleBJ(timerdialog td151, string title184) returns void{ 
    TimerDialogSetTitle(td151, title184)
}


function DestroyTimerDialogBJ(timerdialog td269) returns void{ 
    DestroyTimerDialog(td269)
}


function DestroyTimerDialog(timerdialog whichDialog475) returns void{ 
}


function CreateTimerDialogBJ(timer t931, string title238) returns timerdialog{ 
    bj_lastCreatedTimerDialog308 = CreateTimerDialog(t931)
    TimerDialogSetTitle(bj_lastCreatedTimerDialog308, title238)
    TimerDialogDisplay(bj_lastCreatedTimerDialog308, true)
    return bj_lastCreatedTimerDialog308
}


function GetLastCreatedTimerBJ() returns timer{ 
    return bj_lastStartedTimer547
}


function PauseTimerBJ(boolean pause197, timer whichTimer100) returns void{ 
    if pause197{
        PauseTimer(whichTimer100)
    } else {
        ResumeTimer(whichTimer100)
    }
}


function ResumeTimer(timer whichTimer881) returns void{ 
}


function DestroyTimerBJ(timer whichTimer272) returns void{ 
    DestroyTimer(whichTimer272)
}


function CreateTimerBJ(boolean periodic210, real timeout115) returns timer{ 
    bj_lastStartedTimer547 = CreateTimer()
    TimerStart(bj_lastStartedTimer547, timeout115, periodic210, null)
    return bj_lastStartedTimer547
}


function StartTimerBJ(timer t109, boolean periodic298, real timeout195) returns timer{ 
    bj_lastStartedTimer547 = t109
    TimerStart(t109, timeout195, periodic298, null)
    return bj_lastStartedTimer547
}


function QuestMessageBJ(force f187, integer messageType973, string message610) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), f187){
        if (messageType973 == bj_QUESTMESSAGE_DISCOVERED260){
            DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_QUEST152, " ")
            DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_QUEST152, message610)
            StartSound(bj_questDiscoveredSound243)
            FlashQuestDialogButton()
        } else {
            if (messageType973 == bj_QUESTMESSAGE_UPDATED235){
                DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_QUESTUPDATE230, " ")
                DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_QUESTUPDATE230, message610)
                StartSound(bj_questUpdatedSound190)
                FlashQuestDialogButton()
            } else {
                if (messageType973 == bj_QUESTMESSAGE_COMPLETED305){
                    DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_QUESTDONE237, " ")
                    DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_QUESTDONE237, message610)
                    StartSound(bj_questCompletedSound262)
                    FlashQuestDialogButton()
                } else {
                    if (messageType973 == bj_QUESTMESSAGE_FAILED299){
                        DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_QUESTFAILED200, " ")
                        DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_QUESTFAILED200, message610)
                        StartSound(bj_questFailedSound443)
                        FlashQuestDialogButton()
                    } else {
                        if (messageType973 == bj_QUESTMESSAGE_REQUIREMENT330){
                            DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_QUESTREQUIREMENT524, message610)
                        } else {
                            if (messageType973 == bj_QUESTMESSAGE_MISSIONFAILED122){
                                DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_MISSIONFAILED271, " ")
                                DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_MISSIONFAILED271, message610)
                                StartSound(bj_questFailedSound443)
                            } else {
                                if (messageType973 == bj_QUESTMESSAGE_HINT323){
                                    DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_HINT856, " ")
                                    DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_HINT856, message610)
                                    StartSound(bj_questHintSound152)
                                } else {
                                    if (messageType973 == bj_QUESTMESSAGE_ALWAYSHINT128){
                                        DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_ALWAYSHINT592, " ")
                                        DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_ALWAYSHINT592, message610)
                                        StartSound(bj_questHintSound152)
                                    } else {
                                        if (messageType973 == bj_QUESTMESSAGE_SECRET308){
                                            DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_SECRET169, " ")
                                            DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_SECRET169, message610)
                                            StartSound(bj_questSecretSound165)
                                        } else {
                                            if (messageType973 == bj_QUESTMESSAGE_UNITACQUIRED286){
                                                DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_UNITACQUIRED980, " ")
                                                DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_UNITACQUIRED980, message610)
                                                StartSound(bj_questHintSound152)
                                            } else {
                                                if (messageType973 == bj_QUESTMESSAGE_UNITAVAILABLE119){
                                                    DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_UNITAVAILABLE326, " ")
                                                    DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_UNITAVAILABLE326, message610)
                                                    StartSound(bj_questHintSound152)
                                                } else {
                                                    if (messageType973 == bj_QUESTMESSAGE_ITEMACQUIRED282){
                                                        DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_ITEMACQUIRED119, " ")
                                                        DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_ITEMACQUIRED119, message610)
                                                        StartSound(bj_questItemAcquiredSound264)
                                                    } else {
                                                        if (messageType973 == bj_QUESTMESSAGE_WARNING245){
                                                            DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_WARNING203, " ")
                                                            DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_WARNING203, message610)
                                                            StartSound(bj_questWarningSound170)
                                                        } else {
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    } else {
    }
}


function FlashQuestDialogButton() returns void{ 
}


function FlashQuestDialogButtonBJ() returns void{ 
    FlashQuestDialogButton()
}


function GetLastCreatedDefeatConditionBJ() returns defeatcondition{ 
    return bj_lastCreatedDefeatCondition169
}


function DefeatConditionSetDescriptionBJ(defeatcondition whichCondition316, string description197) returns void{ 
    DefeatConditionSetDescription(whichCondition316, description197)
}


function DefeatConditionSetDescription(defeatcondition whichCondition728, string description301) returns void{ 
}


function DestroyDefeatConditionBJ(defeatcondition whichCondition932) returns void{ 
    DestroyDefeatCondition(whichCondition932)
}


function DestroyDefeatCondition(defeatcondition whichCondition273) returns void{ 
}


function CreateDefeatConditionBJ(string description496) returns defeatcondition{ 
    bj_lastCreatedDefeatCondition169 = CreateDefeatCondition()
    DefeatConditionSetDescription(bj_lastCreatedDefeatCondition169, description496)
    return bj_lastCreatedDefeatCondition169
}


function CreateDefeatCondition() returns defeatcondition{ 
}


function GetLastCreatedQuestItemBJ() returns questitem{ 
    return bj_lastCreatedQuestItem139
}


function QuestItemSetCompletedBJ(questitem whichQuestItem605, boolean completed146) returns void{ 
    QuestItemSetCompleted(whichQuestItem605, completed146)
}


function QuestItemSetCompleted(questitem whichQuestItem217, boolean completed279) returns void{ 
}


function QuestItemSetDescriptionBJ(questitem whichQuestItem155, string description208) returns void{ 
    QuestItemSetDescription(whichQuestItem155, description208)
}


function QuestItemSetDescription(questitem whichQuestItem166, string description113) returns void{ 
}


function CreateQuestItemBJ(quest whichQuest247, string description983) returns questitem{ 
    bj_lastCreatedQuestItem139 = QuestCreateItem(whichQuest247)
    QuestItemSetDescription(bj_lastCreatedQuestItem139, description983)
    QuestItemSetCompleted(bj_lastCreatedQuestItem139, false)
    return bj_lastCreatedQuestItem139
}


function QuestCreateItem(quest whichQuest203) returns questitem{ 
}


function GetLastCreatedQuestBJ() returns quest{ 
    return bj_lastCreatedQuest927
}


function QuestSetDiscoveredBJ(quest whichQuest102, boolean discovered206) returns void{ 
    QuestSetDiscovered(whichQuest102, discovered206)
}


function QuestSetDiscovered(quest whichQuest112, boolean discovered164) returns void{ 
}


function QuestSetFailedBJ(quest whichQuest119, boolean failed224) returns void{ 
    QuestSetFailed(whichQuest119, failed224)
}


function QuestSetFailed(quest whichQuest257, boolean failed225) returns void{ 
}


function QuestSetCompletedBJ(quest whichQuest524, boolean completed277) returns void{ 
    QuestSetCompleted(whichQuest524, completed277)
}


function QuestSetCompleted(quest whichQuest207, boolean completed103) returns void{ 
}


function QuestSetDescriptionBJ(quest whichQuest171, string description230) returns void{ 
    QuestSetDescription(whichQuest171, description230)
}


function QuestSetDescription(quest whichQuest218, string description154) returns void{ 
}


function QuestSetTitleBJ(quest whichQuest311, string title901) returns void{ 
    QuestSetTitle(whichQuest311, title901)
}


function QuestSetTitle(quest whichQuest311, string title210) returns void{ 
}


function QuestSetEnabledBJ(boolean enabled111, quest whichQuest279) returns void{ 
    QuestSetEnabled(whichQuest279, enabled111)
}


function QuestSetEnabled(quest whichQuest440, boolean enabled462) returns void{ 
}


function DestroyQuestBJ(quest whichQuest185) returns void{ 
    DestroyQuest(whichQuest185)
}


function DestroyQuest(quest whichQuest330) returns void{ 
}


function CreateQuestBJ(integer questType239, string title312, string description669, string iconPath903) returns quest{ 
    local boolean required133
    local boolean discovered273
    required133 = ((questType239 == bj_QUESTTYPE_REQ_DISCOVERED280) or (questType239 == bj_QUESTTYPE_REQ_UNDISCOVERED238))
    discovered273 = ((questType239 == bj_QUESTTYPE_REQ_DISCOVERED280) or (questType239 == bj_QUESTTYPE_OPT_DISCOVERED383))
    bj_lastCreatedQuest927 = CreateQuest()
    QuestSetTitle(bj_lastCreatedQuest927, title312)
    QuestSetDescription(bj_lastCreatedQuest927, description669)
    QuestSetIconPath(bj_lastCreatedQuest927, iconPath903)
    QuestSetRequired(bj_lastCreatedQuest927, required133)
    QuestSetDiscovered(bj_lastCreatedQuest927, discovered273)
    QuestSetCompleted(bj_lastCreatedQuest927, false)
    return bj_lastCreatedQuest927
}


function CreateQuest() returns quest{ 
}


function QuestSetIconPath(quest whichQuest163, string iconPath232) returns void{ 
}


function QuestSetRequired(quest whichQuest885, boolean required301) returns void{ 
}


function SetPlayerOnScoreScreenBJ(boolean flag246, player whichPlayer337) returns void{ 
    SetPlayerOnScoreScreen(whichPlayer337, flag246)
}


function SetPlayerOnScoreScreen(player whichPlayer117, boolean flag284) returns void{ 
}


function SetNextLevelBJ(string nextLevel189) returns void{ 
    if (nextLevel189 == ""){
        bj_changeLevelMapName959 = null
    } else {
        bj_changeLevelMapName959 = nextLevel189
    }
}


function CustomDefeatBJ(player whichPlayer121, string message210) returns void{ 
    if AllowVictoryDefeat(PLAYER_GAME_RESULT_DEFEAT231){
        RemovePlayer(whichPlayer121, PLAYER_GAME_RESULT_DEFEAT231)
        if (not bj_isSinglePlayer595){
            DisplayTimedTextFromPlayer(whichPlayer121, 0., 0., 60., GetLocalizedString("PLAYER_DEFEATED"))
        } else {
        }
        if (GetPlayerController(whichPlayer121) == MAP_CONTROL_USER160){
            CustomDefeatDialogBJ(whichPlayer121, message210)
        } else {
        }
    } else {
    }
}


function AllowVictoryDefeat(playergameresult gameResult138) returns boolean{ 
    if (gameResult138 == PLAYER_GAME_RESULT_VICTORY166){
        return (not IsNoVictoryCheat())
    } else {
    }
    if (gameResult138 == PLAYER_GAME_RESULT_DEFEAT231){
        return (not IsNoDefeatCheat())
    } else {
    }
    if (gameResult138 == PLAYER_GAME_RESULT_NEUTRAL324){
        return ((not IsNoVictoryCheat()) and (not IsNoDefeatCheat()))
    } else {
    }
    return true
}


function RemovePlayer(player whichPlayer160, playergameresult gameResult226) returns void{ 
}


function DisplayTimedTextFromPlayer(player toPlayer222, real x227, real y159, real duration307, string message663) returns void{ 
}


function CustomDefeatDialogBJ(player whichPlayer144, string message237) returns void{ 
    local trigger t329
    local dialog d258
    t329 = CreateTrigger()
    d258 = DialogCreate()
    DialogSetMessage(d258, message237)
    if bj_isSinglePlayer595{
        t329 = CreateTrigger()
        TriggerRegisterDialogButtonEvent(t329, DialogAddButton(d258, GetLocalizedString("GAMEOVER_RESTART"), GetLocalizedHotkey("GAMEOVER_RESTART")))
        TriggerAddAction(t329, function CustomDefeatRestartBJ)
        if (GetGameDifficulty() != MAP_DIFFICULTY_EASY285){
            t329 = CreateTrigger()
            TriggerRegisterDialogButtonEvent(t329, DialogAddButton(d258, GetLocalizedString("GAMEOVER_REDUCE_DIFFICULTY"), GetLocalizedHotkey("GAMEOVER_REDUCE_DIFFICULTY")))
            TriggerAddAction(t329, function CustomDefeatReduceDifficultyBJ)
        } else {
        }
        t329 = CreateTrigger()
        TriggerRegisterDialogButtonEvent(t329, DialogAddButton(d258, GetLocalizedString("GAMEOVER_LOAD"), GetLocalizedHotkey("GAMEOVER_LOAD")))
        TriggerAddAction(t329, function CustomDefeatLoadBJ)
    } else {
    }
    t329 = CreateTrigger()
    TriggerRegisterDialogButtonEvent(t329, DialogAddButton(d258, GetLocalizedString("GAMEOVER_QUIT_MISSION"), GetLocalizedHotkey("GAMEOVER_QUIT_MISSION")))
    TriggerAddAction(t329, function CustomDefeatQuitBJ)
    if (GetLocalPlayer() == whichPlayer144){
        EnableUserControl(true)
        if bj_isSinglePlayer595{
            PauseGame(true)
        } else {
        }
        EnableUserUI(false)
    } else {
    }
    DialogDisplay(whichPlayer144, d258, true)
    VolumeGroupSetVolumeForPlayerBJ(whichPlayer144, SOUND_VOLUMEGROUP_UI152, 1.0)
    StartSoundForPlayerBJ(whichPlayer144, bj_defeatDialogSound309)
}


function DialogCreate() returns dialog{ 
}


function DialogSetMessage(dialog whichDialog124, string messageText287) returns void{ 
}


function GetLocalizedHotkey(string source297) returns integer{ 
}


function DialogAddButton(dialog whichDialog169, string buttonText260, integer hotkey328) returns button{ 
}


function TriggerRegisterDialogButtonEvent(trigger whichTrigger313, button whichButton208) returns event{ 
}


function CustomDefeatRestartBJ() returns void{ 
    PauseGame(false)
    RestartGame(true)
}


function GetGameDifficulty() returns gamedifficulty{ 
}


function CustomDefeatReduceDifficultyBJ() returns void{ 
    local gamedifficulty diff120
    diff120 = GetGameDifficulty()
    PauseGame(false)
    if (diff120 == MAP_DIFFICULTY_EASY285){
    } else {
        if (diff120 == MAP_DIFFICULTY_NORMAL234){
            SetGameDifficulty(MAP_DIFFICULTY_EASY285)
        } else {
            if (diff120 == MAP_DIFFICULTY_HARD193){
                SetGameDifficulty(MAP_DIFFICULTY_NORMAL234)
            } else {
            }
        }
    }
    RestartGame(true)
}


function CustomDefeatLoadBJ() returns void{ 
    PauseGame(false)
    DisplayLoadDialog()
}


function CustomDefeatQuitBJ() returns void{ 
    if bj_isSinglePlayer595{
        PauseGame(false)
    } else {
    }
    SetGameDifficulty(GetDefaultDifficulty())
    EndGame(true)
}


function DialogDisplay(player whichPlayer132, dialog whichDialog324, boolean flag223) returns void{ 
}


function VolumeGroupSetVolumeForPlayerBJ(player whichPlayer232, volumegroup vgroup168, real scale303) returns void{ 
    if (GetLocalPlayer() == whichPlayer232){
        VolumeGroupSetVolume(vgroup168, scale303)
    } else {
    }
}


function StartSoundForPlayerBJ(player whichPlayer275, sound soundHandle732) returns void{ 
    if (whichPlayer275 == GetLocalPlayer()){
        StartSound(soundHandle732)
    } else {
    }
}


function GetDefaultDifficulty() returns gamedifficulty{ 
}


function SetGameDifficulty(gamedifficulty whichdifficulty266) returns void{ 
}


function EndGame(boolean doScoreScreen229) returns void{ 
}


function DisplayLoadDialog() returns void{ 
}


function RestartGame(boolean doScoreScreen184) returns void{ 
}


function CustomVictoryBJ(player whichPlayer306, boolean showDialog324, boolean showScores326) returns void{ 
    if AllowVictoryDefeat(PLAYER_GAME_RESULT_VICTORY166){
        RemovePlayer(whichPlayer306, PLAYER_GAME_RESULT_VICTORY166)
        if (not bj_isSinglePlayer595){
            DisplayTimedTextFromPlayer(whichPlayer306, 0., 0., 60., GetLocalizedString("PLAYER_VICTORIOUS"))
        } else {
        }
        if (GetPlayerController(whichPlayer306) == MAP_CONTROL_USER160){
            bj_changeLevelShowScores219 = showScores326
            if showDialog324{
                CustomVictoryDialogBJ(whichPlayer306)
            } else {
                CustomVictorySkipBJ(whichPlayer306)
            }
        } else {
        }
    } else {
    }
}


function CustomVictoryDialogBJ(player whichPlayer807) returns void{ 
    local trigger t542
    local dialog d261
    t542 = CreateTrigger()
    d261 = DialogCreate()
    DialogSetMessage(d261, GetLocalizedString("GAMEOVER_VICTORY_MSG"))
    t542 = CreateTrigger()
    TriggerRegisterDialogButtonEvent(t542, DialogAddButton(d261, GetLocalizedString("GAMEOVER_CONTINUE"), GetLocalizedHotkey("GAMEOVER_CONTINUE")))
    TriggerAddAction(t542, function CustomVictoryOkBJ)
    t542 = CreateTrigger()
    TriggerRegisterDialogButtonEvent(t542, DialogAddButton(d261, GetLocalizedString("GAMEOVER_QUIT_MISSION"), GetLocalizedHotkey("GAMEOVER_QUIT_MISSION")))
    TriggerAddAction(t542, function CustomVictoryQuitBJ)
    if (GetLocalPlayer() == whichPlayer807){
        EnableUserControl(true)
        if bj_isSinglePlayer595{
            PauseGame(true)
        } else {
        }
        EnableUserUI(false)
    } else {
    }
    DialogDisplay(whichPlayer807, d261, true)
    VolumeGroupSetVolumeForPlayerBJ(whichPlayer807, SOUND_VOLUMEGROUP_UI152, 1.0)
    StartSoundForPlayerBJ(whichPlayer807, bj_victoryDialogSound213)
}


function CustomVictorySkipBJ(player whichPlayer179) returns void{ 
    if (GetLocalPlayer() == whichPlayer179){
        if bj_isSinglePlayer595{
            SetGameDifficulty(GetDefaultDifficulty())
        } else {
        }
        if (bj_changeLevelMapName959 == null){
            EndGame(bj_changeLevelShowScores219)
        } else {
            ChangeLevel(bj_changeLevelMapName959, bj_changeLevelShowScores219)
        }
    } else {
    }
}


function CustomVictoryOkBJ() returns void{ 
    if bj_isSinglePlayer595{
        PauseGame(false)
        SetGameDifficulty(GetDefaultDifficulty())
    } else {
    }
    if (bj_changeLevelMapName959 == null){
        EndGame(bj_changeLevelShowScores219)
    } else {
        ChangeLevel(bj_changeLevelMapName959, bj_changeLevelShowScores219)
    }
}


function CustomVictoryQuitBJ() returns void{ 
    if bj_isSinglePlayer595{
        PauseGame(false)
        SetGameDifficulty(GetDefaultDifficulty())
    } else {
    }
    EndGame(bj_changeLevelShowScores219)
}


function MeleeVictoryDialogBJ(player whichPlayer327, boolean leftGame272) returns void{ 
    local trigger t103
    local dialog d608
    local string formatString251
    t103 = CreateTrigger()
    d608 = DialogCreate()
    null
    if leftGame272{
        formatString251 = GetLocalizedString("PLAYER_LEFT_GAME")
    } else {
        formatString251 = GetLocalizedString("PLAYER_VICTORIOUS")
    }
    DisplayTimedTextFromPlayer(whichPlayer327, 0., 0., 60., formatString251)
    DialogSetMessage(d608, GetLocalizedString("GAMEOVER_VICTORY_MSG"))
    DialogAddButton(d608, GetLocalizedString("GAMEOVER_CONTINUE_GAME"), GetLocalizedHotkey("GAMEOVER_CONTINUE_GAME"))
    t103 = CreateTrigger()
    TriggerRegisterDialogButtonEvent(t103, DialogAddQuitButton(d608, true, GetLocalizedString("GAMEOVER_QUIT_GAME"), GetLocalizedHotkey("GAMEOVER_QUIT_GAME")))
    DialogDisplay(whichPlayer327, d608, true)
    StartSoundForPlayerBJ(whichPlayer327, bj_victoryDialogSound213)
}


function MeleeDefeatDialogBJ(player whichPlayer184, boolean leftGame281) returns void{ 
    local trigger t268
    local dialog d112
    local string formatString159
    t268 = CreateTrigger()
    d112 = DialogCreate()
    null
    if leftGame281{
        formatString159 = GetLocalizedString("PLAYER_LEFT_GAME")
    } else {
        formatString159 = GetLocalizedString("PLAYER_DEFEATED")
    }
    DisplayTimedTextFromPlayer(whichPlayer184, 0., 0., 60., formatString159)
    DialogSetMessage(d112, GetLocalizedString("GAMEOVER_DEFEAT_MSG"))
    if ((not bj_meleeGameOver228) and IsMapFlagSet(MAP_OBSERVERS_ON_DEATH506)){
        DialogAddButton(d112, GetLocalizedString("GAMEOVER_CONTINUE_OBSERVING"), GetLocalizedHotkey("GAMEOVER_CONTINUE_OBSERVING"))
    } else {
    }
    t268 = CreateTrigger()
    TriggerRegisterDialogButtonEvent(t268, DialogAddQuitButton(d112, true, GetLocalizedString("GAMEOVER_QUIT_GAME"), GetLocalizedHotkey("GAMEOVER_QUIT_GAME")))
    DialogDisplay(whichPlayer184, d112, true)
    StartSoundForPlayerBJ(whichPlayer184, bj_defeatDialogSound309)
}


function DialogAddQuitButton(dialog whichDialog327, boolean doScoreScreen290, string buttonText180, integer hotkey695) returns button{ 
}


function EndGameBJ() returns void{ 
    EndGame(true)
}


function IsNoVictoryCheat() returns boolean{ 
}


function IsNoDefeatCheat() returns boolean{ 
}


function MakeUnitsPassiveForPlayer(player whichPlayer163) returns void{ 
    local group playerUnits124
    playerUnits124 = CreateGroup()
    CachePlayerHeroData(whichPlayer163)
    GroupEnumUnitsOfPlayer(playerUnits124, whichPlayer163, null)
    ForGroup(playerUnits124, function MakeUnitsPassiveForPlayerEnum)
    DestroyGroup(playerUnits124)
}


function MakeUnitsPassiveForPlayerEnum() returns void{ 
    SetUnitOwner(GetEnumUnit(), Player(bj_PLAYER_NEUTRAL_VICTIM126), false)
}


function SetPlayerAlliance(player sourcePlayer258, player otherPlayer155, alliancetype whichAllianceSetting102, boolean value249) returns void{ 
}


function SetForceAllianceStateBJ(force sourceForce212, force targetForce272, integer allianceState355) returns void{ 
    local integer sourceIndex105
    local integer targetIndex134
    null
    null
    sourceIndex105 = 0
    loop {
        if ((sourceForce212 == bj_FORCE_ALL_PLAYERS221) or IsPlayerInForce(Player(sourceIndex105), sourceForce212)){
            targetIndex134 = 0
            loop {
                if ((targetForce272 == bj_FORCE_ALL_PLAYERS221) or IsPlayerInForce(Player(targetIndex134), targetForce272)){
                    SetPlayerAllianceStateBJ(Player(sourceIndex105), Player(targetIndex134), allianceState355)
                } else {
                }
                targetIndex134 = (targetIndex134 + 1)
                exitwhen (targetIndex134 == bj_MAX_PLAYER_SLOTS129)
            }
        } else {
        }
        sourceIndex105 = (sourceIndex105 + 1)
        exitwhen (sourceIndex105 == bj_MAX_PLAYER_SLOTS129)
    }
}


function SetPlayerAllianceStateBJ(player sourcePlayer171, player otherPlayer247, integer allianceState217) returns void{ 
    if (sourcePlayer171 == otherPlayer247){
        return %nothing%
    } else {
    }
    if (allianceState217 == bj_ALLIANCE_UNALLIED909){
        SetPlayerAllianceStateAllyBJ(sourcePlayer171, otherPlayer247, false)
        SetPlayerAllianceStateVisionBJ(sourcePlayer171, otherPlayer247, false)
        SetPlayerAllianceStateControlBJ(sourcePlayer171, otherPlayer247, false)
        SetPlayerAllianceStateFullControlBJ(sourcePlayer171, otherPlayer247, false)
    } else {
        if (allianceState217 == bj_ALLIANCE_UNALLIED_VISION192){
            SetPlayerAllianceStateAllyBJ(sourcePlayer171, otherPlayer247, false)
            SetPlayerAllianceStateVisionBJ(sourcePlayer171, otherPlayer247, true)
            SetPlayerAllianceStateControlBJ(sourcePlayer171, otherPlayer247, false)
            SetPlayerAllianceStateFullControlBJ(sourcePlayer171, otherPlayer247, false)
        } else {
            if (allianceState217 == bj_ALLIANCE_ALLIED430){
                SetPlayerAllianceStateAllyBJ(sourcePlayer171, otherPlayer247, true)
                SetPlayerAllianceStateVisionBJ(sourcePlayer171, otherPlayer247, false)
                SetPlayerAllianceStateControlBJ(sourcePlayer171, otherPlayer247, false)
                SetPlayerAllianceStateFullControlBJ(sourcePlayer171, otherPlayer247, false)
            } else {
                if (allianceState217 == bj_ALLIANCE_ALLIED_VISION160){
                    SetPlayerAllianceStateAllyBJ(sourcePlayer171, otherPlayer247, true)
                    SetPlayerAllianceStateVisionBJ(sourcePlayer171, otherPlayer247, true)
                    SetPlayerAllianceStateControlBJ(sourcePlayer171, otherPlayer247, false)
                    SetPlayerAllianceStateFullControlBJ(sourcePlayer171, otherPlayer247, false)
                } else {
                    if (allianceState217 == bj_ALLIANCE_ALLIED_UNITS185){
                        SetPlayerAllianceStateAllyBJ(sourcePlayer171, otherPlayer247, true)
                        SetPlayerAllianceStateVisionBJ(sourcePlayer171, otherPlayer247, true)
                        SetPlayerAllianceStateControlBJ(sourcePlayer171, otherPlayer247, true)
                        SetPlayerAllianceStateFullControlBJ(sourcePlayer171, otherPlayer247, false)
                    } else {
                        if (allianceState217 == bj_ALLIANCE_ALLIED_ADVUNITS196){
                            SetPlayerAllianceStateAllyBJ(sourcePlayer171, otherPlayer247, true)
                            SetPlayerAllianceStateVisionBJ(sourcePlayer171, otherPlayer247, true)
                            SetPlayerAllianceStateControlBJ(sourcePlayer171, otherPlayer247, true)
                            SetPlayerAllianceStateFullControlBJ(sourcePlayer171, otherPlayer247, true)
                        } else {
                            if (allianceState217 == bj_ALLIANCE_NEUTRAL861){
                                SetPlayerAllianceStateAllyBJ(sourcePlayer171, otherPlayer247, false)
                                SetPlayerAllianceStateVisionBJ(sourcePlayer171, otherPlayer247, false)
                                SetPlayerAllianceStateControlBJ(sourcePlayer171, otherPlayer247, false)
                                SetPlayerAllianceStateFullControlBJ(sourcePlayer171, otherPlayer247, false)
                                SetPlayerAlliance(sourcePlayer171, otherPlayer247, ALLIANCE_PASSIVE213, true)
                            } else {
                                if (allianceState217 == bj_ALLIANCE_NEUTRAL_VISION470){
                                    SetPlayerAllianceStateAllyBJ(sourcePlayer171, otherPlayer247, false)
                                    SetPlayerAllianceStateVisionBJ(sourcePlayer171, otherPlayer247, true)
                                    SetPlayerAllianceStateControlBJ(sourcePlayer171, otherPlayer247, false)
                                    SetPlayerAllianceStateFullControlBJ(sourcePlayer171, otherPlayer247, false)
                                    SetPlayerAlliance(sourcePlayer171, otherPlayer247, ALLIANCE_PASSIVE213, true)
                                } else {
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}


function SetPlayerAllianceStateAllyBJ(player sourcePlayer161, player otherPlayer216, boolean flag139) returns void{ 
    SetPlayerAlliance(sourcePlayer161, otherPlayer216, ALLIANCE_PASSIVE213, flag139)
    SetPlayerAlliance(sourcePlayer161, otherPlayer216, ALLIANCE_HELP_REQUEST332, flag139)
    SetPlayerAlliance(sourcePlayer161, otherPlayer216, ALLIANCE_HELP_RESPONSE216, flag139)
    SetPlayerAlliance(sourcePlayer161, otherPlayer216, ALLIANCE_SHARED_XP325, flag139)
    SetPlayerAlliance(sourcePlayer161, otherPlayer216, ALLIANCE_SHARED_SPELLS284, flag139)
}


function SetPlayerAllianceStateVisionBJ(player sourcePlayer109, player otherPlayer477, boolean flag321) returns void{ 
    SetPlayerAlliance(sourcePlayer109, otherPlayer477, ALLIANCE_SHARED_VISION130, flag321)
}


function SetPlayerAllianceStateControlBJ(player sourcePlayer836, player otherPlayer902, boolean flag470) returns void{ 
    SetPlayerAlliance(sourcePlayer836, otherPlayer902, ALLIANCE_SHARED_CONTROL326, flag470)
}


function SetPlayerAllianceStateFullControlBJ(player sourcePlayer101, player otherPlayer923, boolean flag273) returns void{ 
    SetPlayerAlliance(sourcePlayer101, otherPlayer923, ALLIANCE_SHARED_ADVANCED_CONTROL194, flag273)
}


function SetPlayerAllianceBJ(player sourcePlayer117, alliancetype whichAllianceSetting320, boolean value133, player otherPlayer178) returns void{ 
    if (sourcePlayer117 == otherPlayer178){
        return %nothing%
    } else {
    }
    SetPlayerAlliance(sourcePlayer117, otherPlayer178, whichAllianceSetting320, value133)
}


function GetClickedDialogBJ() returns dialog{ 
    return GetClickedDialog()
}


function GetClickedDialog() returns dialog{ 
}


function GetClickedButtonBJ() returns button{ 
    return GetClickedButton()
}


function GetClickedButton() returns button{ 
}


function GetLastCreatedButtonBJ() returns button{ 
    return bj_lastCreatedButton271
}


function DialogClearBJ(dialog whichDialog210) returns void{ 
    DialogClear(whichDialog210)
}


function DialogClear(dialog whichDialog295) returns void{ 
}


function DialogAddButtonWithHotkeyBJ(dialog whichDialog443, string buttonText262, integer hotkey203) returns button{ 
    bj_lastCreatedButton271 = DialogAddButton(whichDialog443, buttonText262, hotkey203)
    return bj_lastCreatedButton271
}


function DialogAddButtonBJ(dialog whichDialog163, string buttonText148) returns button{ 
    bj_lastCreatedButton271 = DialogAddButton(whichDialog163, buttonText148, 0)
    return bj_lastCreatedButton271
}


function DialogSetMessageBJ(dialog whichDialog165, string message287) returns void{ 
    DialogSetMessage(whichDialog165, message287)
}


function DialogDisplayBJ(boolean flag209, dialog whichDialog869, player whichPlayer158) returns void{ 
    DialogDisplay(whichPlayer158, whichDialog869, flag209)
}


function SetDestAnimationSpeedPercent(destructable d261, real percentScale184) returns void{ 
    SetDestructableAnimationSpeed(d261, (percentScale184 * 0.01))
}


function SetDestructableAnimationSpeed(destructable d264, real speedFactor684) returns void{ 
}


function QueueDestructableAnimationBJ(destructable d139, string whichAnimation193) returns void{ 
    QueueDestructableAnimation(d139, whichAnimation193)
}


function QueueDestructableAnimation(destructable d233, string whichAnimation200) returns void{ 
}


function SetDestructableAnimationBJ(destructable d296, string whichAnimation215) returns void{ 
    SetDestructableAnimation(d296, whichAnimation215)
}


function SetDestructableAnimation(destructable d201, string whichAnimation181) returns void{ 
}


function QueueUnitAnimationBJ(unit whichUnit127, string whichAnimation994) returns void{ 
    QueueUnitAnimation(whichUnit127, whichAnimation994)
}


function QueueUnitAnimation(unit whichUnit239, string whichAnimation202) returns void{ 
}


function SetUnitFacingToFaceUnitTimed(unit whichUnit977, unit target239, real duration175) returns void{ 
    local location unitLoc278
    unitLoc278 = GetUnitLoc(target239)
    SetUnitFacingToFaceLocTimed(whichUnit977, unitLoc278, duration175)
    RemoveLocation(unitLoc278)
}


function SetUnitFacingToFaceLocTimed(unit whichUnit291, location target225, real duration188) returns void{ 
    local location unitLoc136
    unitLoc136 = GetUnitLoc(whichUnit291)
    SetUnitFacingTimed(whichUnit291, AngleBetweenPoints(unitLoc136, target225), duration188)
    RemoveLocation(unitLoc136)
}


function SetUnitFacingTimed(unit whichUnit160, real facingAngle693, real duration320) returns void{ 
}


function ItemAddIndicatorBJ(item whichItem310, real red259, real green563, real blue317, real transparency449) returns void{ 
    AddIndicator(whichItem310, PercentTo255(red259), PercentTo255(green563), PercentTo255(blue317), PercentTo255((100.0 - transparency449)))
}


function AddIndicator(widget whichWidget126, integer red496, integer green144, integer blue514, integer alpha241) returns void{ 
}


function DestructableAddIndicatorBJ(destructable whichDestructable187, real red465, real green383, real blue192, real transparency717) returns void{ 
    AddIndicator(whichDestructable187, PercentTo255(red465), PercentTo255(green383), PercentTo255(blue192), PercentTo255((100.0 - transparency717)))
}


function UnitAddIndicatorBJ(unit whichUnit269, real red118, real green263, real blue418, real transparency238) returns void{ 
    AddIndicator(whichUnit269, PercentTo255(red118), PercentTo255(green263), PercentTo255(blue418), PercentTo255((100.0 - transparency238)))
}


function SetUnitVertexColorBJ(unit whichUnit835, real red219, real green229, real blue318, real transparency143) returns void{ 
    SetUnitVertexColor(whichUnit835, PercentTo255(red219), PercentTo255(green229), PercentTo255(blue318), PercentTo255((100.0 - transparency143)))
}


function SetUnitVertexColor(unit whichUnit331, integer red245, integer green233, integer blue172, integer alpha215) returns void{ 
}


function SetUnitScalePercent(unit whichUnit213, real percentScaleX181, real percentScaleY229, real percentScaleZ158) returns void{ 
    SetUnitScale(whichUnit213, (percentScaleX181 * 0.01), (percentScaleY229 * 0.01), (percentScaleZ158 * 0.01))
}


function SetUnitScale(unit whichUnit872, real scaleX154, real scaleY216, real scaleZ208) returns void{ 
}


function SetUnitTimeScalePercent(unit whichUnit123, real percentScale296) returns void{ 
    SetUnitTimeScale(whichUnit123, (percentScale296 * 0.01))
}


function SetUnitTimeScale(unit whichUnit242, real timeScale198) returns void{ 
}


function ResetUnitAnimation(unit whichUnit316) returns void{ 
    SetUnitAnimation(whichUnit316, "stand")
}


function SetUnitAnimation(unit whichUnit815, string whichAnimation140) returns void{ 
}


function CountLivingPlayerUnitsOfTypeId(integer unitId172, player whichPlayer680) returns integer{ 
    local group g301
    local integer matchedCount120
    null
    null
    g301 = CreateGroup()
    bj_livingPlayerUnitsTypeId202 = unitId172
    GroupEnumUnitsOfPlayer(g301, whichPlayer680, filterLivingPlayerUnitsOfTypeId329)
    matchedCount120 = CountUnitsInGroup(g301)
    DestroyGroup(g301)
    return matchedCount120
}


function CountUnitsInGroup(group g318) returns integer{ 
    local boolean wantDestroy139
    wantDestroy139 = bj_wantDestroyGroup197
    bj_wantDestroyGroup197 = false
    bj_groupCountUnits248 = 0
    ForGroup(g318, function CountUnitsInGroupEnum)
    if wantDestroy139{
        DestroyGroup(g318)
    } else {
    }
    return bj_groupCountUnits248
}


function IsUnitAliveBJ(unit whichUnit156) returns boolean{ 
    return (not IsUnitDeadBJ(whichUnit156))
}


function GetRandomSubGroup(integer count327, group sourceGroup121) returns group{ 
    local group g197
    g197 = CreateGroup()
    bj_randomSubGroupGroup971 = g197
    bj_randomSubGroupWant365 = count327
    bj_randomSubGroupTotal663 = CountUnitsInGroup(sourceGroup121)
    if ((bj_randomSubGroupWant365 <= 0) or (bj_randomSubGroupTotal663 <= 0)){
        return g197
    } else {
    }
    bj_randomSubGroupChance188 = (I2R(bj_randomSubGroupWant365) / I2R(bj_randomSubGroupTotal663))
    ForGroup(sourceGroup121, function GetRandomSubGroupEnum)
    return g197
}


function I2R(integer i315) returns real{ 
}


function GetRandomSubGroupEnum() returns void{ 
    if (bj_randomSubGroupWant365 > 0){
        if ((bj_randomSubGroupWant365 >= bj_randomSubGroupTotal663) or (GetRandomReal(0., 1.) < bj_randomSubGroupChance188)){
            GroupAddUnit(bj_randomSubGroupGroup971, GetEnumUnit())
            bj_randomSubGroupWant365 = (bj_randomSubGroupWant365 - 1)
        } else {
        }
    } else {
    }
    bj_randomSubGroupTotal663 = (bj_randomSubGroupTotal663 - 1)
}


function GroupAddUnit(group whichGroup269, unit whichUnit222) returns void{ 
}


function CountPlayersInForceBJ(force f102) returns integer{ 
    bj_forceCountPlayers462 = 0
    ForForce(f102, function CountPlayersInForceEnum)
    return bj_forceCountPlayers462
}


function CountPlayersInForceEnum() returns void{ 
    bj_forceCountPlayers462 = (bj_forceCountPlayers462 + 1)
}


function CountUnitsInGroupEnum() returns void{ 
    bj_groupCountUnits248 = (bj_groupCountUnits248 + 1)
}


function GetPlayersMatching(boolexpr filter247) returns force{ 
    local force f159
    f159 = CreateForce()
    ForceEnumPlayers(f159, filter247)
    DestroyBoolExpr(filter247)
    return f159
}


function DestroyBoolExpr(boolexpr e183) returns void{ 
}


function GetPlayersEnemies(player whichPlayer905) returns force{ 
    local force f307
    f307 = CreateForce()
    ForceEnumEnemies(f307, whichPlayer905, null)
    return f307
}


function ForceEnumEnemies(force whichForce271, player whichPlayer399, boolexpr filter330) returns void{ 
}


function GetPlayersAllies(player whichPlayer317) returns force{ 
    local force f648
    f648 = CreateForce()
    ForceEnumAllies(f648, whichPlayer317, null)
    return f648
}


function ForceEnumAllies(force whichForce134, player whichPlayer649, boolexpr filter350) returns void{ 
}


function GetPlayersByMapControl(mapcontrol whichControl317) returns force{ 
    local force f141
    local integer playerIndex148
    local player indexPlayer132
    f141 = CreateForce()
    null
    null
    playerIndex148 = 0
    loop {
        indexPlayer132 = Player(playerIndex148)
        if (GetPlayerController(indexPlayer132) == whichControl317){
            ForceAddPlayer(f141, indexPlayer132)
        } else {
        }
        playerIndex148 = (playerIndex148 + 1)
        exitwhen (playerIndex148 == bj_MAX_PLAYER_SLOTS129)
    }
    return f141
}


function GetPlayersAll() returns force{ 
    return bj_FORCE_ALL_PLAYERS221
}


function GetForceOfPlayer(player whichPlayer274) returns force{ 
    local force f665
    f665 = CreateForce()
    ForceAddPlayer(f665, whichPlayer274)
    return f665
}


function GetUnitsSelectedAll(player whichPlayer996) returns group{ 
    local group g164
    g164 = CreateGroup()
    SyncSelections()
    GroupEnumUnitsSelected(g164, whichPlayer996, null)
    return g164
}


function SyncSelections() returns void{ 
}


function GroupEnumUnitsSelected(group whichGroup355, player whichPlayer896, boolexpr filter201) returns void{ 
}


function GetUnitsOfPlayerAndTypeId(player whichPlayer243, integer unitid424) returns group{ 
    local group g229
    g229 = CreateGroup()
    bj_groupEnumTypeId245 = unitid424
    GroupEnumUnitsOfPlayer(g229, whichPlayer243, filterGetUnitsOfPlayerAndTypeId188)
    return g229
}


function GetUnitsOfPlayerAll(player whichPlayer190) returns group{ 
    return GetUnitsOfPlayerMatching(whichPlayer190, null)
}


function GetUnitsOfPlayerMatching(player whichPlayer117, boolexpr filter229) returns group{ 
    local group g449
    g449 = CreateGroup()
    GroupEnumUnitsOfPlayer(g449, whichPlayer117, filter229)
    DestroyBoolExpr(filter229)
    return g449
}


function GetUnitsOfTypeIdAll(integer unitid250) returns group{ 
    local group result769
    local group g126
    local integer index133
    result769 = CreateGroup()
    g126 = CreateGroup()
    null
    index133 = 0
    loop {
        bj_groupEnumTypeId245 = unitid250
        GroupClear(g126)
        GroupEnumUnitsOfPlayer(g126, Player(index133), filterGetUnitsOfTypeIdAll302)
        GroupAddGroup(g126, result769)
        index133 = (index133 + 1)
        exitwhen (index133 == bj_MAX_PLAYER_SLOTS129)
    }
    DestroyGroup(g126)
    return result769
}


function GroupClear(group whichGroup282) returns void{ 
}


function GroupAddGroup(group sourceGroup379, group destGroup886) returns void{ 
    local boolean wantDestroy213
    wantDestroy213 = bj_wantDestroyGroup197
    bj_wantDestroyGroup197 = false
    bj_groupAddGroupDest374 = destGroup886
    ForGroup(sourceGroup379, function GroupAddGroupEnum)
    if wantDestroy213{
        DestroyGroup(sourceGroup379)
    } else {
    }
}


function GetUnitsInRangeOfLocAll(real radius943, location whichLocation237) returns group{ 
    return GetUnitsInRangeOfLocMatching(radius943, whichLocation237, null)
}


function GetUnitsInRangeOfLocMatching(real radius212, location whichLocation306, boolexpr filter120) returns group{ 
    local group g167
    g167 = CreateGroup()
    GroupEnumUnitsInRangeOfLoc(g167, whichLocation306, radius212, filter120)
    DestroyBoolExpr(filter120)
    return g167
}


function GetUnitsInRectOfPlayer(rect r193, player whichPlayer120) returns group{ 
    local group g184
    g184 = CreateGroup()
    bj_groupEnumOwningPlayer117 = whichPlayer120
    GroupEnumUnitsInRect(g184, r193, filterGetUnitsInRectOfPlayer331)
    return g184
}


function GroupEnumUnitsInRect(group whichGroup305, rect r205, boolexpr filter152) returns void{ 
}


function GetUnitsInRectAll(rect r121) returns group{ 
    return GetUnitsInRectMatching(r121, null)
}


function GetUnitsInRectMatching(rect r319, boolexpr filter209) returns group{ 
    local group g339
    g339 = CreateGroup()
    GroupEnumUnitsInRect(g339, r319, filter209)
    DestroyBoolExpr(filter209)
    return g339
}


function EnumUnitsSelected(player whichPlayer197, boolexpr enumFilter366, code enumAction174) returns void{ 
    local group g127
    g127 = CreateGroup()
    SyncSelections()
    GroupEnumUnitsSelected(g127, whichPlayer197, enumFilter366)
    DestroyBoolExpr(enumFilter366)
    ForGroup(g127, enumAction174)
    DestroyGroup(g127)
}


function ForcePickRandomPlayer(force whichForce209) returns player{ 
    bj_forceRandomConsidered315 = 0
    bj_forceRandomCurrentPick295 = null
    ForForce(whichForce209, function ForcePickRandomPlayerEnum)
    return bj_forceRandomCurrentPick295
}


function ForcePickRandomPlayerEnum() returns void{ 
    bj_forceRandomConsidered315 = (bj_forceRandomConsidered315 + 1)
    if (GetRandomInt(1, bj_forceRandomConsidered315) == 1){
        bj_forceRandomCurrentPick295 = GetEnumPlayer()
    } else {
    }
}


function GroupPickRandomUnit(group whichGroup252) returns unit{ 
    local boolean wantDestroy112
    wantDestroy112 = bj_wantDestroyGroup197
    bj_wantDestroyGroup197 = false
    bj_groupRandomConsidered346 = 0
    bj_groupRandomCurrentPick134 = null
    ForGroup(whichGroup252, function GroupPickRandomUnitEnum)
    if wantDestroy112{
        DestroyGroup(whichGroup252)
    } else {
    }
    return bj_groupRandomCurrentPick134
}


function GroupPickRandomUnitEnum() returns void{ 
    bj_groupRandomConsidered346 = (bj_groupRandomConsidered346 + 1)
    if (GetRandomInt(1, bj_groupRandomConsidered346) == 1){
        bj_groupRandomCurrentPick134 = GetEnumUnit()
    } else {
    }
}


function ForceRemovePlayerSimple(player whichPlayer691, force whichForce381) returns void{ 
    ForceRemovePlayer(whichForce381, whichPlayer691)
}


function ForceRemovePlayer(force whichForce651, player whichPlayer107) returns void{ 
}


function ForceAddPlayerSimple(player whichPlayer189, force whichForce279) returns void{ 
    ForceAddPlayer(whichForce279, whichPlayer189)
}


function GroupRemoveGroup(group sourceGroup988, group destGroup217) returns void{ 
    local boolean wantDestroy197
    wantDestroy197 = bj_wantDestroyGroup197
    bj_wantDestroyGroup197 = false
    bj_groupRemoveGroupDest276 = destGroup217
    ForGroup(sourceGroup988, function GroupRemoveGroupEnum)
    if wantDestroy197{
        DestroyGroup(sourceGroup988)
    } else {
    }
}


function GroupRemoveGroupEnum() returns void{ 
    GroupRemoveUnit(bj_groupRemoveGroupDest276, GetEnumUnit())
}


function GroupRemoveUnit(group whichGroup264, unit whichUnit870) returns void{ 
}


function GroupAddGroupEnum() returns void{ 
    GroupAddUnit(bj_groupAddGroupDest374, GetEnumUnit())
}


function GroupRemoveUnitSimple(unit whichUnit101, group whichGroup295) returns void{ 
    GroupRemoveUnit(whichGroup295, whichUnit101)
}


function GroupAddUnitSimple(unit whichUnit768, group whichGroup164) returns void{ 
    GroupAddUnit(whichGroup164, whichUnit768)
}


function ForGroupBJ(group whichGroup274, code callback329) returns void{ 
    local boolean wantDestroy144
    wantDestroy144 = bj_wantDestroyGroup197
    bj_wantDestroyGroup197 = false
    ForGroup(whichGroup274, callback329)
    if wantDestroy144{
        DestroyGroup(whichGroup274)
    } else {
    }
}


function ForceUICancelBJ(player whichPlayer356) returns void{ 
    if (GetLocalPlayer() == whichPlayer356){
        ForceUICancel()
    } else {
    }
}


function ForceUICancel() returns void{ 
}


function ForceUIKeyBJ(player whichPlayer393, string key149) returns void{ 
    if (GetLocalPlayer() == whichPlayer393){
        ForceUIKey(key149)
    } else {
    }
}


function ForceUIKey(string key184) returns void{ 
}


function UnitSetUsesAltIconBJ(boolean flag101, unit whichUnit270) returns void{ 
    UnitSetUsesAltIcon(whichUnit270, flag101)
}


function UnitSetUsesAltIcon(unit whichUnit844, boolean flag981) returns void{ 
}


function WaygateGetDestinationLocBJ(unit waygate213) returns location{ 
    return Location(WaygateGetDestinationX(waygate213), WaygateGetDestinationY(waygate213))
}


function WaygateGetDestinationX(unit waygate117) returns real{ 
}


function WaygateGetDestinationY(unit waygate170) returns real{ 
}


function WaygateSetDestinationLocBJ(unit waygate192, location loc386) returns void{ 
    WaygateSetDestination(waygate192, GetLocationX(loc386), GetLocationY(loc386))
}


function WaygateSetDestination(unit waygate104, real x623, real y156) returns void{ 
}


function WaygateIsActiveBJ(unit waygate238) returns boolean{ 
    return WaygateIsActive(waygate238)
}


function WaygateIsActive(unit waygate193) returns boolean{ 
}


function WaygateActivateBJ(boolean activate475, unit waygate136) returns void{ 
    WaygateActivate(waygate136, activate475)
}


function WaygateActivate(unit waygate168, boolean activate257) returns void{ 
}


function ChangeElevatorWalls(boolean open794, integer walls209, destructable d305) returns void{ 
    local real x156
    local real y162
    local real distToBlocker153
    local real distToNeighbor488
    x156 = GetDestructableX(d305)
    y162 = GetDestructableY(d305)
    distToBlocker153 = 192.
    distToNeighbor488 = 256.
    if ((walls209 == bj_ELEVATOR_WALL_TYPE_ALL273) or (walls209 == bj_ELEVATOR_WALL_TYPE_EAST300)){
        if (not NearbyElevatorExists((x156 + distToNeighbor488), y162)){
            ChangeElevatorWallBlocker((x156 + distToBlocker153), y162, 0., open794)
        } else {
        }
    } else {
    }
    if ((walls209 == bj_ELEVATOR_WALL_TYPE_ALL273) or (walls209 == bj_ELEVATOR_WALL_TYPE_NORTH409)){
        if (not NearbyElevatorExists(x156, (y162 + distToNeighbor488))){
            ChangeElevatorWallBlocker(x156, (y162 + distToBlocker153), 90., open794)
        } else {
        }
    } else {
    }
    if ((walls209 == bj_ELEVATOR_WALL_TYPE_ALL273) or (walls209 == bj_ELEVATOR_WALL_TYPE_SOUTH128)){
        if (not NearbyElevatorExists(x156, (y162 - distToNeighbor488))){
            ChangeElevatorWallBlocker(x156, (y162 - distToBlocker153), 90., open794)
        } else {
        }
    } else {
    }
    if ((walls209 == bj_ELEVATOR_WALL_TYPE_ALL273) or (walls209 == bj_ELEVATOR_WALL_TYPE_WEST131)){
        if (not NearbyElevatorExists((x156 - distToNeighbor488), y162)){
            ChangeElevatorWallBlocker((x156 - distToBlocker153), y162, 0., open794)
        } else {
        }
    } else {
    }
}


function GetDestructableX(destructable d468) returns real{ 
}


function GetDestructableY(destructable d178) returns real{ 
}


function NearbyElevatorExists(real x331, real y250) returns boolean{ 
    local real findThreshold292
    local rect r160
    findThreshold292 = 32.
    null
    r160 = Rect((x331 - findThreshold292), (y250 - findThreshold292), (x331 + findThreshold292), (y250 + findThreshold292))
    bj_elevatorNeighbor826 = null
    EnumDestructablesInRect(r160, null, function NearbyElevatorExistsEnum)
    RemoveRect(r160)
    return (bj_elevatorNeighbor826 != null)
}


function ChangeElevatorWallBlocker(real x331, real y171, real facing615, boolean open574) returns void{ 
    local destructable blocker664
    local real findThreshold347
    local real nudgeLength245
    local real nudgeWidth669
    local rect r294
    blocker664 = null
    findThreshold347 = 32.
    nudgeLength245 = (4.25 * bj_CELLWIDTH310)
    nudgeWidth669 = (1.25 * bj_CELLWIDTH310)
    null
    r294 = Rect((x331 - findThreshold347), (y171 - findThreshold347), (x331 + findThreshold347), (y171 + findThreshold347))
    bj_elevatorWallBlocker126 = null
    EnumDestructablesInRect(r294, null, function FindElevatorWallBlockerEnum)
    RemoveRect(r294)
    blocker664 = bj_elevatorWallBlocker126
    if (blocker664 == null){
        blocker664 = CreateDeadDestructable(bj_ELEVATOR_BLOCKER_CODE155, x331, y171, facing615, 1., 0)
    } else {
        if (GetDestructableTypeId(blocker664) != bj_ELEVATOR_BLOCKER_CODE155){
            return %nothing%
        } else {
        }
    }
    if open574{
        if (GetDestructableLife(blocker664) > 0.){
            KillDestructable(blocker664)
        } else {
        }
    } else {
        if (GetDestructableLife(blocker664) <= 0.){
            DestructableRestoreLife(blocker664, GetDestructableMaxLife(blocker664), false)
        } else {
        }
        if (facing615 == 0.){
            r294 = Rect((x331 - (nudgeWidth669 / 2.)), (y171 - (nudgeLength245 / 2.)), (x331 + (nudgeWidth669 / 2.)), (y171 + (nudgeLength245 / 2.)))
            NudgeObjectsInRect(r294)
            RemoveRect(r294)
        } else {
            if (facing615 == 90.){
                r294 = Rect((x331 - (nudgeLength245 / 2.)), (y171 - (nudgeWidth669 / 2.)), (x331 + (nudgeLength245 / 2.)), (y171 + (nudgeWidth669 / 2.)))
                NudgeObjectsInRect(r294)
                RemoveRect(r294)
            } else {
            }
        }
    }
}


function FindElevatorWallBlockerEnum() returns void{ 
    bj_elevatorWallBlocker126 = GetEnumDestructable()
}


function EnumDestructablesInRect(rect r331, boolexpr filter507, code actionFunc124) returns void{ 
}


function RemoveRect(rect whichRect159) returns void{ 
}


function CreateDeadDestructable(integer objectid726, real x269, real y605, real face380, real scale155, integer variation223) returns destructable{ 
}


function GetDestructableTypeId(destructable d892) returns integer{ 
}


function GetDestructableLife(destructable d806) returns real{ 
}


function KillDestructable(destructable d250) returns void{ 
}


function GetDestructableMaxLife(destructable d301) returns real{ 
}


function DestructableRestoreLife(destructable d264, real life754, boolean birth760) returns void{ 
}


function NudgeObjectsInRect(rect nudgeArea260) returns void{ 
    local group g243
    null
    g243 = CreateGroup()
    GroupEnumUnitsInRect(g243, nudgeArea260, null)
    ForGroup(g243, function NudgeUnitsInRectEnum)
    DestroyGroup(g243)
    EnumItemsInRect(nudgeArea260, null, function NudgeItemsInRectEnum)
}


function GetEnumDestructable() returns destructable{ 
}


function NearbyElevatorExistsEnum() returns void{ 
    local destructable d404
    local integer dType115
    d404 = GetEnumDestructable()
    dType115 = GetDestructableTypeId(d404)
    if ((dType115 == bj_ELEVATOR_CODE01674) or (dType115 == bj_ELEVATOR_CODE02236)){
        bj_elevatorNeighbor826 = d404
    } else {
    }
}


function NudgeUnitsInRectEnum() returns void{ 
    local unit nudgee241
    nudgee241 = GetEnumUnit()
    SetUnitPosition(nudgee241, GetUnitX(nudgee241), GetUnitY(nudgee241))
}


function NudgeItemsInRectEnum() returns void{ 
    local item nudgee291
    nudgee291 = GetEnumItem()
    SetItemPosition(nudgee291, GetItemX(nudgee291), GetItemY(nudgee291))
}


function EnumItemsInRect(rect r282, boolexpr filter197, code actionFunc326) returns void{ 
}


function GetEnumItem() returns item{ 
}


function GetItemX(item i225) returns real{ 
}


function GetItemY(item i168) returns real{ 
}


function SetItemPosition(item i294, real x289, real y310) returns void{ 
}


function SetUnitPosition(unit whichUnit236, real newX594, real newY224) returns void{ 
}


function ChangeElevatorHeight(destructable d189, integer newHeight486) returns void{ 
    local integer oldHeight203
    null
    newHeight486 = IMaxBJ(1, newHeight486)
    newHeight486 = IMinBJ(3, newHeight486)
    oldHeight203 = GetElevatorHeight(d189)
    SetDestructableOccluderHeight(d189, (bj_CLIFFHEIGHT296 * (newHeight486 - 1)))
    if (newHeight486 == 1){
        if (oldHeight203 == 2){
            SetDestructableAnimation(d189, "birth")
            QueueDestructableAnimation(d189, "stand")
        } else {
            if (oldHeight203 == 3){
                SetDestructableAnimation(d189, "birth third")
                QueueDestructableAnimation(d189, "stand")
            } else {
                SetDestructableAnimation(d189, "stand")
            }
        }
    } else {
        if (newHeight486 == 2){
            if (oldHeight203 == 1){
                SetDestructableAnimation(d189, "death")
                QueueDestructableAnimation(d189, "stand second")
            } else {
                if (oldHeight203 == 3){
                    SetDestructableAnimation(d189, "birth second")
                    QueueDestructableAnimation(d189, "stand second")
                } else {
                    SetDestructableAnimation(d189, "stand second")
                }
            }
        } else {
            if (newHeight486 == 3){
                if (oldHeight203 == 1){
                    SetDestructableAnimation(d189, "death third")
                    QueueDestructableAnimation(d189, "stand third")
                } else {
                    if (oldHeight203 == 2){
                        SetDestructableAnimation(d189, "death second")
                        QueueDestructableAnimation(d189, "stand third")
                    } else {
                        SetDestructableAnimation(d189, "stand third")
                    }
                }
            } else {
            }
        }
    }
}


function IMaxBJ(integer a552, integer b118) returns integer{ 
    if (a552 < b118){
        return b118
    } else {
        return a552
    }
}


function IMinBJ(integer a320, integer b749) returns integer{ 
    if (a320 < b749){
        return a320
    } else {
        return b749
    }
}


function GetElevatorHeight(destructable d288) returns integer{ 
    local integer height562
    null
    height562 = (1 + R2I((GetDestructableOccluderHeight(d288) / bj_CLIFFHEIGHT296)))
    if ((height562 < 1) or (height562 > 3)){
        height562 = 1
    } else {
    }
    return height562
}


function SetDestructableOccluderHeight(destructable d132, real height162) returns void{ 
}


function GetDestructableOccluderHeight(destructable d881) returns real{ 
}


function ModifyGateBJ(integer gateOperation326, destructable d660) returns void{ 
    if (gateOperation326 == bj_GATEOPERATION_CLOSE208){
        if (GetDestructableLife(d660) <= 0.){
            DestructableRestoreLife(d660, GetDestructableMaxLife(d660), true)
        } else {
        }
        SetDestructableAnimation(d660, "stand")
    } else {
        if (gateOperation326 == bj_GATEOPERATION_OPEN118){
            if (GetDestructableLife(d660) > 0.){
                KillDestructable(d660)
            } else {
            }
            SetDestructableAnimation(d660, "death alternate")
        } else {
            if (gateOperation326 == bj_GATEOPERATION_DESTROY284){
                if (GetDestructableLife(d660) > 0.){
                    KillDestructable(d660)
                } else {
                }
                SetDestructableAnimation(d660, "death")
            } else {
            }
        }
    }
}


function SetDestructableMaxLifeBJ(destructable d112, real max150) returns void{ 
    SetDestructableMaxLife(d112, max150)
}


function SetDestructableMaxLife(destructable d274, real max341) returns void{ 
}


function SetDestructableLifePercentBJ(destructable d305, real percent286) returns void{ 
    SetDestructableLife(d305, ((GetDestructableMaxLife(d305) * percent286) * 0.01))
}


function SetDestructableLife(destructable d386, real life389) returns void{ 
}


function EnumDestructablesInCircleBJ(real radius321, location loc159, code actionFunc303) returns void{ 
    local rect r810
    null
    if (radius321 >= 0.){
        bj_enumDestructableCenter426 = loc159
        bj_enumDestructableRadius284 = radius321
        r810 = GetRectFromCircleBJ(loc159, radius321)
        EnumDestructablesInRect(r810, filterEnumDestructablesInCircleBJ827, actionFunc303)
        RemoveRect(r810)
    } else {
    }
}


function RandomDestructableInRectSimpleBJ(rect r217) returns destructable{ 
    return RandomDestructableInRectBJ(r217, null)
}


function RandomDestructableInRectBJ(rect r792, boolexpr filter678) returns destructable{ 
    bj_destRandomConsidered742 = 0
    bj_destRandomCurrentPick239 = null
    EnumDestructablesInRect(r792, filter678, function RandomDestructableInRectBJEnum)
    DestroyBoolExpr(filter678)
    return bj_destRandomCurrentPick239
}


function RandomDestructableInRectBJEnum() returns void{ 
    bj_destRandomConsidered742 = (bj_destRandomConsidered742 + 1)
    if (GetRandomInt(1, bj_destRandomConsidered742) == 1){
        bj_destRandomCurrentPick239 = GetEnumDestructable()
    } else {
    }
}


function IsDestructableAliveBJ(destructable d246) returns boolean{ 
    return (not IsDestructableDeadBJ(d246))
}


function IsDestructableDeadBJ(destructable d111) returns boolean{ 
    return (GetDestructableLife(d111) <= 0.)
}


function GetFilterDestructable() returns destructable{ 
}


function GetDestructableLoc(destructable whichDestructable279) returns location{ 
    return Location(GetDestructableX(whichDestructable279), GetDestructableY(whichDestructable279))
}


function EnumDestructablesInRectAll(rect r184, code actionFunc148) returns void{ 
    EnumDestructablesInRect(r184, null, actionFunc148)
}


function IsDestructableInvulnerableBJ(destructable d299) returns boolean{ 
    return IsDestructableInvulnerable(d299)
}


function IsDestructableInvulnerable(destructable d323) returns boolean{ 
}


function SetDestructableInvulnerableBJ(destructable d199, boolean flag265) returns void{ 
    SetDestructableInvulnerable(d199, flag265)
}


function SetDestructableInvulnerable(destructable d210, boolean flag905) returns void{ 
}


function ShowDestructableBJ(boolean flag211, destructable d980) returns void{ 
    ShowDestructable(d980, flag211)
}


function ShowDestructable(destructable d740, boolean flag253) returns void{ 
}


function GetLastCreatedDestructable() returns destructable{ 
    return bj_lastCreatedDestructable569
}


function CreateDeadDestructableLocBJ(integer objectid475, location loc141, real facing191, real scale484, integer variation221) returns destructable{ 
    bj_lastCreatedDestructable569 = CreateDeadDestructable(objectid475, GetLocationX(loc141), GetLocationY(loc141), facing191, scale484, variation221)
    return bj_lastCreatedDestructable569
}


function CreateDestructableLoc(integer objectid120, location loc313, real facing392, real scale617, integer variation460) returns destructable{ 
    bj_lastCreatedDestructable569 = CreateDestructable(objectid120, GetLocationX(loc313), GetLocationY(loc313), facing392, scale617, variation460)
    return bj_lastCreatedDestructable569
}


function CreateDestructable(integer objectid769, real x219, real y145, real face134, real scale284, integer variation154) returns destructable{ 
}


function UnitDamageTargetBJ(unit whichUnit149, unit target126, real amount203, attacktype whichAttack205, damagetype whichDamage182) returns boolean{ 
    return UnitDamageTarget(whichUnit149, target126, amount203, true, false, whichAttack205, whichDamage182, WEAPON_TYPE_WHOKNOWS185)
}


function UnitDamageTarget(unit whichUnit321, widget target453, real amount116, boolean attack102, boolean ranged294, attacktype attackType293, damagetype damageType286, weapontype weaponType202) returns boolean{ 
}


function UnitDamagePointLoc(unit whichUnit589, real delay180, real radius106, location loc274, real amount359, attacktype whichAttack216, damagetype whichDamage541) returns boolean{ 
    return UnitDamagePoint(whichUnit589, delay180, radius106, GetLocationX(loc274), GetLocationY(loc274), amount359, true, false, whichAttack216, whichDamage541, WEAPON_TYPE_WHOKNOWS185)
}


function UnitDamagePoint(unit whichUnit553, real delay673, real radius282, real x135, real y237, real amount176, boolean attack225, boolean ranged114, attacktype attackType114, damagetype damageType328, weapontype weaponType184) returns boolean{ 
}


function SetUnitUseFoodBJ(boolean enable707, unit whichUnit280) returns void{ 
    SetUnitUseFood(whichUnit280, enable707)
}


function SetUnitUseFood(unit whichUnit467, boolean useFood245) returns void{ 
}


function RemoveUnitFromStockBJ(integer unitId647, unit whichUnit292) returns void{ 
    RemoveUnitFromStock(whichUnit292, unitId647)
}


function RemoveUnitFromStock(unit whichUnit282, integer unitId502) returns void{ 
}


function RemoveItemFromStockBJ(integer itemId265, unit whichUnit120) returns void{ 
    RemoveItemFromStock(whichUnit120, itemId265)
}


function AddUnitToStockBJ(integer unitId928, unit whichUnit280, integer currentStock106, integer stockMax791) returns void{ 
    AddUnitToStock(whichUnit280, unitId928, currentStock106, stockMax791)
}


function AddUnitToStock(unit whichUnit246, integer unitId271, integer currentStock308, integer stockMax324) returns void{ 
}


function AddItemToStockBJ(integer itemId370, unit whichUnit908, integer currentStock319, integer stockMax179) returns void{ 
    AddItemToStock(whichUnit908, itemId370, currentStock319, stockMax179)
}


function SetUnitPositionLocFacingLocBJ(unit whichUnit148, location loc266, location lookAt252) returns void{ 
    SetUnitPositionLoc(whichUnit148, loc266)
    SetUnitFacing(whichUnit148, AngleBetweenPoints(loc266, lookAt252))
}


function SetUnitPositionLoc(unit whichUnit236, location whichLocation214) returns void{ 
}


function SetUnitFacing(unit whichUnit303, real facingAngle210) returns void{ 
}


function SetUnitPositionLocFacingBJ(unit whichUnit798, location loc729, real facing293) returns void{ 
    SetUnitPositionLoc(whichUnit798, loc729)
    SetUnitFacing(whichUnit798, facing293)
}


function GetLastReplacedUnitBJ() returns unit{ 
    return bj_lastReplacedUnit261
}


function ReplaceUnitBJ(unit whichUnit384, integer newUnitId156, integer unitStateMethod156) returns unit{ 
    local unit oldUnit747
    local unit newUnit267
    local boolean wasHidden121
    local integer index316
    local item indexItem254
    local real oldRatio191
    oldUnit747 = whichUnit384
    null
    null
    null
    null
    null
    if (oldUnit747 == null){
        bj_lastReplacedUnit261 = oldUnit747
        return oldUnit747
    } else {
    }
    wasHidden121 = IsUnitHidden(oldUnit747)
    ShowUnit(oldUnit747, false)
    if (newUnitId156 == 1969713004){
        newUnit267 = CreateBlightedGoldmine(GetOwningPlayer(oldUnit747), GetUnitX(oldUnit747), GetUnitY(oldUnit747), GetUnitFacing(oldUnit747))
    } else {
        newUnit267 = CreateUnit(GetOwningPlayer(oldUnit747), newUnitId156, GetUnitX(oldUnit747), GetUnitY(oldUnit747), GetUnitFacing(oldUnit747))
    }
    if (unitStateMethod156 == bj_UNIT_STATE_METHOD_RELATIVE346){
        if (GetUnitState(oldUnit747, UNIT_STATE_MAX_LIFE166) > 0.){
            oldRatio191 = (GetUnitState(oldUnit747, UNIT_STATE_LIFE161) / GetUnitState(oldUnit747, UNIT_STATE_MAX_LIFE166))
            SetUnitState(newUnit267, UNIT_STATE_LIFE161, (oldRatio191 * GetUnitState(newUnit267, UNIT_STATE_MAX_LIFE166)))
        } else {
        }
        if ((GetUnitState(oldUnit747, UNIT_STATE_MAX_MANA300) > 0.) and (GetUnitState(newUnit267, UNIT_STATE_MAX_MANA300) > 0.)){
            oldRatio191 = (GetUnitState(oldUnit747, UNIT_STATE_MANA273) / GetUnitState(oldUnit747, UNIT_STATE_MAX_MANA300))
            SetUnitState(newUnit267, UNIT_STATE_MANA273, (oldRatio191 * GetUnitState(newUnit267, UNIT_STATE_MAX_MANA300)))
        } else {
        }
    } else {
        if (unitStateMethod156 == bj_UNIT_STATE_METHOD_ABSOLUTE294){
            SetUnitState(newUnit267, UNIT_STATE_LIFE161, GetUnitState(oldUnit747, UNIT_STATE_LIFE161))
            if (GetUnitState(newUnit267, UNIT_STATE_MAX_MANA300) > 0.){
                SetUnitState(newUnit267, UNIT_STATE_MANA273, GetUnitState(oldUnit747, UNIT_STATE_MANA273))
            } else {
            }
        } else {
            if (unitStateMethod156 == bj_UNIT_STATE_METHOD_DEFAULTS100){
            } else {
                if (unitStateMethod156 == bj_UNIT_STATE_METHOD_MAXIMUM179){
                    SetUnitState(newUnit267, UNIT_STATE_LIFE161, GetUnitState(newUnit267, UNIT_STATE_MAX_LIFE166))
                    SetUnitState(newUnit267, UNIT_STATE_MANA273, GetUnitState(newUnit267, UNIT_STATE_MAX_MANA300))
                } else {
                }
            }
        }
    }
    SetResourceAmount(newUnit267, GetResourceAmount(oldUnit747))
    if (IsUnitType(oldUnit747, UNIT_TYPE_HERO198) and IsUnitType(newUnit267, UNIT_TYPE_HERO198)){
        SetHeroXP(newUnit267, GetHeroXP(oldUnit747), false)
        index316 = 0
        loop {
            indexItem254 = UnitItemInSlot(oldUnit747, index316)
            if (indexItem254 != null){
                UnitRemoveItem(oldUnit747, indexItem254)
                UnitAddItem(newUnit267, indexItem254)
            } else {
            }
            index316 = (index316 + 1)
            exitwhen (index316 >= bj_MAX_INVENTORY225)
        }
    } else {
    }
    if wasHidden121{
        KillUnit(oldUnit747)
        RemoveUnit(oldUnit747)
    } else {
        RemoveUnit(oldUnit747)
    }
    bj_lastReplacedUnit261 = newUnit267
    return newUnit267
}


function ShowUnit(unit whichUnit319, boolean show232) returns void{ 
}


function GetUnitFacing(unit whichUnit547) returns real{ 
}


function GetUnitState(unit whichUnit172, unitstate whichUnitState696) returns real{ 
}


function SetUnitState(unit whichUnit172, unitstate whichUnitState152, real newVal770) returns void{ 
}


function GetHeroXP(unit whichHero296) returns integer{ 
}


function SetHeroXP(unit whichHero788, integer newXpVal689, boolean showEyeCandy107) returns void{ 
}


function UnitItemInSlot(unit whichUnit221, integer itemSlot234) returns item{ 
}


function UnitRemoveItem(unit whichUnit103, item whichItem149) returns void{ 
}


function UnitAddItem(unit whichUnit173, item whichItem147) returns boolean{ 
}


function KillUnit(unit whichUnit260) returns void{ 
}


function IsUnitIllusionBJ(unit whichUnit806) returns boolean{ 
    return IsUnitIllusion(whichUnit806)
}


function IsUnitIllusion(unit whichUnit220) returns boolean{ 
}


function IsUnitLoadedBJ(unit whichUnit400) returns boolean{ 
    return IsUnitLoaded(whichUnit400)
}


function IsUnitLoaded(unit whichUnit111) returns boolean{ 
}


function IsUnitInTransportBJ(unit whichUnit274, unit whichTransport113) returns boolean{ 
    return IsUnitInTransport(whichUnit274, whichTransport113)
}


function IsUnitInTransport(unit whichUnit549, unit whichTransport445) returns boolean{ 
}


function GetLoadedUnitBJ() returns unit{ 
    return GetLoadedUnit()
}


function GetLoadedUnit() returns unit{ 
}


function GetTransportUnitBJ() returns unit{ 
    return GetTransportUnit()
}


function GetTransportUnit() returns unit{ 
}


function ExplodeUnitBJ(unit whichUnit335) returns void{ 
    SetUnitExploded(whichUnit335, true)
    KillUnit(whichUnit335)
}


function SetUnitExploded(unit whichUnit171, boolean exploded321) returns void{ 
}


function SetUnitExplodedBJ(unit whichUnit146, boolean exploded278) returns void{ 
    SetUnitExploded(whichUnit146, exploded278)
}


function UnitMakeAbilityPermanent(unit whichUnit166, boolean permanent166, integer abilityId175) returns boolean{ 
}


function UnitAddTypeBJ(unittype whichType273, unit whichUnit299) returns boolean{ 
    return UnitAddType(whichUnit299, whichType273)
}


function UnitAddType(unit whichUnit685, unittype whichUnitType153) returns boolean{ 
}


function UnitRemoveTypeBJ(unittype whichType116, unit whichUnit265) returns boolean{ 
    return UnitRemoveType(whichUnit265, whichType116)
}


function UnitRemoveType(unit whichUnit156, unittype whichUnitType296) returns boolean{ 
}


function UnitAddAbility(unit whichUnit284, integer abilityId335) returns boolean{ 
}


function UnitRemoveAbilityBJ(integer abilityId993, unit whichUnit182) returns boolean{ 
    return UnitRemoveAbility(whichUnit182, abilityId993)
}


function UnitRemoveAbility(unit whichUnit105, integer abilityId759) returns boolean{ 
}


function UnitCountBuffsExBJ(integer polarity328, integer resist790, unit whichUnit197, boolean bTLife185, boolean bAura255) returns integer{ 
    local boolean bPos146
    local boolean bNeg412
    local boolean bMagic141
    local boolean bPhys155
    bPos146 = ((polarity328 == bj_BUFF_POLARITY_EITHER145) or (polarity328 == bj_BUFF_POLARITY_POSITIVE173))
    bNeg412 = ((polarity328 == bj_BUFF_POLARITY_EITHER145) or (polarity328 == bj_BUFF_POLARITY_NEGATIVE122))
    bMagic141 = ((resist790 == bj_BUFF_RESIST_BOTH183) or (resist790 == bj_BUFF_RESIST_MAGIC293))
    bPhys155 = ((resist790 == bj_BUFF_RESIST_BOTH183) or (resist790 == bj_BUFF_RESIST_PHYSICAL757))
    return UnitCountBuffsEx(whichUnit197, bPos146, bNeg412, bMagic141, bPhys155, bTLife185, bAura255, false)
}


function UnitCountBuffsEx(unit whichUnit928, boolean removePositive186, boolean removeNegative117, boolean magic229, boolean physical175, boolean timedLife614, boolean aura105, boolean autoDispel199) returns integer{ 
}


function UnitRemoveBuffsExBJ(integer polarity201, integer resist360, unit whichUnit678, boolean bTLife274, boolean bAura295) returns void{ 
    local boolean bPos165
    local boolean bNeg261
    local boolean bMagic174
    local boolean bPhys567
    bPos165 = ((polarity201 == bj_BUFF_POLARITY_EITHER145) or (polarity201 == bj_BUFF_POLARITY_POSITIVE173))
    bNeg261 = ((polarity201 == bj_BUFF_POLARITY_EITHER145) or (polarity201 == bj_BUFF_POLARITY_NEGATIVE122))
    bMagic174 = ((resist360 == bj_BUFF_RESIST_BOTH183) or (resist360 == bj_BUFF_RESIST_MAGIC293))
    bPhys567 = ((resist360 == bj_BUFF_RESIST_BOTH183) or (resist360 == bj_BUFF_RESIST_PHYSICAL757))
    UnitRemoveBuffsEx(whichUnit678, bPos165, bNeg261, bMagic174, bPhys567, bTLife274, bAura295, false)
}


function UnitRemoveBuffsEx(unit whichUnit375, boolean removePositive301, boolean removeNegative227, boolean magic105, boolean physical204, boolean timedLife270, boolean aura287, boolean autoDispel152) returns void{ 
}


function UnitRemoveBuffsBJ(integer buffType246, unit whichUnit195) returns void{ 
    if (buffType246 == bj_REMOVEBUFFS_POSITIVE281){
        UnitRemoveBuffs(whichUnit195, true, false)
    } else {
        if (buffType246 == bj_REMOVEBUFFS_NEGATIVE322){
            UnitRemoveBuffs(whichUnit195, false, true)
        } else {
            if (buffType246 == bj_REMOVEBUFFS_ALL143){
                UnitRemoveBuffs(whichUnit195, true, true)
            } else {
                if (buffType246 == bj_REMOVEBUFFS_NONTLIFE263){
                    UnitRemoveBuffsEx(whichUnit195, true, true, false, false, false, true, false)
                } else {
                }
            }
        }
    }
}


function UnitRemoveBuffs(unit whichUnit321, boolean removePositive148, boolean removeNegative333) returns void{ 
}


function UnitShareVisionBJ(boolean share208, unit whichUnit154, player whichPlayer622) returns void{ 
    UnitShareVision(whichUnit154, whichPlayer622, share208)
}


function UnitShareVision(unit whichUnit149, player whichPlayer309, boolean share127) returns void{ 
}


function UnitApplyTimedLifeBJ(real duration241, integer buffId273, unit whichUnit106) returns void{ 
    UnitApplyTimedLife(whichUnit106, buffId273, duration241)
}


function UnitApplyTimedLife(unit whichUnit218, integer buffId126, real duration345) returns void{ 
}


function UnitPauseTimedLifeBJ(boolean flag148, unit whichUnit151) returns void{ 
    UnitPauseTimedLife(whichUnit151, flag148)
}


function UnitPauseTimedLife(unit whichUnit304, boolean flag166) returns void{ 
}


function IsUnitPausedBJ(unit whichUnit208) returns boolean{ 
    return IsUnitPaused(whichUnit208)
}


function IsUnitPaused(unit whichHero113) returns boolean{ 
}


function PauseUnitBJ(boolean pause324, unit whichUnit181) returns void{ 
    PauseUnit(whichUnit181, pause324)
}


function PauseUnit(unit whichUnit334, boolean flag164) returns void{ 
}


function PauseAllUnitsBJ(boolean pause261) returns void{ 
    local integer index185
    local player indexPlayer447
    local group g121
    null
    null
    null
    bj_pauseAllUnitsFlag183 = pause261
    g121 = CreateGroup()
    index185 = 0
    loop {
        indexPlayer447 = Player(index185)
        if (GetPlayerController(indexPlayer447) == MAP_CONTROL_COMPUTER289){
            PauseCompAI(indexPlayer447, pause261)
        } else {
        }
        GroupEnumUnitsOfPlayer(g121, indexPlayer447, null)
        ForGroup(g121, function PauseAllUnitsBJEnum)
        GroupClear(g121)
        index185 = (index185 + 1)
        exitwhen (index185 == bj_MAX_PLAYER_SLOTS129)
    }
    DestroyGroup(g121)
}


function PauseCompAI(player p194, boolean pause182) returns void{ 
}


function PauseAllUnitsBJEnum() returns void{ 
    PauseUnit(GetEnumUnit(), bj_pauseAllUnitsFlag183)
}


function DoesUnitGenerateAlarms(unit whichUnit164) returns boolean{ 
    return (not UnitIgnoreAlarmToggled(whichUnit164))
}


function UnitIgnoreAlarmToggled(unit whichUnit164) returns boolean{ 
}


function UnitGenerateAlarms(unit whichUnit127, boolean generate843) returns boolean{ 
    return UnitIgnoreAlarm(whichUnit127, (not generate843))
}


function UnitIgnoreAlarm(unit whichUnit114, boolean flag120) returns boolean{ 
}


function EnableCreepSleepBJ(boolean enable315) returns void{ 
    SetPlayerState(Player(PLAYER_NEUTRAL_AGGRESSIVE139), PLAYER_STATE_NO_CREEP_SLEEP922, IntegerTertiaryOp(enable315, 0, 1))
    if (not enable315){
        WakePlayerUnits(Player(PLAYER_NEUTRAL_AGGRESSIVE139))
    } else {
    }
}


function WakePlayerUnits(player whichPlayer211) returns void{ 
    local group g112
    g112 = CreateGroup()
    GroupEnumUnitsOfPlayer(g112, whichPlayer211, null)
    ForGroup(g112, function WakePlayerUnitsEnum)
    DestroyGroup(g112)
}


function WakePlayerUnitsEnum() returns void{ 
    UnitWakeUp(GetEnumUnit())
}


function UnitWakeUp(unit whichUnit227) returns void{ 
}


function UnitIsSleepingBJ(unit whichUnit722) returns boolean{ 
    return UnitIsSleeping(whichUnit722)
}


function UnitIsSleeping(unit whichUnit275) returns boolean{ 
}


function UnitWakeUpBJ(unit whichUnit190) returns void{ 
    UnitWakeUp(whichUnit190)
}


function UnitCanSleepBJ(unit whichUnit327) returns boolean{ 
    return UnitCanSleep(whichUnit327)
}


function UnitCanSleep(unit whichUnit148) returns boolean{ 
}


function UnitSetCanSleepBJ(unit whichUnit439, boolean canSleep594) returns void{ 
    UnitAddSleep(whichUnit439, canSleep594)
}


function UnitAddSleep(unit whichUnit122, boolean add286) returns void{ 
}


function SetUnitAcquireRangeBJ(unit whichUnit210, real acquireRange902) returns void{ 
    SetUnitAcquireRange(whichUnit210, acquireRange902)
}


function SetUnitAcquireRange(unit whichUnit250, real newAcquireRange355) returns void{ 
}


function SetUnitBlendTimeBJ(unit whichUnit267, real blendTime803) returns void{ 
    SetUnitBlendTime(whichUnit267, blendTime803)
}


function SetUnitBlendTime(unit whichUnit305, real blendTime235) returns void{ 
}


function GetUnitDefaultPropWindowBJ(unit whichUnit206) returns real{ 
    return GetUnitDefaultPropWindow(whichUnit206)
}


function GetUnitDefaultPropWindow(unit whichUnit221) returns real{ 
}


function GetUnitPropWindowBJ(unit whichUnit263) returns real{ 
    return (GetUnitPropWindow(whichUnit263) * bj_RADTODEG319)
}


function GetUnitPropWindow(unit whichUnit114) returns real{ 
}


function SetUnitPropWindowBJ(unit whichUnit244, real propWindow220) returns void{ 
    local real angle285
    angle285 = propWindow220
    if (angle285 <= 0.){
        angle285 = 1.
    } else {
        if (angle285 >= 360.){
            angle285 = 359.
        } else {
        }
    }
    angle285 = (angle285 * bj_DEGTORAD197)
    SetUnitPropWindow(whichUnit244, angle285)
}


function SetUnitPropWindow(unit whichUnit327, real newPropWindowAngle272) returns void{ 
}


function SetUnitTurnSpeedBJ(unit whichUnit194, real turnSpeed140) returns void{ 
    SetUnitTurnSpeed(whichUnit194, turnSpeed140)
}


function SetUnitTurnSpeed(unit whichUnit171, real newTurnSpeed142) returns void{ 
}


function SetUnitFlyHeightBJ(unit whichUnit309, real newHeight101, real rate256) returns void{ 
    SetUnitFlyHeight(whichUnit309, newHeight101, rate256)
}


function SetUnitFlyHeight(unit whichUnit247, real newHeight135, real rate100) returns void{ 
}


function GetAttackedUnitBJ() returns unit{ 
    return GetTriggerUnit()
}


function IssueUpgradeOrderByIdBJ(unit whichUnit107, integer techId197) returns boolean{ 
    return IssueImmediateOrderById(whichUnit107, techId197)
}


function IssueImmediateOrderById(unit whichUnit135, integer order200) returns boolean{ 
}


function GroupTrainOrderByIdBJ(group g219, integer unitId311) returns boolean{ 
    return GroupImmediateOrderById(g219, unitId311)
}


function GroupImmediateOrderById(group whichGroup155, integer order135) returns boolean{ 
}


function IssueTrainOrderByIdBJ(unit whichUnit274, integer unitId209) returns boolean{ 
    return IssueImmediateOrderById(whichUnit274, unitId209)
}


function IssueBuildOrderByIdLocBJ(unit whichPeon333, integer unitId151, location loc269) returns boolean{ 
    if (unitId151 == 1969713004){
        return IssueHauntOrderAtLocBJ(whichPeon333, loc269)
    } else {
        return IssueBuildOrderById(whichPeon333, unitId151, GetLocationX(loc269), GetLocationY(loc269))
    }
}


function IssueHauntOrderAtLocBJ(unit whichPeon198, location loc330) returns boolean{ 
    local group g188
    local unit goldMine108
    g188 = null
    goldMine108 = null
    g188 = CreateGroup()
    GroupEnumUnitsInRangeOfLoc(g188, loc330, (2. * bj_CELLWIDTH310), filterIssueHauntOrderAtLocBJ113)
    goldMine108 = FirstOfGroup(g188)
    DestroyGroup(g188)
    if (goldMine108 == null){
        return false
    } else {
    }
    return IssueTargetOrderById(whichPeon198, 1969713004, goldMine108)
}


function IssueBuildOrderById(unit whichPeon149, integer unitId175, real x275, real y712) returns boolean{ 
}


function FirstOfGroup(group whichGroup263) returns unit{ 
}


function IssueTargetOrderById(unit whichUnit158, integer order226, widget targetWidget111) returns boolean{ 
}


function ShowUnitShow(unit whichUnit215) returns void{ 
    if (IsUnitType(whichUnit215, UNIT_TYPE_HERO198) and IsUnitDeadBJ(whichUnit215)){
        return %nothing%
    } else {
    }
    ShowUnit(whichUnit215, true)
}


function ShowUnitHide(unit whichUnit788) returns void{ 
    ShowUnit(whichUnit788, false)
}


function IsUnitHiddenBJ(unit whichUnit996) returns boolean{ 
    return IsUnitHidden(whichUnit996)
}


function IsUnitGroupInRectBJ(group g142, rect r195) returns boolean{ 
    bj_isUnitGroupInRectResult114 = true
    bj_isUnitGroupInRectRect575 = r195
    ForGroup(g142, function IsUnitGroupInRectBJEnum)
    return bj_isUnitGroupInRectResult114
}


function IsUnitGroupInRectBJEnum() returns void{ 
    if (not RectContainsUnit(bj_isUnitGroupInRectRect575, GetEnumUnit())){
        bj_isUnitGroupInRectResult114 = false
    } else {
    }
}


function RectContainsUnit(rect r231, unit whichUnit256) returns boolean{ 
    return RectContainsCoords(r231, GetUnitX(whichUnit256), GetUnitY(whichUnit256))
}


function IsUnitGroupEmptyBJ(group g116) returns boolean{ 
    local boolean wantDestroy115
    wantDestroy115 = bj_wantDestroyGroup197
    bj_wantDestroyGroup197 = false
    bj_isUnitGroupEmptyResult148 = true
    ForGroup(g116, function IsUnitGroupEmptyBJEnum)
    if wantDestroy115{
        DestroyGroup(g116)
    } else {
    }
    return bj_isUnitGroupEmptyResult148
}


function IsUnitGroupEmptyBJEnum() returns void{ 
    bj_isUnitGroupEmptyResult148 = false
}


function IsUnitGroupDeadBJ(group g273) returns boolean{ 
    local boolean wantDestroy172
    wantDestroy172 = bj_wantDestroyGroup197
    bj_wantDestroyGroup197 = false
    bj_isUnitGroupDeadResult247 = true
    ForGroup(g273, function IsUnitGroupDeadBJEnum)
    if wantDestroy172{
        DestroyGroup(g273)
    } else {
    }
    return bj_isUnitGroupDeadResult247
}


function IsUnitGroupDeadBJEnum() returns void{ 
    if (not IsUnitDeadBJ(GetEnumUnit())){
        bj_isUnitGroupDeadResult247 = false
    } else {
    }
}


function SetUnitManaPercentBJ(unit whichUnit309, real percent230) returns void{ 
    SetUnitState(whichUnit309, UNIT_STATE_MANA273, ((GetUnitState(whichUnit309, UNIT_STATE_MAX_MANA300) * RMaxBJ(0., percent230)) * 0.01))
}


function SetUnitLifePercentBJ(unit whichUnit266, real percent189) returns void{ 
    SetUnitState(whichUnit266, UNIT_STATE_LIFE161, ((GetUnitState(whichUnit266, UNIT_STATE_MAX_LIFE166) * RMaxBJ(0., percent189)) * 0.01))
}


function SetUnitManaBJ(unit whichUnit198, real newValue335) returns void{ 
    SetUnitState(whichUnit198, UNIT_STATE_MANA273, RMaxBJ(0., newValue335))
}


function SetUnitLifeBJ(unit whichUnit197, real newValue243) returns void{ 
    SetUnitState(whichUnit197, UNIT_STATE_LIFE161, RMaxBJ(0., newValue243))
}


function SelectUnitRemoveForPlayer(unit whichUnit101, player whichPlayer148) returns void{ 
    if (GetLocalPlayer() == whichPlayer148){
        SelectUnit(whichUnit101, false)
    } else {
    }
}


function SelectUnit(unit whichUnit115, boolean flag161) returns void{ 
}


function SelectUnitAddForPlayer(unit whichUnit159, player whichPlayer302) returns void{ 
    if (GetLocalPlayer() == whichPlayer302){
        SelectUnit(whichUnit159, true)
    } else {
    }
}


function SelectGroupForPlayerBJ(group g302, player whichPlayer131) returns void{ 
    if (GetLocalPlayer() == whichPlayer131){
        ClearSelection()
        ForGroup(g302, function SelectGroupBJEnum)
    } else {
    }
}


function ClearSelection() returns void{ 
}


function SelectGroupBJEnum() returns void{ 
    SelectUnit(GetEnumUnit(), true)
}


function SelectUnitForPlayerSingle(unit whichUnit154, player whichPlayer286) returns void{ 
    if (GetLocalPlayer() == whichPlayer286){
        ClearSelection()
        SelectUnit(whichUnit154, true)
    } else {
    }
}


function ClearSelectionForPlayer(player whichPlayer310) returns void{ 
    if (GetLocalPlayer() == whichPlayer310){
        ClearSelection()
    } else {
    }
}


function SelectUnitRemove(unit whichUnit267) returns void{ 
    SelectUnit(whichUnit267, false)
}


function SelectUnitAdd(unit whichUnit306) returns void{ 
    SelectUnit(whichUnit306, true)
}


function SelectGroupBJ(group g217) returns void{ 
    ClearSelection()
    ForGroup(g217, function SelectGroupBJEnum)
}


function SelectUnitSingle(unit whichUnit581) returns void{ 
    ClearSelection()
    SelectUnit(whichUnit581, true)
}


function GetUnitManaPercent(unit whichUnit242) returns real{ 
    return GetUnitStatePercent(whichUnit242, UNIT_STATE_MANA273, UNIT_STATE_MAX_MANA300)
}


function GetUnitStatePercent(unit whichUnit296, unitstate whichState212, unitstate whichMaxState241) returns real{ 
    local real value273
    local real maxValue134
    value273 = GetUnitState(whichUnit296, whichState212)
    maxValue134 = GetUnitState(whichUnit296, whichMaxState241)
    if ((whichUnit296 == null) or (maxValue134 == 0.)){
        return 0.0
    } else {
    }
    return ((value273 / maxValue134) * 100.0)
}


function GetUnitLifePercent(unit whichUnit432) returns real{ 
    return GetUnitStatePercent(whichUnit432, UNIT_STATE_LIFE161, UNIT_STATE_MAX_LIFE166)
}


function GetUnitStateSwap(unitstate whichState545, unit whichUnit312) returns real{ 
    return GetUnitState(whichUnit312, whichState545)
}


function CreatePermanentCorpseLocBJ(integer style157, integer unitid180, player whichPlayer184, location loc157, real facing391) returns unit{ 
    bj_lastCreatedUnit227 = CreateCorpse(whichPlayer184, unitid180, GetLocationX(loc157), GetLocationY(loc157), facing391)
    SetUnitBlendTime(bj_lastCreatedUnit227, 0.)
    if (style157 == bj_CORPSETYPE_FLESH217){
        SetUnitAnimation(bj_lastCreatedUnit227, "decay flesh")
        GroupAddUnit(bj_suspendDecayFleshGroup227, bj_lastCreatedUnit227)
    } else {
        if (style157 == bj_CORPSETYPE_BONE355){
            SetUnitAnimation(bj_lastCreatedUnit227, "decay bone")
            GroupAddUnit(bj_suspendDecayBoneGroup214, bj_lastCreatedUnit227)
        } else {
            SetUnitAnimation(bj_lastCreatedUnit227, "decay bone")
            GroupAddUnit(bj_suspendDecayBoneGroup214, bj_lastCreatedUnit227)
        }
    }
    TimerStart(bj_delayedSuspendDecayTimer254, 0.05, false, null)
    return bj_lastCreatedUnit227
}


function CreateCorpse(player whichPlayer144, integer unitid174, real x357, real y218, real face951) returns unit{ 
}


function DelayedSuspendDecay() returns void{ 
    local group boneGroup301
    local group fleshGroup154
    null
    null
    boneGroup301 = bj_suspendDecayBoneGroup214
    fleshGroup154 = bj_suspendDecayFleshGroup227
    bj_suspendDecayBoneGroup214 = CreateGroup()
    bj_suspendDecayFleshGroup227 = CreateGroup()
    ForGroup(fleshGroup154, function DelayedSuspendDecayStopAnimEnum)
    ForGroup(boneGroup301, function DelayedSuspendDecayStopAnimEnum)
    TriggerSleepAction(bj_CORPSE_MAX_DEATH_TIME808)
    ForGroup(fleshGroup154, function DelayedSuspendDecayFleshEnum)
    ForGroup(boneGroup301, function DelayedSuspendDecayBoneEnum)
    TriggerSleepAction(0.05)
    ForGroup(fleshGroup154, function DelayedSuspendDecayStopAnimEnum)
    DestroyGroup(boneGroup301)
    DestroyGroup(fleshGroup154)
}


function DelayedSuspendDecayStopAnimEnum() returns void{ 
    local unit enumUnit294
    enumUnit294 = GetEnumUnit()
    if (GetUnitState(enumUnit294, UNIT_STATE_LIFE161) <= 0.){
        SetUnitTimeScale(enumUnit294, 0.0001)
    } else {
    }
}


function DelayedSuspendDecayFleshEnum() returns void{ 
    local unit enumUnit437
    enumUnit437 = GetEnumUnit()
    if (GetUnitState(enumUnit437, UNIT_STATE_LIFE161) <= 0.){
        UnitSuspendDecay(enumUnit437, true)
        SetUnitTimeScale(enumUnit437, 10.0)
        SetUnitAnimation(enumUnit437, "decay flesh")
    } else {
    }
}


function DelayedSuspendDecayBoneEnum() returns void{ 
    local unit enumUnit217
    enumUnit217 = GetEnumUnit()
    if (GetUnitState(enumUnit217, UNIT_STATE_LIFE161) <= 0.){
        UnitSuspendDecay(enumUnit217, true)
        SetUnitTimeScale(enumUnit217, 0.0001)
    } else {
    }
}


function UnitSuspendDecay(unit whichUnit205, boolean suspend198) returns void{ 
}


function UnitSuspendDecayBJ(boolean suspend174, unit whichUnit182) returns void{ 
    UnitSuspendDecay(whichUnit182, suspend174)
}


function CreateCorpseLocBJ(integer unitid458, player whichPlayer238, location loc172) returns unit{ 
    bj_lastCreatedUnit227 = CreateCorpse(whichPlayer238, unitid458, GetLocationX(loc172), GetLocationY(loc172), GetRandomReal(0., 360.))
    return bj_lastCreatedUnit227
}


function GetLastCreatedGroup() returns group{ 
    bj_groupLastCreatedDest302 = CreateGroup()
    ForGroup(bj_lastCreatedGroup311, function GetLastCreatedGroupEnum)
    return bj_groupLastCreatedDest302
}


function GetLastCreatedGroupEnum() returns void{ 
    GroupAddUnit(bj_groupLastCreatedDest302, GetEnumUnit())
}


function CreateNUnitsAtLocFacingLocBJ(integer count111, integer unitId172, player whichPlayer164, location loc767, location lookAt137) returns group{ 
    return CreateNUnitsAtLoc(count111, unitId172, whichPlayer164, loc767, AngleBetweenPoints(loc767, lookAt137))
}


function CreateNUnitsAtLoc(integer count837, integer unitId242, player whichPlayer257, location loc312, real face194) returns group{ 
    GroupClear(bj_lastCreatedGroup311)
    loop {
        count837 = (count837 - 1)
        exitwhen (count837 < 0)
        CreateUnitAtLocSaveLast(whichPlayer257, unitId242, loc312, face194)
        GroupAddUnit(bj_lastCreatedGroup311, bj_lastCreatedUnit227)
    }
    return bj_lastCreatedGroup311
}


function CreateUnitAtLocSaveLast(player id334, integer unitid131, location loc249, real face133) returns unit{ 
    if (unitid131 == 1969713004){
        bj_lastCreatedUnit227 = CreateBlightedGoldmine(id334, GetLocationX(loc249), GetLocationY(loc249), face133)
    } else {
        bj_lastCreatedUnit227 = CreateUnitAtLoc(id334, unitid131, loc249, face133)
    }
    return bj_lastCreatedUnit227
}


function GetLastCreatedUnit() returns unit{ 
    return bj_lastCreatedUnit227
}


function GetKillingUnitBJ() returns unit{ 
    return GetKillingUnit()
}


function GetKillingUnit() returns unit{ 
}


function GetIssuedOrderIdBJ() returns integer{ 
    return GetIssuedOrderId()
}


function GetIssuedOrderId() returns integer{ 
}


function OrderId2StringBJ(integer orderId119) returns string{ 
    local string orderString201
    null
    orderString201 = OrderId2String(orderId119)
    if (orderString201 != null){
        return orderString201
    } else {
    }
    orderString201 = UnitId2String(orderId119)
    if (orderString201 != null){
        return orderString201
    } else {
    }
    return ""
}


function OrderId2String(integer orderId116) returns string{ 
}


function UnitId2String(integer unitId153) returns string{ 
}


function String2OrderIdBJ(string orderIdString286) returns integer{ 
    local integer orderId938
    null
    orderId938 = OrderId(orderIdString286)
    if (orderId938 != 0){
        return orderId938
    } else {
    }
    orderId938 = UnitId(orderIdString286)
    if (orderId938 != 0){
        return orderId938
    } else {
    }
    return 0
}


function OrderId(string orderIdString224) returns integer{ 
}


function UnitId(string unitIdString463) returns integer{ 
}


function UnitId2StringBJ(integer unitId765) returns string{ 
    local string unitString221
    unitString221 = UnitId2String(unitId765)
    if (unitString221 != null){
        return unitString221
    } else {
    }
    return ""
}


function String2UnitIdBJ(string unitIdString318) returns integer{ 
    return UnitId(unitIdString318)
}


function UnitId2OrderIdBJ(integer unitId169) returns integer{ 
    return unitId169
}


function CheckItemcodeStatus(integer itemId110, integer status193) returns boolean{ 
    if (status193 == bj_ITEMCODE_STATUS_POWERUP174){
        return IsItemIdPowerup(itemId110)
    } else {
        if (status193 == bj_ITEMCODE_STATUS_SELLABLE109){
            return IsItemIdSellable(itemId110)
        } else {
            if (status193 == bj_ITEMCODE_STATUS_PAWNABLE253){
                return IsItemIdPawnable(itemId110)
            } else {
                return false
            }
        }
    }
}


function IsItemIdPowerup(integer itemId150) returns boolean{ 
}


function IsItemIdPawnable(integer itemId139) returns boolean{ 
}


function CheckItemStatus(item whichItem219, integer status289) returns boolean{ 
    if (status289 == bj_ITEM_STATUS_HIDDEN157){
        return (not IsItemVisible(whichItem219))
    } else {
        if (status289 == bj_ITEM_STATUS_OWNED277){
            return IsItemOwned(whichItem219)
        } else {
            if (status289 == bj_ITEM_STATUS_INVULNERABLE332){
                return IsItemInvulnerable(whichItem219)
            } else {
                if (status289 == bj_ITEM_STATUS_POWERUP894){
                    return IsItemPowerup(whichItem219)
                } else {
                    if (status289 == bj_ITEM_STATUS_SELLABLE274){
                        return IsItemSellable(whichItem219)
                    } else {
                        if (status289 == bj_ITEM_STATUS_PAWNABLE154){
                            return IsItemPawnable(whichItem219)
                        } else {
                            return false
                        }
                    }
                }
            }
        }
    }
}


function IsItemVisible(item whichItem228) returns boolean{ 
}


function IsItemOwned(item whichItem453) returns boolean{ 
}


function IsItemInvulnerable(item whichItem380) returns boolean{ 
}


function IsItemPowerup(item whichItem982) returns boolean{ 
}


function IsItemSellable(item whichItem753) returns boolean{ 
}


function IsItemPawnable(item whichItem199) returns boolean{ 
}


function RandomItemInRectSimpleBJ(rect r159) returns item{ 
    return RandomItemInRectBJ(r159, null)
}


function RandomItemInRectBJ(rect r157, boolexpr filter778) returns item{ 
    bj_itemRandomConsidered303 = 0
    bj_itemRandomCurrentPick241 = null
    EnumItemsInRect(r157, filter778, function RandomItemInRectBJEnum)
    DestroyBoolExpr(filter778)
    return bj_itemRandomCurrentPick241
}


function RandomItemInRectBJEnum() returns void{ 
    bj_itemRandomConsidered303 = (bj_itemRandomConsidered303 + 1)
    if (GetRandomInt(1, bj_itemRandomConsidered303) == 1){
        bj_itemRandomCurrentPick241 = GetEnumItem()
    } else {
    }
}


function EnumItemsInRectBJ(rect r160, code actionFunc111) returns void{ 
    EnumItemsInRect(r160, null, actionFunc111)
}


function ChooseRandomCreepBJ(integer level327) returns integer{ 
    return ChooseRandomCreep(level327)
}


function ChooseRandomCreep(integer level171) returns integer{ 
}


function ChooseRandomNPBuildingBJ() returns integer{ 
    return ChooseRandomNPBuilding()
}


function ChooseRandomNPBuilding() returns integer{ 
}


function ChooseRandomItemExBJ(integer level160, itemtype whichType303) returns integer{ 
    return ChooseRandomItemEx(whichType303, level160)
}


function ChooseRandomItemBJ(integer level103) returns integer{ 
    return ChooseRandomItem(level103)
}


function ChooseRandomItem(integer level342) returns integer{ 
}


function IsItemHiddenBJ(item whichItem164) returns boolean{ 
    return (not IsItemVisible(whichItem164))
}


function SetItemVisibleBJ(boolean show629, item whichItem254) returns void{ 
    SetItemVisible(whichItem254, show629)
}


function SetItemVisible(item whichItem203, boolean show704) returns void{ 
}


function SetItemPlayerBJ(item whichItem279, player whichPlayer144, boolean changeColor105) returns void{ 
    SetItemPlayer(whichItem279, whichPlayer144, changeColor105)
}


function SetItemPlayer(item whichItem326, player whichPlayer292, boolean changeColor257) returns void{ 
}


function SetItemDroppableBJ(item whichItem262, boolean flag199) returns void{ 
    SetItemDroppable(whichItem262, flag199)
}


function SetItemDroppable(item i457, boolean flag147) returns void{ 
}


function SetItemDropOnDeathBJ(item whichItem198, boolean flag592) returns void{ 
    SetItemDropOnDeath(whichItem198, flag592)
}


function SetItemDropOnDeath(item whichItem175, boolean flag177) returns void{ 
}


function SetItemInvulnerableBJ(item whichItem287, boolean flag134) returns void{ 
    SetItemInvulnerable(whichItem287, flag134)
}


function SetItemInvulnerable(item whichItem173, boolean flag233) returns void{ 
}


function UnitInventorySizeBJ(unit whichUnit233) returns integer{ 
    return UnitInventorySize(whichUnit233)
}


function UnitInventorySize(unit whichUnit462) returns integer{ 
}


function UnitInventoryCount(unit whichUnit205) returns integer{ 
    local integer index407
    local integer count243
    index407 = 0
    count243 = 0
    loop {
        if (UnitItemInSlot(whichUnit205, index407) != null){
            count243 = (count243 + 1)
        } else {
        }
        index407 = (index407 + 1)
        exitwhen (index407 >= bj_MAX_INVENTORY225)
    }
    return count243
}


function UnitHasItemOfTypeBJ(unit whichUnit295, integer itemId209) returns boolean{ 
    return (GetInventoryIndexOfItemTypeBJ(whichUnit295, itemId209) > 0)
}


function GetInventoryIndexOfItemTypeBJ(unit whichUnit209, integer itemId862) returns integer{ 
    local integer index214
    local item indexItem324
    null
    null
    index214 = 0
    loop {
        indexItem324 = UnitItemInSlot(whichUnit209, index214)
        if ((indexItem324 != null) and (GetItemTypeId(indexItem324) == itemId862)){
            return (index214 + 1)
        } else {
        }
        index214 = (index214 + 1)
        exitwhen (index214 >= bj_MAX_INVENTORY225)
    }
    return 0
}


function GetItemOfTypeFromUnitBJ(unit whichUnit236, integer itemId103) returns item{ 
    local integer index107
    index107 = GetInventoryIndexOfItemTypeBJ(whichUnit236, itemId103)
    if (index107 == 0){
        return null
    } else {
        return UnitItemInSlot(whichUnit236, (index107 - 1))
    }
}


function UnitItemInSlotBJ(unit whichUnit153, integer itemSlot709) returns item{ 
    return UnitItemInSlot(whichUnit153, (itemSlot709 - 1))
}


function UnitUseItemPointLoc(unit whichUnit227, item whichItem263, location loc348) returns boolean{ 
    return UnitUseItemPoint(whichUnit227, whichItem263, GetLocationX(loc348), GetLocationY(loc348))
}


function UnitUseItemPoint(unit whichUnit441, item whichItem307, real x666, real y258) returns boolean{ 
}


function UnitUseItemDestructable(unit whichUnit170, item whichItem282, widget target225) returns boolean{ 
    return UnitUseItemTarget(whichUnit170, whichItem282, target225)
}


function UnitUseItemTarget(unit whichUnit150, item whichItem663, widget target149) returns boolean{ 
}


function UnitDropItemTargetBJ(unit whichUnit188, item whichItem202, widget target248) returns boolean{ 
    return UnitDropItemTarget(whichUnit188, whichItem202, target248)
}


function UnitDropItemTarget(unit whichUnit426, item whichItem366, widget target735) returns boolean{ 
}


function UnitDropItemSlotBJ(unit whichUnit998, item whichItem136, integer slot320) returns boolean{ 
    return UnitDropItemSlot(whichUnit998, whichItem136, (slot320 - 1))
}


function UnitDropItemSlot(unit whichUnit143, item whichItem312, integer slot319) returns boolean{ 
}


function UnitDropItemPointLoc(unit whichUnit120, item whichItem638, location loc276) returns boolean{ 
    return UnitDropItemPoint(whichUnit120, whichItem638, GetLocationX(loc276), GetLocationY(loc276))
}


function UnitDropItemPoint(unit whichUnit326, item whichItem155, real x221, real y191) returns boolean{ 
}


function UnitDropItemPointBJ(unit whichUnit327, item whichItem889, real x201, real y215) returns boolean{ 
    return UnitDropItemPoint(whichUnit327, whichItem889, x201, y215)
}


function ModifyHeroSkillPoints(unit whichHero177, integer modifyMethod219, integer value329) returns boolean{ 
    if (modifyMethod219 == bj_MODIFYMETHOD_ADD922){
        return UnitModifySkillPoints(whichHero177, value329)
    } else {
        if (modifyMethod219 == bj_MODIFYMETHOD_SUB147){
            return UnitModifySkillPoints(whichHero177, (- value329))
        } else {
            if (modifyMethod219 == bj_MODIFYMETHOD_SET135){
                return UnitModifySkillPoints(whichHero177, (value329 - GetHeroSkillPoints(whichHero177)))
            } else {
                return false
            }
        }
    }
}


function UnitModifySkillPoints(unit whichHero570, integer skillPointDelta553) returns boolean{ 
}


function GetHeroSkillPoints(unit whichHero370) returns integer{ 
}


function ModifyHeroStat(integer whichStat197, unit whichHero196, integer modifyMethod125, integer value430) returns void{ 
    if (modifyMethod125 == bj_MODIFYMETHOD_ADD922){
        SetHeroStat(whichHero196, whichStat197, (GetHeroStatBJ(whichStat197, whichHero196, false) + value430))
    } else {
        if (modifyMethod125 == bj_MODIFYMETHOD_SUB147){
            SetHeroStat(whichHero196, whichStat197, (GetHeroStatBJ(whichStat197, whichHero196, false) - value430))
        } else {
            if (modifyMethod125 == bj_MODIFYMETHOD_SET135){
                SetHeroStat(whichHero196, whichStat197, value430)
            } else {
            }
        }
    }
}


function GetHeroStatBJ(integer whichStat157, unit whichHero155, boolean includeBonuses194) returns integer{ 
    if (whichStat157 == bj_HEROSTAT_STR158){
        return GetHeroStr(whichHero155, includeBonuses194)
    } else {
        if (whichStat157 == bj_HEROSTAT_AGI333){
            return GetHeroAgi(whichHero155, includeBonuses194)
        } else {
            if (whichStat157 == bj_HEROSTAT_INT168){
                return GetHeroInt(whichHero155, includeBonuses194)
            } else {
                return 0
            }
        }
    }
}


function SetHeroStat(unit whichHero748, integer whichStat331, integer value257) returns void{ 
    if (value257 <= 0){
        return %nothing%
    } else {
    }
    if (whichStat331 == bj_HEROSTAT_STR158){
        SetHeroStr(whichHero748, value257, true)
    } else {
        if (whichStat331 == bj_HEROSTAT_AGI333){
            SetHeroAgi(whichHero748, value257, true)
        } else {
            if (whichStat331 == bj_HEROSTAT_INT168){
                SetHeroInt(whichHero748, value257, true)
            } else {
            }
        }
    }
}


function SetHeroStr(unit whichHero199, integer newStr181, boolean permanent134) returns void{ 
}


function SetHeroAgi(unit whichHero150, integer newAgi678, boolean permanent257) returns void{ 
}


function SetHeroInt(unit whichHero102, integer newInt105, boolean permanent447) returns void{ 
}


function GetHeroStr(unit whichHero992, boolean includeBonuses189) returns integer{ 
}


function GetHeroAgi(unit whichHero270, boolean includeBonuses116) returns integer{ 
}


function GetHeroInt(unit whichHero166, boolean includeBonuses565) returns integer{ 
}


function GetPlayerHandicapBJ(player whichPlayer129) returns real{ 
    return (GetPlayerHandicap(whichPlayer129) * 100.)
}


function GetPlayerHandicap(player whichPlayer108) returns real{ 
}


function SetPlayerHandicapBJ(player whichPlayer112, real handicapPercent326) returns void{ 
    SetPlayerHandicap(whichPlayer112, (handicapPercent326 * 0.01))
}


function SetPlayerHandicap(player whichPlayer705, real handicap314) returns void{ 
}


function GetPlayerHandicapXPBJ(player whichPlayer130) returns real{ 
    return (GetPlayerHandicapXP(whichPlayer130) * 100.)
}


function GetPlayerHandicapXP(player whichPlayer230) returns real{ 
}


function SetPlayerHandicapXPBJ(player whichPlayer245, real handicapPercent153) returns void{ 
    SetPlayerHandicapXP(whichPlayer245, (handicapPercent153 * 0.01))
}


function SetPlayerHandicapXP(player whichPlayer214, real handicap647) returns void{ 
}


function SuspendHeroXPBJ(boolean flag153, unit whichHero313) returns void{ 
    SuspendHeroXP(whichHero313, (not flag153))
}


function SuspendHeroXP(unit whichHero161, boolean flag163) returns void{ 
}


function GetLearnedSkillBJ() returns integer{ 
    return GetLearnedSkill()
}


function GetLearnedSkill() returns integer{ 
}


function SetItemPositionLoc(item whichItem299, location loc312) returns void{ 
    SetItemPosition(whichItem299, GetLocationX(loc312), GetLocationY(loc312))
}


function GetLastRemovedItem() returns item{ 
    return bj_lastRemovedItem116
}


function GetLastCreatedItem() returns item{ 
    return bj_lastCreatedItem211
}


function CreateItemLoc(integer itemId213, location loc845) returns item{ 
    bj_lastCreatedItem211 = CreateItem(itemId213, GetLocationX(loc845), GetLocationY(loc845))
    return bj_lastCreatedItem211
}


function UnitRemoveItemFromSlotSwapped(integer itemSlot116, unit whichHero205) returns item{ 
    bj_lastRemovedItem116 = UnitRemoveItemFromSlot(whichHero205, (itemSlot116 - 1))
    return bj_lastRemovedItem116
}


function UnitRemoveItemFromSlot(unit whichUnit275, integer itemSlot855) returns item{ 
}


function UnitRemoveItemSwapped(item whichItem263, unit whichHero619) returns void{ 
    bj_lastRemovedItem116 = whichItem263
    UnitRemoveItem(whichHero619, whichItem263)
}


function UnitAddItemByIdSwapped(integer itemId136, unit whichHero289) returns item{ 
    bj_lastCreatedItem211 = CreateItem(itemId136, GetUnitX(whichHero289), GetUnitY(whichHero289))
    UnitAddItem(whichHero289, bj_lastCreatedItem211)
    return bj_lastCreatedItem211
}


function UnitAddItemSwapped(item whichItem118, unit whichHero945) returns boolean{ 
    return UnitAddItem(whichHero945, whichItem118)
}


function UnitRemoveBuffBJ(integer buffcode122, unit whichUnit102) returns boolean{ 
    return UnitRemoveAbility(whichUnit102, buffcode122)
}


function UnitHasBuffBJ(unit whichUnit317, integer buffcode159) returns boolean{ 
    return (GetUnitAbilityLevel(whichUnit317, buffcode159) > 0)
}


function GetUnitAbilityLevel(unit whichUnit134, integer abilcode749) returns integer{ 
}


function GetUnitAbilityLevelSwapped(integer abilcode705, unit whichUnit181) returns integer{ 
    return GetUnitAbilityLevel(whichUnit181, abilcode705)
}


function SetUnitAbilityLevelSwapped(integer abilcode112, unit whichUnit181, integer level298) returns integer{ 
    return SetUnitAbilityLevel(whichUnit181, abilcode112, level298)
}


function SetUnitAbilityLevel(unit whichUnit206, integer abilcode120, integer level188) returns integer{ 
}


function IncUnitAbilityLevelSwapped(integer abilcode449, unit whichUnit144) returns integer{ 
    return IncUnitAbilityLevel(whichUnit144, abilcode449)
}


function IncUnitAbilityLevel(unit whichUnit259, integer abilcode270) returns integer{ 
}


function DecUnitAbilityLevelSwapped(integer abilcode318, unit whichUnit146) returns integer{ 
    return DecUnitAbilityLevel(whichUnit146, abilcode318)
}


function DecUnitAbilityLevel(unit whichUnit241, integer abilcode197) returns integer{ 
}


function SetHeroLevelBJ(unit whichHero328, integer newLevel260, boolean showEyeCandy211) returns void{ 
    local integer oldLevel295
    oldLevel295 = GetHeroLevel(whichHero328)
    if (newLevel260 > oldLevel295){
        SetHeroLevel(whichHero328, newLevel260, showEyeCandy211)
    } else {
        if (newLevel260 < oldLevel295){
            UnitStripHeroLevel(whichHero328, (oldLevel295 - newLevel260))
        } else {
        }
    }
}


function GetHeroLevel(unit whichHero128) returns integer{ 
}


function SetHeroLevel(unit whichHero129, integer level174, boolean showEyeCandy532) returns void{ 
}


function UnitStripHeroLevel(unit whichHero218, integer howManyLevels227) returns boolean{ 
}


function AddHeroXPSwapped(integer xpToAdd121, unit whichHero177, boolean showEyeCandy234) returns void{ 
    AddHeroXP(whichHero177, xpToAdd121, showEyeCandy234)
}


function AddHeroXP(unit whichHero183, integer xpToAdd361, boolean showEyeCandy672) returns void{ 
}


function SetItemLifeBJ(widget whichWidget213, real life719) returns void{ 
    SetWidgetLife(whichWidget213, life719)
}


function SetWidgetLife(widget whichWidget750, real newLife135) returns void{ 
}


function GetItemLifeBJ(widget whichWidget332) returns real{ 
    return GetWidgetLife(whichWidget332)
}


function GetWidgetLife(widget whichWidget103) returns real{ 
}


function GetItemLoc(item whichItem190) returns location{ 
    return Location(GetItemX(whichItem190), GetItemY(whichItem190))
}


function GetLastCreatedEffectBJ() returns effect{ 
    return bj_lastCreatedEffect124
}


function DestroyEffectBJ(effect whichEffect152) returns void{ 
    DestroyEffect(whichEffect152)
}


function DestroyEffect(effect whichEffect264) returns void{ 
}


function AddSpecialEffectTargetUnitBJ(string attachPointName325, widget targetWidget127, string modelName810) returns effect{ 
    bj_lastCreatedEffect124 = AddSpecialEffectTarget(modelName810, targetWidget127, attachPointName325)
    return bj_lastCreatedEffect124
}


function AddSpecialEffectTarget(string modelName247, widget targetWidget301, string attachPointName772) returns effect{ 
}


function AddSpecialEffectLocBJ(location where180, string modelName414) returns effect{ 
    bj_lastCreatedEffect124 = AddSpecialEffectLoc(modelName414, where180)
    return bj_lastCreatedEffect124
}


function AddSpecialEffectLoc(string modelName268, location where297) returns effect{ 
}


function SetAmbientNightSound(string inLabel228) returns void{ 
    local real ToD106
    null
    if (bj_nightAmbientSound432 != null){
        StopSound(bj_nightAmbientSound432, true, true)
    } else {
    }
    bj_nightAmbientSound432 = CreateMIDISound(inLabel228, 20, 20)
    ToD106 = GetTimeOfDay()
    if ((ToD106 < bj_TOD_DAWN841) or (ToD106 >= bj_TOD_DUSK116)){
        StartSound(bj_nightAmbientSound432)
    } else {
    }
}


function CreateMIDISound(string soundLabel277, integer fadeInRate228, integer fadeOutRate145) returns sound{ 
}


function SetAmbientDaySound(string inLabel525) returns void{ 
    local real ToD517
    null
    if (bj_dayAmbientSound246 != null){
        StopSound(bj_dayAmbientSound246, true, true)
    } else {
    }
    bj_dayAmbientSound246 = CreateMIDISound(inLabel525, 20, 20)
    ToD517 = GetTimeOfDay()
    if ((ToD517 >= bj_TOD_DAWN841) and (ToD517 < bj_TOD_DUSK116)){
        StartSound(bj_dayAmbientSound246)
    } else {
    }
}


function VolumeGroupSetVolume(volumegroup vgroup118, real scale500) returns void{ 
}


function SetStackedSoundBJ(boolean add349, sound soundHandle135, rect r296) returns void{ 
    local real width842
    local real height481
    width842 = (GetRectMaxX(r296) - GetRectMinX(r296))
    height481 = (GetRectMaxY(r296) - GetRectMinY(r296))
    SetSoundPosition(soundHandle135, GetRectCenterX(r296), GetRectCenterY(r296), 0.)
    if add349{
        RegisterStackedSound(soundHandle135, true, width842, height481)
    } else {
        UnregisterStackedSound(soundHandle135, true, width842, height481)
    }
}


function SetSoundPosition(sound soundHandle239, real x831, real y323, real z268) returns void{ 
}


function RegisterStackedSound(sound soundHandle305, boolean byPosition219, real rectwidth239, real rectheight226) returns void{ 
}


function UnregisterStackedSound(sound soundHandle191, boolean byPosition326, real rectwidth177, real rectheight249) returns void{ 
}


function ClearMapMusicBJ() returns void{ 
    ClearMapMusic()
}


function ClearMapMusic() returns void{ 
}


function SetMapMusicRandomBJ(string musicName309) returns void{ 
    SetMapMusic(musicName309, true, 0)
}


function SetMapMusic(string musicName330, boolean random372, integer index206) returns void{ 
}


function SetMapMusicIndexedBJ(string musicName372, integer index271) returns void{ 
    SetMapMusic(musicName372, false, index271)
}


function TriggerWaitForSound(sound s316, real offset248) returns void{ 
}


function GetSoundIsPlayingBJ(sound soundHandle758) returns boolean{ 
    return (GetSoundIsLoading(soundHandle758) or GetSoundIsPlaying(soundHandle758))
}


function GetSoundIsLoading(sound soundHandle225) returns boolean{ 
}


function GetSoundIsPlaying(sound soundHandle114) returns boolean{ 
}


function VolumeGroupResetBJ() returns void{ 
    if bj_gameStarted865{
        VolumeGroupResetImmediateBJ()
    } else {
        TimerStart(bj_volumeGroupsTimer329, bj_GAME_STARTED_THRESHOLD324, false, function VolumeGroupResetImmediateBJ)
    }
}


function VolumeGroupResetImmediateBJ() returns void{ 
    VolumeGroupReset()
}


function SetSpeechVolumeGroupsBJ() returns void{ 
    if bj_gameStarted865{
        SetSpeechVolumeGroupsImmediateBJ()
    } else {
        TimerStart(bj_volumeGroupsTimer329, bj_GAME_STARTED_THRESHOLD324, false, function SetSpeechVolumeGroupsImmediateBJ)
    }
}


function SetSpeechVolumeGroupsImmediateBJ() returns void{ 
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_UNITMOVEMENT253, bj_SPEECH_VOLUME_UNITMOVEMENT313)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_UNITSOUNDS602, bj_SPEECH_VOLUME_UNITSOUNDS284)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_COMBAT238, bj_SPEECH_VOLUME_COMBAT281)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_SPELLS178, bj_SPEECH_VOLUME_SPELLS313)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_UI152, bj_SPEECH_VOLUME_UI588)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_MUSIC135, bj_SPEECH_VOLUME_MUSIC184)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_AMBIENTSOUNDS209, bj_SPEECH_VOLUME_AMBIENTSOUNDS326)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_FIRE302, bj_SPEECH_VOLUME_FIRE578)
}


function SetCineModeVolumeGroupsImmediateBJ() returns void{ 
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_UNITMOVEMENT253, bj_CINEMODE_VOLUME_UNITMOVEMENT340)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_UNITSOUNDS602, bj_CINEMODE_VOLUME_UNITSOUNDS116)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_COMBAT238, bj_CINEMODE_VOLUME_COMBAT120)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_SPELLS178, bj_CINEMODE_VOLUME_SPELLS288)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_UI152, bj_CINEMODE_VOLUME_UI873)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_MUSIC135, bj_CINEMODE_VOLUME_MUSIC116)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_AMBIENTSOUNDS209, bj_CINEMODE_VOLUME_AMBIENTSOUNDS244)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_FIRE302, bj_CINEMODE_VOLUME_FIRE292)
}


function VolumeGroupSetVolumeBJ(volumegroup vgroup231, real percent103) returns void{ 
    VolumeGroupSetVolume(vgroup231, (percent103 * 0.01))
}


function GetLastPlayedMusic() returns string{ 
    return bj_lastPlayedMusic191
}


function GetLastPlayedSound() returns sound{ 
    return bj_lastPlayedSound283
}


function GetSoundFileDurationBJ(string musicFileName278) returns real{ 
    return (I2R(GetSoundFileDuration(musicFileName278)) * 0.001)
}


function GetSoundFileDuration(string musicFileName310) returns integer{ 
}


function GetSoundDuration(sound soundHandle665) returns integer{ 
}


function SetMusicVolumeBJ(real volumePercent261) returns void{ 
    SetMusicVolume(PercentToInt(volumePercent261, 127))
}


function PercentToInt(real percentage122, integer max142) returns integer{ 
    local integer result622
    result622 = R2I(((percentage122 * I2R(max142)) * 0.01))
    if (result622 < 0){
        result622 = 0
    } else {
        if (result622 > max142){
            result622 = max142
        } else {
        }
    }
    return result622
}


function SetMusicVolume(integer volume103) returns void{ 
}


function ResumeMusicBJ() returns void{ 
    ResumeMusic()
}


function ResumeMusic() returns void{ 
}


function StopMusicBJ(boolean fadeOut132) returns void{ 
    StopMusic(fadeOut132)
}


function StopMusic(boolean fadeOut808) returns void{ 
}


function EndThematicMusicBJ() returns void{ 
    EndThematicMusic()
}


function SetThematicMusicOffsetBJ(real newOffset117) returns void{ 
    SetThematicMusicPlayPosition(R2I((newOffset117 * 1000.)))
}


function SetThematicMusicPlayPosition(integer millisecs140) returns void{ 
}


function PlayThematicMusicExBJ(string musicName310, real startingOffset294) returns void{ 
    PlayThematicMusicEx(musicName310, R2I((startingOffset294 * 1000.)))
}


function PlayThematicMusicEx(string musicFileName889, integer frommsecs138) returns void{ 
}


function PlayThematicMusicBJ(string musicName261) returns void{ 
    PlayThematicMusic(musicName261)
}


function PlayThematicMusic(string musicFileName281) returns void{ 
}


function SetMusicOffsetBJ(real newOffset198) returns void{ 
    SetMusicPlayPosition(R2I((newOffset198 * 1000.)))
}


function SetMusicPlayPosition(integer millisecs187) returns void{ 
}


function PlayMusicExBJ(string musicFileName260, real startingOffset310, real fadeInTime466) returns void{ 
    bj_lastPlayedMusic191 = musicFileName260
    PlayMusicEx(musicFileName260, R2I((startingOffset310 * 1000.)), R2I((fadeInTime466 * 1000.)))
}


function PlayMusicEx(string musicName287, integer frommsecs326, integer fadeinmsecs132) returns void{ 
}


function PlayMusicBJ(string musicFileName166) returns void{ 
    bj_lastPlayedMusic191 = musicFileName166
    PlayMusic(musicFileName166)
}


function PlayMusic(string musicName141) returns void{ 
}


function PlaySoundFromOffsetBJ(sound soundHandle711, real volumePercent187, real startingOffset210) returns void{ 
    SetSoundVolumeBJ(soundHandle711, volumePercent187)
    PlaySoundBJ(soundHandle711)
    SetSoundOffsetBJ(startingOffset210, soundHandle711)
}


function SetSoundVolumeBJ(sound soundHandle260, real volumePercent103) returns void{ 
    SetSoundVolume(soundHandle260, PercentToInt(volumePercent103, 127))
}


function SetSoundOffsetBJ(real newOffset774, sound soundHandle470) returns void{ 
    SetSoundPlayPosition(soundHandle470, R2I((newOffset774 * 1000.)))
}


function PlaySoundOnUnitBJ(sound soundHandle719, real volumePercent115, unit whichUnit167) returns void{ 
    AttachSoundToUnitBJ(soundHandle719, whichUnit167)
    SetSoundVolumeBJ(soundHandle719, volumePercent115)
    PlaySoundBJ(soundHandle719)
}


function AttachSoundToUnitBJ(sound soundHandle260, unit whichUnit265) returns void{ 
    AttachSoundToUnit(soundHandle260, whichUnit265)
}


function PlaySoundAtPointBJ(sound soundHandle298, real volumePercent780, location loc241, real z392) returns void{ 
    SetSoundPositionLocBJ(soundHandle298, loc241, z392)
    SetSoundVolumeBJ(soundHandle298, volumePercent780)
    PlaySoundBJ(soundHandle298)
}


function SetSoundPositionLocBJ(sound soundHandle262, location loc994, real z219) returns void{ 
    SetSoundPosition(soundHandle262, GetLocationX(loc994), GetLocationY(loc994), z219)
}


function KillSoundWhenDoneBJ(sound soundHandle287) returns void{ 
    KillSoundWhenDone(soundHandle287)
}


function KillSoundWhenDone(sound soundHandle158) returns void{ 
}


function SetSoundConeAnglesBJ(sound soundHandle170, real inside669, real outside174, real outsideVolumePercent138) returns void{ 
    SetSoundConeAngles(soundHandle170, inside669, outside174, PercentToInt(outsideVolumePercent138, 127))
}


function SetSoundConeAngles(sound soundHandle222, real inside247, real outside308, integer outsideVolume305) returns void{ 
}


function AttachSoundToUnit(sound soundHandle210, unit whichUnit253) returns void{ 
}


function SetSoundPitchBJ(sound soundHandle117, real pitch742) returns void{ 
    SetSoundPitch(soundHandle117, pitch742)
}


function SetSoundPitch(sound soundHandle302, real pitch215) returns void{ 
}


function SetSoundDistanceCutoffBJ(sound soundHandle782, real cutoff169) returns void{ 
    SetSoundDistanceCutoff(soundHandle782, cutoff169)
}


function SetSoundDistanceCutoff(sound soundHandle175, real cutoff298) returns void{ 
}


function SetSoundPlayPosition(sound soundHandle146, integer millisecs231) returns void{ 
}


function SetSoundVolume(sound soundHandle317, integer volume220) returns void{ 
}


function GetLastCreatedUbersplat() returns ubersplat{ 
    return bj_lastCreatedUbersplat269
}


function ShowUbersplatBJ(boolean flag300, ubersplat whichSplat502) returns void{ 
    ShowUbersplat(whichSplat502, flag300)
}


function ShowUbersplat(ubersplat whichSplat224, boolean flag148) returns void{ 
}


function CreateUbersplatBJ(location where212, string name297, real red130, real green158, real blue325, real alpha554, boolean forcePaused135, boolean noBirthTime797) returns ubersplat{ 
    bj_lastCreatedUbersplat269 = CreateUbersplat(GetLocationX(where212), GetLocationY(where212), name297, PercentTo255(red130), PercentTo255(green158), PercentTo255(blue325), PercentTo255((100.0 - alpha554)), forcePaused135, noBirthTime797)
    return bj_lastCreatedUbersplat269
}


function CreateUbersplat(real x304, real y295, string name606, integer red140, integer green318, integer blue152, integer alpha310, boolean forcePaused116, boolean noBirthTime835) returns ubersplat{ 
}


function GetLastCreatedImage() returns image{ 
    return bj_lastCreatedImage327
}


function SetImageColorBJ(image whichImage203, real red205, real green554, real blue322, real alpha139) returns void{ 
    SetImageColor(whichImage203, PercentTo255(red205), PercentTo255(green554), PercentTo255(blue322), PercentTo255((100.0 - alpha139)))
}


function SetImageColor(image whichImage185, integer red115, integer green139, integer blue328, integer alpha287) returns void{ 
}


function SetImagePositionBJ(image whichImage274, location where130, real zOffset667) returns void{ 
    SetImagePosition(whichImage274, GetLocationX(where130), GetLocationY(where130), zOffset667)
}


function SetImagePosition(image whichImage325, real x150, real y956, real z112) returns void{ 
}


function ShowImageBJ(boolean flag109, image whichImage542) returns void{ 
    ShowImage(whichImage542, flag109)
}


function ShowImage(image whichImage328, boolean flag187) returns void{ 
}


function CreateImageBJ(string file297, real size301, location where163, real zOffset326, integer imageType393) returns image{ 
    bj_lastCreatedImage327 = CreateImage(file297, size301, size301, size301, GetLocationX(where163), GetLocationY(where163), zOffset326, 0., 0., 0., imageType393)
    return bj_lastCreatedImage327
}


function CreateImage(string file272, real sizeX130, real sizeY298, real sizeZ250, real posX328, real posY143, real posZ307, real originX249, real originY288, real originZ250, integer imageType187) returns image{ 
}


function AddUnitAnimationPropertiesBJ(boolean add248, string animProperties320, unit whichUnit316) returns void{ 
    AddUnitAnimationProperties(whichUnit316, animProperties320, add248)
}


function AddUnitAnimationProperties(unit whichUnit211, string animProperties297, boolean add254) returns void{ 
}


function SetDoodadAnimationRectBJ(string animName127, integer doodadID134, rect r126) returns void{ 
    SetDoodadAnimationRect(r126, doodadID134, animName127, false)
}


function SetDoodadAnimationRect(rect r100, integer doodadID269, string animName161, boolean animRandom204) returns void{ 
}


function SetDoodadAnimationBJ(string animName220, integer doodadID586, real radius173, location center148) returns void{ 
    SetDoodadAnimation(GetLocationX(center148), GetLocationY(center148), radius173, doodadID586, false, animName220, false)
}


function SetDoodadAnimation(real x263, real y121, real radius866, integer doodadID466, boolean nearestOnly205, string animName159, boolean animRandom146) returns void{ 
}


function ResetTerrainFogBJ() returns void{ 
    ResetTerrainFog()
}


function ResetTerrainFog() returns void{ 
}


function SetTerrainFogExBJ(integer style249, real zstart329, real zend237, real density905, real red111, real green330, real blue305) returns void{ 
    SetTerrainFogEx(style249, zstart329, zend237, density905, (red111 * 0.01), (green330 * 0.01), (blue305 * 0.01))
}


function SetTerrainFogEx(integer style103, real zstart276, real zend102, real density114, real red293, real green199, real blue124) returns void{ 
}


function UseTimeOfDayBJ(boolean flag493) returns void{ 
    SuspendTimeOfDay((not flag493))
}


function SuspendTimeOfDay(boolean b176) returns void{ 
}


function FogMaskEnableOff() returns void{ 
    FogMaskEnable(false)
}


function FogMaskEnableOn() returns void{ 
    FogMaskEnable(true)
}


function FogEnableOff() returns void{ 
    FogEnable(false)
}


function FogEnableOn() returns void{ 
    FogEnable(true)
}


function GetLastCreatedFogModifier() returns fogmodifier{ 
    return bj_lastCreatedFogModifier273
}


function CreateFogModifierRadiusLocBJ(boolean enabled296, player whichPlayer280, fogstate whichFogState533, location center112, real radius315) returns fogmodifier{ 
    bj_lastCreatedFogModifier273 = CreateFogModifierRadiusLoc(whichPlayer280, whichFogState533, center112, radius315, true, false)
    if enabled296{
        FogModifierStart(bj_lastCreatedFogModifier273)
    } else {
    }
    return bj_lastCreatedFogModifier273
}


function CreateFogModifierRadiusLoc(player forWhichPlayer277, fogstate whichState178, location center237, real radius277, boolean useSharedVision705, boolean afterUnits387) returns fogmodifier{ 
}


function FogModifierStart(fogmodifier whichFogModifier226) returns void{ 
}


function CreateFogModifierRectBJ(boolean enabled651, player whichPlayer804, fogstate whichFogState230, rect r259) returns fogmodifier{ 
    bj_lastCreatedFogModifier273 = CreateFogModifierRect(whichPlayer804, whichFogState230, r259, true, false)
    if enabled651{
        FogModifierStart(bj_lastCreatedFogModifier273)
    } else {
    }
    return bj_lastCreatedFogModifier273
}


function CreateFogModifierRect(player forWhichPlayer258, fogstate whichState257, rect where276, boolean useSharedVision148, boolean afterUnits246) returns fogmodifier{ 
}


function CreateFogModifierRadiusLocSimple(player whichPlayer183, fogstate whichFogState242, location center233, real radius208, boolean afterUnits243) returns fogmodifier{ 
    bj_lastCreatedFogModifier273 = CreateFogModifierRadiusLoc(whichPlayer183, whichFogState242, center233, radius208, true, afterUnits243)
    return bj_lastCreatedFogModifier273
}


function CreateFogModifierRectSimple(player whichPlayer410, fogstate whichFogState260, rect r116, boolean afterUnits204) returns fogmodifier{ 
    bj_lastCreatedFogModifier273 = CreateFogModifierRect(whichPlayer410, whichFogState260, r116, true, afterUnits204)
    return bj_lastCreatedFogModifier273
}


function SetWaterBaseColorBJ(real red125, real green832, real blue272, real transparency109) returns void{ 
    SetWaterBaseColor(PercentTo255(red125), PercentTo255(green832), PercentTo255(blue272), PercentTo255((100.0 - transparency109)))
}


function SetWaterBaseColor(integer red315, integer green255, integer blue100, integer alpha450) returns void{ 
}


function SetTerrainPathableBJ(location where264, pathingtype t133, boolean flag375) returns void{ 
    SetTerrainPathable(GetLocationX(where264), GetLocationY(where264), t133, flag375)
}


function SetTerrainPathable(real x531, real y214, pathingtype t483, boolean flag152) returns void{ 
}


function IsTerrainPathableBJ(location where734, pathingtype t245) returns boolean{ 
    return IsTerrainPathable(GetLocationX(where734), GetLocationY(where734), t245)
}


function IsTerrainPathable(real x221, real y128, pathingtype t278) returns boolean{ 
}


function SetTerrainTypeBJ(location where255, integer terrainType116, integer variation786, integer area552, integer shape129) returns void{ 
    SetTerrainType(GetLocationX(where255), GetLocationY(where255), terrainType116, variation786, area552, shape129)
}


function SetTerrainType(real x166, real y212, integer terrainType248, integer variation880, integer area228, integer shape119) returns void{ 
}


function GetTerrainVarianceBJ(location where264) returns integer{ 
    return GetTerrainVariance(GetLocationX(where264), GetLocationY(where264))
}


function GetTerrainVariance(real x247, real y577) returns integer{ 
}


function GetTerrainTypeBJ(location where136) returns integer{ 
    return GetTerrainType(GetLocationX(where136), GetLocationY(where136))
}


function GetTerrainType(real x173, real y249) returns integer{ 
}


function GetTerrainCliffLevelBJ(location where613) returns integer{ 
    return GetTerrainCliffLevel(GetLocationX(where613), GetLocationY(where613))
}


function GetTerrainCliffLevel(real x676, real y660) returns integer{ 
}


function GetAbilitySoundBJ(integer abilcode258, soundtype t136) returns string{ 
    return GetAbilitySoundById(abilcode258, t136)
}


function GetAbilitySoundById(integer abilityId635, soundtype t111) returns string{ 
}


function GetAbilityEffectBJ(integer abilcode298, effecttype t227, integer index278) returns string{ 
    return GetAbilityEffectById(abilcode298, t227, index278)
}


function GetAbilityEffectById(integer abilityId270, effecttype t195, integer index253) returns string{ 
}


function GetLastCreatedLightningBJ() returns lightning{ 
    return bj_lastCreatedLightning682
}


function SetLightningColorBJ(lightning whichBolt179, real r282, real g282, real b172, real a277) returns boolean{ 
    return SetLightningColor(whichBolt179, r282, g282, b172, a277)
}


function SetLightningColor(lightning whichBolt802, real r841, real g294, real b113, real a226) returns boolean{ 
}


function GetLightningColorBBJ(lightning whichBolt162) returns real{ 
    return GetLightningColorB(whichBolt162)
}


function GetLightningColorB(lightning whichBolt135) returns real{ 
}


function GetLightningColorGBJ(lightning whichBolt226) returns real{ 
    return GetLightningColorG(whichBolt226)
}


function GetLightningColorG(lightning whichBolt155) returns real{ 
}


function GetLightningColorRBJ(lightning whichBolt230) returns real{ 
    return GetLightningColorR(whichBolt230)
}


function GetLightningColorR(lightning whichBolt315) returns real{ 
}


function GetLightningColorABJ(lightning whichBolt353) returns real{ 
    return GetLightningColorA(whichBolt353)
}


function GetLightningColorA(lightning whichBolt258) returns real{ 
}


function MoveLightningLoc(lightning whichBolt172, location where1448, location where2317) returns boolean{ 
    return MoveLightningEx(whichBolt172, true, GetLocationX(where1448), GetLocationY(where1448), GetLocationZ(where1448), GetLocationX(where2317), GetLocationY(where2317), GetLocationZ(where2317))
}


function GetLocationZ(location whichLocation289) returns real{ 
}


function MoveLightningEx(lightning whichBolt547, boolean checkVisibility848, real x1121, real y1279, real z1146, real x2132, real y2233, real z2570) returns boolean{ 
}


function DestroyLightningBJ(lightning whichBolt279) returns boolean{ 
    return DestroyLightning(whichBolt279)
}


function DestroyLightning(lightning whichBolt143) returns boolean{ 
}


function AddLightningLoc(string codeName240, location where1175, location where2166) returns lightning{ 
    bj_lastCreatedLightning682 = AddLightningEx(codeName240, true, GetLocationX(where1175), GetLocationY(where1175), GetLocationZ(where1175), GetLocationX(where2166), GetLocationY(where2166), GetLocationZ(where2166))
    return bj_lastCreatedLightning682
}


function AddLightningEx(string codeName264, boolean checkVisibility846, real x1328, real y1288, real z1115, real x2316, real y2289, real z2254) returns lightning{ 
}


function GetLastCreatedTerrainDeformation() returns terraindeformation{ 
    return bj_lastCreatedTerrainDeformation177
}


function TerrainDeformationStopBJ(terraindeformation deformation293, real duration154) returns void{ 
    TerrainDeformStop(deformation293, R2I((duration154 * 1000.)))
}


function TerrainDeformStop(terraindeformation deformation122, integer duration214) returns void{ 
}


function TerrainDeformationRandomBJ(real duration128, location where302, real radius313, real minDelta109, real maxDelta985, real updateInterval255) returns terraindeformation{ 
    bj_lastCreatedTerrainDeformation177 = TerrainDeformRandom(GetLocationX(where302), GetLocationY(where302), radius313, minDelta109, maxDelta985, R2I((duration128 * 1000.)), R2I((updateInterval255 * 1000.)))
    return bj_lastCreatedTerrainDeformation177
}


function TerrainDeformRandom(real x144, real y501, real radius129, real minDelta693, real maxDelta132, integer duration207, integer updateInterval780) returns terraindeformation{ 
}


function TerrainDeformationWaveBJ(real duration149, location source270, location target250, real radius236, real depth340, real trailDelay267) returns terraindeformation{ 
    local real distance404
    local real dirX256
    local real dirY299
    local real speed175
    null
    null
    null
    null
    distance404 = DistanceBetweenPoints(source270, target250)
    if ((distance404 == 0.) or (duration149 <= 0.)){
        return null
    } else {
    }
    dirX256 = ((GetLocationX(target250) - GetLocationX(source270)) / distance404)
    dirY299 = ((GetLocationY(target250) - GetLocationY(source270)) / distance404)
    speed175 = (distance404 / duration149)
    bj_lastCreatedTerrainDeformation177 = TerrainDeformWave(GetLocationX(source270), GetLocationY(source270), dirX256, dirY299, distance404, speed175, radius236, depth340, R2I((trailDelay267 * 1000.)), 1)
    return bj_lastCreatedTerrainDeformation177
}


function TerrainDeformWave(real x335, real y126, real dirX289, real dirY148, real distance171, real speed311, real radius141, real depth144, integer trailTime321, integer count267) returns terraindeformation{ 
}


function TerrainDeformationRippleBJ(real duration262, boolean limitNeg272, location where820, real startRadius284, real endRadius223, real depth314, real wavePeriod179, real waveWidth878) returns terraindeformation{ 
    local real spaceWave498
    local real timeWave304
    local real radiusRatio859
    null
    null
    null
    if (((endRadius223 <= 0.) or (waveWidth878 <= 0.)) or (wavePeriod179 <= 0.)){
        return null
    } else {
    }
    timeWave304 = ((2.0 * duration262) / wavePeriod179)
    spaceWave498 = ((2.0 * endRadius223) / waveWidth878)
    radiusRatio859 = (startRadius284 / endRadius223)
    bj_lastCreatedTerrainDeformation177 = TerrainDeformRipple(GetLocationX(where820), GetLocationY(where820), endRadius223, depth314, R2I((duration262 * 1000.)), 1, spaceWave498, timeWave304, radiusRatio859, limitNeg272)
    return bj_lastCreatedTerrainDeformation177
}


function TerrainDeformRipple(real x317, real y766, real radius218, real depth307, integer duration288, integer count247, real spaceWaves527, real timeWaves321, real radiusStartPct664, boolean limitNeg949) returns terraindeformation{ 
}


function TerrainDeformationCraterBJ(real duration201, boolean permanent239, location where119, real radius249, real depth209) returns terraindeformation{ 
    bj_lastCreatedTerrainDeformation177 = TerrainDeformCrater(GetLocationX(where119), GetLocationY(where119), radius249, depth209, R2I((duration201 * 1000.)), permanent239)
    return bj_lastCreatedTerrainDeformation177
}


function TerrainDeformCrater(real x201, real y159, real radius318, real depth151, integer duration280, boolean permanent251) returns terraindeformation{ 
}


function RemoveWeatherEffectBJ(weathereffect whichWeatherEffect848) returns void{ 
    RemoveWeatherEffect(whichWeatherEffect848)
}


function RemoveWeatherEffect(weathereffect whichEffect227) returns void{ 
}


function GetLastCreatedWeatherEffect() returns weathereffect{ 
    return bj_lastCreatedWeatherEffect152
}


function AddWeatherEffectSaveLast(rect where219, integer effectID196) returns weathereffect{ 
    bj_lastCreatedWeatherEffect152 = AddWeatherEffect(where219, effectID196)
    return bj_lastCreatedWeatherEffect152
}


function AddWeatherEffect(rect where241, integer effectID241) returns weathereffect{ 
}


function TriggerRegisterDestDeathInRegionEvent(trigger trig170, rect r206) returns void{ 
    bj_destInRegionDiesTrig581 = trig170
    bj_destInRegionDiesCount223 = 0
    EnumDestructablesInRect(r206, null, function RegisterDestDeathInRegionEnum)
}


function RegisterDestDeathInRegionEnum() returns void{ 
    bj_destInRegionDiesCount223 = (bj_destInRegionDiesCount223 + 1)
    if (bj_destInRegionDiesCount223 <= bj_MAX_DEST_IN_REGION_EVENTS116){
        TriggerRegisterDeathEvent(bj_destInRegionDiesTrig581, GetEnumDestructable())
    } else {
    }
}


function TriggerRegisterDeathEvent(trigger whichTrigger191, widget whichWidget200) returns event{ 
}


function TriggerRegisterGameSavedEventBJ(trigger trig254) returns event{ 
    return TriggerRegisterGameEvent(trig254, EVENT_GAME_SAVE359)
}


function TriggerRegisterGameLoadedEventBJ(trigger trig210) returns event{ 
    return TriggerRegisterGameEvent(trig210, EVENT_GAME_LOADED331)
}


function TriggerRegisterBuildSubmenuEventBJ(trigger trig698) returns event{ 
    return TriggerRegisterGameEvent(trig698, EVENT_GAME_BUILD_SUBMENU645)
}


function TriggerRegisterShowSkillEventBJ(trigger trig220) returns event{ 
    return TriggerRegisterGameEvent(trig220, EVENT_GAME_SHOW_SKILL242)
}


function TriggerRegisterDialogEventBJ(trigger trig245, dialog whichDialog160) returns event{ 
    return TriggerRegisterDialogEvent(trig245, whichDialog160)
}


function TriggerRegisterDialogEvent(trigger whichTrigger271, dialog whichDialog242) returns event{ 
}


function TriggerRegisterUnitManaEvent(trigger trig269, unit whichUnit251, limitop opcode300, real limitval222) returns event{ 
    return TriggerRegisterUnitStateEvent(trig269, whichUnit251, UNIT_STATE_MANA273, opcode300, limitval222)
}


function TriggerRegisterUnitStateEvent(trigger whichTrigger178, unit whichUnit121, unitstate whichState420, limitop opcode255, real limitval107) returns event{ 
}


function TriggerRegisterUnitLifeEvent(trigger trig971, unit whichUnit281, limitop opcode156, real limitval313) returns event{ 
    return TriggerRegisterUnitStateEvent(trig971, whichUnit281, UNIT_STATE_LIFE161, opcode156, limitval313)
}


function TriggerRegisterUnitInRangeSimple(trigger trig182, real range120, unit whichUnit208) returns event{ 
    return TriggerRegisterUnitInRange(trig182, whichUnit208, range120, null)
}


function TriggerRegisterUnitInRange(trigger whichTrigger143, unit whichUnit222, real range238, boolexpr filter333) returns event{ 
}


function TriggerRegisterDistanceBetweenUnits(trigger trig696, unit whichUnit219, boolexpr condition204, real range130) returns event{ 
    return TriggerRegisterUnitInRange(trig696, whichUnit219, range130, condition204)
}


function TriggerRegisterLeaveRectSimple(trigger trig108, rect r224) returns event{ 
    local region rectRegion921
    rectRegion921 = CreateRegion()
    RegionAddRect(rectRegion921, r224)
    return TriggerRegisterLeaveRegion(trig108, rectRegion921, null)
}


function CreateRegion() returns region{ 
}


function RegionAddRect(region whichRegion493, rect r239) returns void{ 
}


function TriggerRegisterLeaveRegion(trigger whichTrigger168, region whichRegion175, boolexpr filter126) returns event{ 
}


function TriggerRegisterEnterRectSimple(trigger trig661, rect r307) returns event{ 
    local region rectRegion209
    rectRegion209 = CreateRegion()
    RegionAddRect(rectRegion209, r307)
    return TriggerRegisterEnterRegion(trig661, rectRegion209, null)
}


function TriggerRegisterEnterRegion(trigger whichTrigger102, region whichRegion492, boolexpr filter208) returns event{ 
}


function TriggerRegisterLeaveRegionSimple(trigger trig930, region whichRegion656) returns event{ 
    return TriggerRegisterLeaveRegion(trig930, whichRegion656, null)
}


function TriggerRegisterEnterRegionSimple(trigger trig232, region whichRegion126) returns event{ 
    return TriggerRegisterEnterRegion(trig232, whichRegion126, null)
}


function TriggerRegisterGameStateEventTimeOfDay(trigger trig661, limitop opcode316, real limitval971) returns event{ 
    return TriggerRegisterGameStateEvent(trig661, GAME_STATE_TIME_OF_DAY906, opcode316, limitval971)
}


function TriggerRegisterPlayerEventEndCinematic(trigger trig142, player whichPlayer777) returns event{ 
    return TriggerRegisterPlayerEvent(trig142, whichPlayer777, EVENT_PLAYER_END_CINEMATIC128)
}


function TriggerRegisterPlayerEventAllianceChanged(trigger trig112, player whichPlayer191) returns event{ 
    return TriggerRegisterPlayerEvent(trig112, whichPlayer191, EVENT_PLAYER_ALLIANCE_CHANGED784)
}


function TriggerRegisterPlayerEventLeave(trigger trig422, player whichPlayer168) returns event{ 
    return TriggerRegisterPlayerEvent(trig422, whichPlayer168, EVENT_PLAYER_LEAVE148)
}


function TriggerRegisterPlayerEventDefeat(trigger trig119, player whichPlayer149) returns event{ 
    return TriggerRegisterPlayerEvent(trig119, whichPlayer149, EVENT_PLAYER_DEFEAT331)
}


function TriggerRegisterPlayerEventVictory(trigger trig507, player whichPlayer276) returns event{ 
    return TriggerRegisterPlayerEvent(trig507, whichPlayer276, EVENT_PLAYER_VICTORY164)
}


function TriggerRegisterPlayerKeyEventBJ(trigger trig304, player whichPlayer742, integer keType130, integer keKey169) returns event{ 
    if (keType130 == bj_KEYEVENTTYPE_DEPRESS214){
        if (keKey169 == bj_KEYEVENTKEY_LEFT247){
            return TriggerRegisterPlayerEvent(trig304, whichPlayer742, EVENT_PLAYER_ARROW_LEFT_DOWN227)
        } else {
            if (keKey169 == bj_KEYEVENTKEY_RIGHT130){
                return TriggerRegisterPlayerEvent(trig304, whichPlayer742, EVENT_PLAYER_ARROW_RIGHT_DOWN194)
            } else {
                if (keKey169 == bj_KEYEVENTKEY_DOWN126){
                    return TriggerRegisterPlayerEvent(trig304, whichPlayer742, EVENT_PLAYER_ARROW_DOWN_DOWN612)
                } else {
                    if (keKey169 == bj_KEYEVENTKEY_UP197){
                        return TriggerRegisterPlayerEvent(trig304, whichPlayer742, EVENT_PLAYER_ARROW_UP_DOWN231)
                    } else {
                        return null
                    }
                }
            }
        }
    } else {
        if (keType130 == bj_KEYEVENTTYPE_RELEASE305){
            if (keKey169 == bj_KEYEVENTKEY_LEFT247){
                return TriggerRegisterPlayerEvent(trig304, whichPlayer742, EVENT_PLAYER_ARROW_LEFT_UP138)
            } else {
                if (keKey169 == bj_KEYEVENTKEY_RIGHT130){
                    return TriggerRegisterPlayerEvent(trig304, whichPlayer742, EVENT_PLAYER_ARROW_RIGHT_UP313)
                } else {
                    if (keKey169 == bj_KEYEVENTKEY_DOWN126){
                        return TriggerRegisterPlayerEvent(trig304, whichPlayer742, EVENT_PLAYER_ARROW_DOWN_UP152)
                    } else {
                        if (keKey169 == bj_KEYEVENTKEY_UP197){
                            return TriggerRegisterPlayerEvent(trig304, whichPlayer742, EVENT_PLAYER_ARROW_UP_UP928)
                        } else {
                            return null
                        }
                    }
                }
            }
        } else {
            return null
        }
    }
}


function TriggerRegisterPlayerSelectionEventBJ(trigger trig301, player whichPlayer252, boolean selected118) returns event{ 
    if selected118{
        return TriggerRegisterPlayerUnitEvent(trig301, whichPlayer252, EVENT_PLAYER_UNIT_SELECTED733, null)
    } else {
        return TriggerRegisterPlayerUnitEvent(trig301, whichPlayer252, EVENT_PLAYER_UNIT_DESELECTED273, null)
    }
}


function TriggerRegisterAnyUnitEventBJ(trigger trig611, playerunitevent whichEvent285) returns void{ 
    local integer index332
    null
    index332 = 0
    loop {
        TriggerRegisterPlayerUnitEvent(trig611, Player(index332), whichEvent285, null)
        index332 = (index332 + 1)
        exitwhen (index332 == bj_MAX_PLAYER_SLOTS129)
    }
}


function TriggerRegisterPlayerUnitEventSimple(trigger trig318, player whichPlayer177, playerunitevent whichEvent163) returns event{ 
    return TriggerRegisterPlayerUnitEvent(trig318, whichPlayer177, whichEvent163, null)
}


function TriggerRegisterTimerExpireEventBJ(trigger trig419, timer t296) returns event{ 
    return TriggerRegisterTimerExpireEvent(trig419, t296)
}


function TriggerRegisterTimerEventSingle(trigger trig171, real timeout280) returns event{ 
    return TriggerRegisterTimerEvent(trig171, timeout280, false)
}


function TriggerRegisterTimerEvent(trigger whichTrigger176, real timeout139, boolean periodic180) returns event{ 
}


function TriggerRegisterTimerEventPeriodic(trigger trig796, real timeout163) returns event{ 
    return TriggerRegisterTimerEvent(trig796, timeout163, true)
}


function StringHashBJ(string s188) returns integer{ 
    return StringHash(s188)
}


function StringHash(string s213) returns integer{ 
}


function GetHandleIdBJ(handle h249) returns integer{ 
    return GetHandleId(h249)
}


function GetHandleId(handle h216) returns integer{ 
}


function SubStringBJ(string source119, integer start275, integer end227) returns string{ 
    return SubString(source119, (start275 - 1), end227)
}


function SubString(string source717, integer start314, integer end239) returns string{ 
}


function ClearTextMessagesBJ(force toForce158) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), toForce158){
        ClearTextMessages()
    } else {
    }
}


function DisplayTimedTextToForce(force toForce539, real duration158, string message186) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), toForce539){
        DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., duration158, message186)
    } else {
    }
}


function DisplayTextToForce(force toForce271, string message108) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), toForce271){
        DisplayTextToPlayer(GetLocalPlayer(), 0., 0., message108)
    } else {
    }
}


function DisplayTextToPlayer(player toPlayer171, real x217, real y272, string message109) returns void{ 
}


function CameraSetSmoothingFactor(real factor327) returns void{ 
}


function CameraSetSmoothingFactorBJ(real factor289) returns void{ 
    CameraSetSmoothingFactor(factor289)
}


function SetCameraOrientControllerForPlayerBJ(player whichPlayer225, unit whichUnit307, real xoffset302, real yoffset253) returns void{ 
    if (GetLocalPlayer() == whichPlayer225){
        SetCameraOrientController(whichUnit307, xoffset302, yoffset253)
    } else {
    }
}


function SetCameraOrientController(unit whichUnit316, real xoffset302, real yoffset941) returns void{ 
}


function StopCameraForPlayerBJ(player whichPlayer176) returns void{ 
    if (GetLocalPlayer() == whichPlayer176){
        StopCamera()
    } else {
    }
}


function StopCamera() returns void{ 
}


function SetCameraQuickPositionLoc(location loc189) returns void{ 
    SetCameraQuickPosition(GetLocationX(loc189), GetLocationY(loc189))
}


function SetCameraQuickPosition(real x292, real y216) returns void{ 
}


function AdjustCameraBoundsForPlayerBJ(integer adjustMethod235, player whichPlayer266, real dxWest818, real dxEast612, real dyNorth250, real dySouth107) returns void{ 
    if (GetLocalPlayer() == whichPlayer266){
        AdjustCameraBoundsBJ(adjustMethod235, dxWest818, dxEast612, dyNorth250, dySouth107)
    } else {
    }
}


function AdjustCameraBoundsBJ(integer adjustMethod194, real dxWest200, real dxEast253, real dyNorth300, real dySouth932) returns void{ 
    local real minX812
    local real minY277
    local real maxX101
    local real maxY170
    local real scale333
    minX812 = 0.
    minY277 = 0.
    maxX101 = 0.
    maxY170 = 0.
    scale333 = 0.
    if (adjustMethod194 == bj_CAMERABOUNDS_ADJUST_ADD129){
        scale333 = 1.
    } else {
        if (adjustMethod194 == bj_CAMERABOUNDS_ADJUST_SUB999){
            scale333 = (- 1)
        } else {
            return %nothing%
        }
    }
    minX812 = (GetCameraBoundMinX() - (scale333 * dxWest200))
    maxX101 = (GetCameraBoundMaxX() + (scale333 * dxEast253))
    minY277 = (GetCameraBoundMinY() - (scale333 * dySouth932))
    maxY170 = (GetCameraBoundMaxY() + (scale333 * dyNorth300))
    if (maxX101 < minX812){
        minX812 = ((minX812 + maxX101) * 0.5)
        maxX101 = minX812
    } else {
    }
    if (maxY170 < minY277){
        minY277 = ((minY277 + maxY170) * 0.5)
        maxY170 = minY277
    } else {
    }
    SetCameraBounds(minX812, minY277, minX812, maxY170, maxX101, maxY170, maxX101, minY277)
}


function SetCameraBounds(real x1186, real y1521, real x2239, real y2445, real x3959, real y3306, real x4110, real y4237) returns void{ 
}


function SetCameraBoundsToRectForPlayerBJ(player whichPlayer816, rect r989) returns void{ 
    if (GetLocalPlayer() == whichPlayer816){
        SetCameraBoundsToRect(r989)
    } else {
    }
}


function SetCameraBoundsToRect(rect r231) returns void{ 
    local real minX156
    local real minY178
    local real maxX131
    local real maxY826
    minX156 = GetRectMinX(r231)
    minY178 = GetRectMinY(r231)
    maxX131 = GetRectMaxX(r231)
    maxY826 = GetRectMaxY(r231)
    SetCameraBounds(minX156, minY178, minX156, maxY826, maxX131, maxY826, maxX131, minY178)
}


function GetEntireMapRect() returns rect{ 
    return GetWorldBounds()
}


function GetWorldBounds() returns rect{ 
}


function GetPlayableMapRect() returns rect{ 
    return bj_mapInitialPlayableArea332
}


function GetCameraBoundsMapRect() returns rect{ 
    return bj_mapInitialCameraBounds177
}


function CameraClearNoiseForPlayer(player whichPlayer229) returns void{ 
    if (GetLocalPlayer() == whichPlayer229){
        CameraSetSourceNoise(0., 0.)
        CameraSetTargetNoise(0., 0.)
    } else {
    }
}


function CameraSetSourceNoise(real mag903, real velocity231) returns void{ 
}


function CameraSetTargetNoise(real mag313, real velocity208) returns void{ 
}


function CameraSetEQNoiseForPlayer(player whichPlayer128, real magnitude298) returns void{ 
    local real richter166
    richter166 = magnitude298
    if (richter166 > 5.0){
        richter166 = 5.0
    } else {
    }
    if (richter166 < 2.0){
        richter166 = 2.0
    } else {
    }
    if (GetLocalPlayer() == whichPlayer128){
        CameraSetTargetNoiseEx((magnitude298 * 2.0), (magnitude298 * Pow(10., richter166)), true)
        CameraSetSourceNoiseEx((magnitude298 * 2.0), (magnitude298 * Pow(10., richter166)), true)
    } else {
    }
}


function Pow(real x300, real power769) returns real{ 
}


function CameraSetTargetNoiseEx(real mag688, real velocity315, boolean vertOnly155) returns void{ 
}


function CameraSetSourceNoiseEx(real mag206, real velocity868, boolean vertOnly367) returns void{ 
}


function CameraSetTargetNoiseForPlayer(player whichPlayer873, real magnitude332, real velocity236) returns void{ 
    if (GetLocalPlayer() == whichPlayer873){
        CameraSetTargetNoise(magnitude332, velocity236)
    } else {
    }
}


function CameraSetSourceNoiseForPlayer(player whichPlayer170, real magnitude835, real velocity192) returns void{ 
    if (GetLocalPlayer() == whichPlayer170){
        CameraSetSourceNoise(magnitude835, velocity192)
    } else {
    }
}


function ResetToGameCameraForPlayer(player whichPlayer115, real duration191) returns void{ 
    if (GetLocalPlayer() == whichPlayer115){
        ResetToGameCamera(duration191)
    } else {
    }
}


function ResetToGameCamera(real duration149) returns void{ 
}


function SetCinematicCameraForPlayer(player whichPlayer203, string cameraModelFile205) returns void{ 
    if (GetLocalPlayer() == whichPlayer203){
        SetCinematicCamera(cameraModelFile205)
    } else {
    }
}


function SetCinematicCamera(string cameraModelFile102) returns void{ 
}


function SmartCameraPanBJ(player whichPlayer351, location loc266, real duration163) returns void{ 
    local real dist902
    null
    if (GetLocalPlayer() == whichPlayer351){
        dist902 = DistanceBetweenPoints(loc266, GetCameraTargetPositionLoc())
        if (dist902 >= bj_SMARTPAN_TRESHOLD_SNAP261){
            PanCameraToTimed(GetLocationX(loc266), GetLocationY(loc266), 0.)
        } else {
            if (dist902 >= bj_SMARTPAN_TRESHOLD_PAN360){
                PanCameraToTimed(GetLocationX(loc266), GetLocationY(loc266), duration163)
            } else {
            }
        }
    } else {
    }
}


function GetCameraTargetPositionLoc() returns location{ 
}


function PanCameraToTimed(real x189, real y106, real duration276) returns void{ 
}


function PanCameraToTimedLocWithZForPlayer(player whichPlayer275, location loc267, real zOffset179, real duration299) returns void{ 
    if (GetLocalPlayer() == whichPlayer275){
        PanCameraToTimedWithZ(GetLocationX(loc267), GetLocationY(loc267), zOffset179, duration299)
    } else {
    }
}


function PanCameraToTimedWithZ(real x331, real y269, real zOffsetDest140, real duration782) returns void{ 
}


function PanCameraToTimedLocForPlayer(player whichPlayer326, location loc202, real duration238) returns void{ 
    if (GetLocalPlayer() == whichPlayer326){
        PanCameraToTimed(GetLocationX(loc202), GetLocationY(loc202), duration238)
    } else {
    }
}


function PanCameraToTimedForPlayer(player whichPlayer223, real x136, real y140, real duration690) returns void{ 
    if (GetLocalPlayer() == whichPlayer223){
        PanCameraToTimed(x136, y140, duration690)
    } else {
    }
}


function PanCameraToLocForPlayer(player whichPlayer159, location loc153) returns void{ 
    if (GetLocalPlayer() == whichPlayer159){
        PanCameraTo(GetLocationX(loc153), GetLocationY(loc153))
    } else {
    }
}


function PanCameraTo(real x274, real y280) returns void{ 
}


function PanCameraToForPlayer(player whichPlayer203, real x947, real y759) returns void{ 
    if (GetLocalPlayer() == whichPlayer203){
        PanCameraTo(x947, y759)
    } else {
    }
}


function RotateCameraAroundLocBJ(real degrees169, location loc217, player whichPlayer295, real duration143) returns void{ 
    if (GetLocalPlayer() == whichPlayer295){
        SetCameraRotateMode(GetLocationX(loc217), GetLocationY(loc217), (bj_DEGTORAD197 * degrees169), duration143)
    } else {
    }
}


function SetCameraRotateMode(real x248, real y224, real radiansToSweep818, real duration186) returns void{ 
}


function SetCameraPosition(real x287, real y235) returns void{ 
}


function SetCameraTargetControllerNoZForPlayer(player whichPlayer365, unit whichUnit174, real xoffset224, real yoffset918, boolean inheritOrientation258) returns void{ 
    if (GetLocalPlayer() == whichPlayer365){
        SetCameraTargetController(whichUnit174, xoffset224, yoffset918, inheritOrientation258)
    } else {
    }
}


function SetCameraTargetController(unit whichUnit129, real xoffset289, real yoffset415, boolean inheritOrientation265) returns void{ 
}


function SetCameraFieldForPlayer(player whichPlayer742, camerafield whichField105, real value165, real duration309) returns void{ 
    if (GetLocalPlayer() == whichPlayer742){
        SetCameraField(whichField105, value165, duration309)
    } else {
    }
}


function SetCameraField(camerafield whichField149, real value177, real duration201) returns void{ 
}


function CameraSetupGetFieldSwap(camerafield whichField244, camerasetup whichSetup499) returns real{ 
    return CameraSetupGetField(whichSetup499, whichField244)
}


function CameraSetupGetField(camerasetup whichSetup537, camerafield whichField333) returns real{ 
}


function CameraSetupApplyForPlayer(boolean doPan400, camerasetup whichSetup288, player whichPlayer569, real duration178) returns void{ 
    if (GetLocalPlayer() == whichPlayer569){
        CameraSetupApplyForceDuration(whichSetup288, doPan400, duration178)
    } else {
    }
}


function CameraSetupApplyForceDuration(camerasetup whichSetup154, boolean doPan394, real forceDuration242) returns void{ 
}


function GetCurrentCameraSetup() returns camerasetup{ 
    local camerasetup theCam297
    local real duration227
    theCam297 = CreateCameraSetup()
    duration227 = 0.
    CameraSetupSetField(theCam297, CAMERA_FIELD_TARGET_DISTANCE158, GetCameraField(CAMERA_FIELD_TARGET_DISTANCE158), duration227)
    CameraSetupSetField(theCam297, CAMERA_FIELD_FARZ287, GetCameraField(CAMERA_FIELD_FARZ287), duration227)
    CameraSetupSetField(theCam297, CAMERA_FIELD_ZOFFSET301, GetCameraField(CAMERA_FIELD_ZOFFSET301), duration227)
    CameraSetupSetField(theCam297, CAMERA_FIELD_ANGLE_OF_ATTACK326, (bj_RADTODEG319 * GetCameraField(CAMERA_FIELD_ANGLE_OF_ATTACK326)), duration227)
    CameraSetupSetField(theCam297, CAMERA_FIELD_FIELD_OF_VIEW434, (bj_RADTODEG319 * GetCameraField(CAMERA_FIELD_FIELD_OF_VIEW434)), duration227)
    CameraSetupSetField(theCam297, CAMERA_FIELD_ROLL325, (bj_RADTODEG319 * GetCameraField(CAMERA_FIELD_ROLL325)), duration227)
    CameraSetupSetField(theCam297, CAMERA_FIELD_ROTATION125, (bj_RADTODEG319 * GetCameraField(CAMERA_FIELD_ROTATION125)), duration227)
    CameraSetupSetDestPosition(theCam297, GetCameraTargetPositionX(), GetCameraTargetPositionY(), duration227)
    return theCam297
}


function CreateCameraSetup() returns camerasetup{ 
}


function GetCameraField(camerafield whichField197) returns real{ 
}


function CameraSetupSetField(camerasetup whichSetup284, camerafield whichField123, real value194, real duration539) returns void{ 
}


function GetCameraTargetPositionX() returns real{ 
}


function GetCameraTargetPositionY() returns real{ 
}


function CameraSetupSetDestPosition(camerasetup whichSetup419, real x160, real y306, real duration190) returns void{ 
}


function CompareRectsBJ(rect A305, rect B241) returns boolean{ 
    return ((((GetRectMinX(A305) == GetRectMinX(B241)) and (GetRectMinY(A305) == GetRectMinY(B241))) and (GetRectMaxX(A305) == GetRectMaxX(B241))) and (GetRectMaxY(A305) == GetRectMaxY(B241)))
}


function CompareLocationsBJ(location A264, location B218) returns boolean{ 
    return ((GetLocationX(A264) == GetLocationX(B218)) and (GetLocationY(A264) == GetLocationY(B218)))
}


function PlaySound(string soundName946) returns void{ 
    local sound soundHandle318
    soundHandle318 = CreateSound(soundName946, false, false, true, 12700, 12700, "")
    StartSound(soundHandle318)
    KillSoundWhenDone(soundHandle318)
}


function CreateSound(string fileName159, boolean looping110, boolean is3D105, boolean stopwhenoutofrange209, integer fadeInRate292, integer fadeOutRate330, string eaxSetting260) returns sound{ 
}


function GetTimeOfDayScalePercentBJ() returns real{ 
    return (GetTimeOfDayScale() * 100.)
}


function GetTimeOfDayScale() returns real{ 
}


function SetTimeOfDayScalePercentBJ(real scalePercent178) returns void{ 
    SetTimeOfDayScale((scalePercent178 * 0.01))
}


function SetTimeOfDayScale(real r302) returns void{ 
}


function SetTimeOfDay(real whatTime222) returns void{ 
    SetFloatGameState(GAME_STATE_TIME_OF_DAY906, whatTime222)
}


function GetFloatGameState(fgamestate whichFloatGameState616) returns real{ 
}


function GetBooleanOr(boolean valueA152, boolean valueB122) returns boolean{ 
    return (valueA152 or valueB122)
}


function GetBooleanAnd(boolean valueA216, boolean valueB567) returns boolean{ 
    return (valueA216 and valueB567)
}


function StringIdentity(string theString218) returns string{ 
    return GetLocalizedString(theString218)
}


function CommentString(string commentString255) returns void{ 
}


function DoNothing() returns void{ 
}


function PolledWait(real duration275) returns void{ 
    local timer t305
    local real timeRemaining306
    null
    null
    if (duration275 > 0.){
        t305 = CreateTimer()
        TimerStart(t305, duration275, false, null)
        loop {
            timeRemaining306 = TimerGetRemaining(t305)
            exitwhen (timeRemaining306 <= 0.)
            if (timeRemaining306 > bj_POLLED_WAIT_SKIP_THRESHOLD282){
                TriggerSleepAction((0.1 * timeRemaining306))
            } else {
                TriggerSleepAction(bj_POLLED_WAIT_INTERVAL244)
            }
        }
        DestroyTimer(t305)
    } else {
    }
}


function TimerGetRemaining(timer whichTimer656) returns real{ 
}


function SetForLoopIndexB(integer newIndex352) returns void{ 
    bj_forLoopBIndex290 = newIndex352
}


function GetForLoopIndexB() returns integer{ 
    return bj_forLoopBIndex290
}


function SetForLoopIndexA(integer newIndex686) returns void{ 
    bj_forLoopAIndex968 = newIndex686
}


function GetForLoopIndexA() returns integer{ 
    return bj_forLoopAIndex968
}


function IsTriggerQueuedBJ(trigger trig186) returns boolean{ 
    return (QueuedTriggerGetIndex(trig186) != (- 1))
}


function QueuedTriggerGetIndex(trigger trig138) returns integer{ 
    local integer index271
    index271 = 0
    loop {
        exitwhen (index271 >= bj_queuedExecTotal129)
        if (bj_queuedExecTriggers254[index271] == trig138){
            return index271
        } else {
        }
        index271 = (index271 + 1)
    }
    return (- 1)
}


function IsTriggerQueueEmptyBJ() returns boolean{ 
    return (bj_queuedExecTotal129 <= 0)
}


function QueuedTriggerCountBJ() returns integer{ 
    return bj_queuedExecTotal129
}


function QueuedTriggerClearInactiveBJ() returns void{ 
    bj_queuedExecTotal129 = IMinBJ(bj_queuedExecTotal129, 1)
}


function QueuedTriggerClearBJ() returns void{ 
    PauseTimer(bj_queuedExecTimeoutTimer644)
    bj_queuedExecTotal129 = 0
}


function QueuedTriggerRemoveByIndex(integer trigIndex177) returns boolean{ 
    local integer index443
    null
    if (trigIndex177 >= bj_queuedExecTotal129){
        return false
    } else {
    }
    bj_queuedExecTotal129 = (bj_queuedExecTotal129 - 1)
    index443 = trigIndex177
    loop {
        exitwhen (index443 >= bj_queuedExecTotal129)
        bj_queuedExecTriggers254[index443] = bj_queuedExecTriggers254[(index443 + 1)]
        bj_queuedExecUseConds305[index443] = bj_queuedExecUseConds305[(index443 + 1)]
        index443 = (index443 + 1)
    }
    return true
}


function QueuedTriggerAttemptExec() returns boolean{ 
    loop {
        exitwhen (bj_queuedExecTotal129 == 0)
        if TriggerExecuteBJ(bj_queuedExecTriggers254[0], bj_queuedExecUseConds305[0]){
            TimerStart(bj_queuedExecTimeoutTimer644, bj_QUEUED_TRIGGER_TIMEOUT262, false, null)
            return true
        } else {
        }
        QueuedTriggerRemoveByIndex(0)
    }
    return false
}


function QueuedTriggerRemoveBJ(trigger trig581) returns void{ 
    local integer index652
    local integer trigIndex326
    local boolean trigExecuted170
    null
    null
    null
    trigIndex326 = QueuedTriggerGetIndex(trig581)
    if (trigIndex326 == (- 1)){
        return %nothing%
    } else {
    }
    QueuedTriggerRemoveByIndex(trigIndex326)
    if (trigIndex326 == 0){
        PauseTimer(bj_queuedExecTimeoutTimer644)
        QueuedTriggerAttemptExec()
    } else {
    }
}


function QueuedTriggerAddBJ(trigger trig642, boolean checkConditions153) returns boolean{ 
    if (bj_queuedExecTotal129 >= bj_MAX_QUEUED_TRIGGERS476){
        return false
    } else {
    }
    bj_queuedExecTriggers254[bj_queuedExecTotal129] = trig642
    bj_queuedExecUseConds305[bj_queuedExecTotal129] = checkConditions153
    bj_queuedExecTotal129 = (bj_queuedExecTotal129 + 1)
    if (bj_queuedExecTotal129 == 1){
        QueuedTriggerAttemptExec()
    } else {
    }
    return true
}


function TriggerExecuteBJ(trigger trig314, boolean checkConditions213) returns boolean{ 
    if checkConditions213{
        if (not TriggerEvaluate(trig314)){
            return false
        } else {
        }
    } else {
    }
    TriggerExecute(trig314)
    return true
}


function QueuedTriggerCheck() returns void{ 
    local string s181
    local integer i277
    s181 = "TrigQueue Check "
    null
    i277 = 0
    loop {
        exitwhen (i277 >= bj_queuedExecTotal129)
        s181 = (((s181 + "q[") + I2S(i277)) + "]=")
        if (bj_queuedExecTriggers254[i277] == null){
            s181 = (s181 + "null ")
        } else {
            s181 = (s181 + "x ")
        }
        i277 = (i277 + 1)
    }
    s181 = (((s181 + "(") + I2S(bj_queuedExecTotal129)) + " total)")
    DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 600., s181)
}


function I2S(integer i240) returns string{ 
}


function PostTriggerExecuteBJ(trigger trig318, boolean checkConditions323) returns boolean{ 
    if checkConditions323{
        if (not TriggerEvaluate(trig318)){
            return false
        } else {
        }
    } else {
    }
    TriggerRegisterTimerEvent(trig318, 0., false)
    return true
}


function TriggerEvaluate(trigger whichTrigger166) returns boolean{ 
}


function TriggerExecute(trigger whichTrigger198) returns void{ 
}


function ConditionalTriggerExecute(trigger trig183) returns void{ 
    if TriggerEvaluate(trig183){
        TriggerExecute(trig183)
    } else {
    }
}


function RectContainsItem(item whichItem499, rect r124) returns boolean{ 
    if (whichItem499 == null){
        return false
    } else {
    }
    if IsItemOwned(whichItem499){
        return false
    } else {
    }
    return RectContainsCoords(r124, GetItemX(whichItem499), GetItemY(whichItem499))
}


function RectContainsCoords(rect r102, real x207, real y213) returns boolean{ 
    return ((((GetRectMinX(r102) <= x207) and (x207 <= GetRectMaxX(r102))) and (GetRectMinY(r102) <= y213)) and (y213 <= GetRectMaxY(r102)))
}


function RectContainsLoc(rect r135, location loc110) returns boolean{ 
    return RectContainsCoords(r135, GetLocationX(loc110), GetLocationY(loc110))
}


function RectFromCenterSizeBJ(location center219, real width580, real height107) returns rect{ 
    local real x231
    local real y311
    x231 = GetLocationX(center219)
    y311 = GetLocationY(center219)
    return Rect((x231 - (width580 * 0.5)), (y311 - (height107 * 0.5)), (x231 + (width580 * 0.5)), (y311 + (height107 * 0.5)))
}


function OffsetRectBJ(rect r323, real dx139, real dy141) returns rect{ 
    return Rect((GetRectMinX(r323) + dx139), (GetRectMinY(r323) + dy141), (GetRectMaxX(r323) + dx139), (GetRectMaxY(r323) + dy141))
}


function OffsetLocation(location loc191, real dx160, real dy285) returns location{ 
    return Location((GetLocationX(loc191) + dx160), (GetLocationY(loc191) + dy285))
}


function ModuloReal(real dividend109, real divisor949) returns real{ 
    local real modulus102
    modulus102 = (dividend109 - (I2R(R2I((dividend109 / divisor949))) * divisor949))
    if (modulus102 < 0.){
        modulus102 = (modulus102 + divisor949)
    } else {
    }
    return modulus102
}


function ModuloInteger(integer dividend223, integer divisor148) returns integer{ 
    local integer modulus220
    modulus220 = (dividend223 - ((dividend223 / divisor148) * divisor148))
    if (modulus220 < 0){
        modulus220 = (modulus220 + divisor148)
    } else {
    }
    return modulus220
}


function GetRandomLocInRect(rect whichRect282) returns location{ 
    return Location(GetRandomReal(GetRectMinX(whichRect282), GetRectMaxX(whichRect282)), GetRandomReal(GetRectMinY(whichRect282), GetRectMaxY(whichRect282)))
}


function GetRandomPercentageBJ() returns real{ 
    return GetRandomReal(0., 100.)
}


function GetRandomDirectionDeg() returns real{ 
    return GetRandomReal(0., 360.)
}


function PolarProjectionBJ(location source113, real dist464, real angle229) returns location{ 
    local real x150
    local real y179
    x150 = (GetLocationX(source113) + (dist464 * Cos((angle229 * bj_DEGTORAD197))))
    y179 = (GetLocationY(source113) + (dist464 * Sin((angle229 * bj_DEGTORAD197))))
    return Location(x150, y179)
}


function SquareRoot(real x216) returns real{ 
}


function Atan2BJ(real y124, real x133) returns real{ 
    return (Atan2(y124, x133) * bj_RADTODEG319)
}


function AtanBJ(real degrees230) returns real{ 
    return (Atan(degrees230) * bj_RADTODEG319)
}


function Atan(real x231) returns real{ 
}


function AcosBJ(real degrees229) returns real{ 
    return (Acos(degrees229) * bj_RADTODEG319)
}


function Acos(real x239) returns real{ 
}


function AsinBJ(real degrees106) returns real{ 
    return (Asin(degrees106) * bj_RADTODEG319)
}


function Asin(real y210) returns real{ 
}


function TanBJ(real degrees227) returns real{ 
    return Tan((degrees227 * bj_DEGTORAD197))
}


function Tan(real radians474) returns real{ 
}


function CosBJ(real degrees284) returns real{ 
    return Cos((degrees284 * bj_DEGTORAD197))
}


function SinBJ(real degrees353) returns real{ 
    return Sin((degrees353 * bj_DEGTORAD197))
}


function ISignBJ(integer a555) returns integer{ 
    if (a555 >= 0){
        return 1
    } else {
        return (- 1)
    }
}


function IAbsBJ(integer a211) returns integer{ 
    if (a211 >= 0){
        return a211
    } else {
        return (- a211)
    }
}


function RSignBJ(real a256) returns real{ 
    if (a256 >= 0.0){
        return 1.0
    } else {
        return (- 1.0)
    }
}


function RAbsBJ(real a903) returns real{ 
    if (a903 >= 0.){
        return a903
    } else {
        return (- a903)
    }
}


function RMinBJ(real a751, real b196) returns real{ 
    if (a751 < b196){
        return a751
    } else {
        return b196
    }
}


function BJDebugMsg(string msg589) returns void{ 
    local integer i989
    i989 = 0
    loop {
        DisplayTimedTextToPlayer(Player(i989), 0., 0., 60., msg589)
        i989 = (i989 + 1)
        exitwhen (i989 == bj_MAX_PLAYERS403)
    }
}


function iterator(group this293) returns group{ 
    bj_groupAddGroupDest374 = CreateGroup()
    ForGroup(this293, function GroupAddGroupEnum)
    return bj_groupAddGroupDest374
}


function hasNext(group this234) returns boolean{ 
    return (FirstOfGroup(this234) != null)
}


function next(group this128) returns unit{ 
    local unit u440
    u440 = FirstOfGroup(this128)
    GroupRemoveUnit(this128, u440)
    return u440
}


function close(group this655) returns void{ 
    DestroyGroup(this655)
}


function abs(real this278) returns real{ 
    if (this278 >= 0.){
        return this278
    } else {
        return (- this278)
    }
}


function squared(real this438) returns real{ 
    return (this438 * this438)
}


function sign(real this930) returns real{ 
    if (this930 > 0.0){
        return 1.0
    } else {
        if (this930 < 0.0){
            return (- 1.0)
        } else {
            return 0.0
        }
    }
}


function toInt(real this119) returns integer{ 
    return R2I(this119)
}


function toString(real this117) returns string{ 
    return R2S(this117)
}


function R2S(real r110) returns string{ 
}


function acos(real this186) returns real{ 
    return Acos(this186)
}


function asin(real this321) returns real{ 
    return Asin(this321)
}


function atan(real this285) returns real{ 
    return Atan(this285)
}


function cos(real this330) returns real{ 
    return Cos(this330)
}


function sin(real this212) returns real{ 
    return Sin(this212)
}


function abs(integer this261) returns integer{ 
    if (this261 >= 0){
        return this261
    } else {
        return (- this261)
    }
}


function squared(integer this645) returns integer{ 
    return (this645 * this645)
}


function sign(integer this206) returns integer{ 
    if (this206 > 0){
        return 1
    } else {
        if (this206 < 0){
            return (- 1)
        } else {
            return 0
        }
    }
}


function toReal(integer this107) returns real{ 
    return I2R(this107)
}


function toString(integer this134) returns string{ 
    return I2S(this134)
}


function setDebugLvl(integer value299) returns void{ 
    DEBUG_LEVEL308 = value299
}


function setDebugMsgDuration(real value458) returns void{ 
    DEBUG_MSG_DURATION251 = value458
}


function debugPrint(string msg269, integer level213) returns void{ 
    if (level213 >= DEBUG_LEVEL308){
        print(msg269)
    } else {
    }
}


function print(string msg251) returns void{ 
    local integer i753
    {
        i753 = 0
        loop {
            exitwhen (i753 > 12)
            DisplayTimedTextToPlayer(Player(i753), 0., 0., DEBUG_MSG_DURATION251, msg251)
            i753 = (i753 + 1)
        }
        null}
}


function printNote(string msg996) returns void{ 
    local integer i306
    {
        i306 = 0
        loop {
            exitwhen (i306 > 12)
            DisplayTimedTextToPlayer(Player(i306), 0., 0., DEBUG_MSG_DURATION251, ("|cffFFFF00[NOTIFICATION]|r - " + msg996))
            i306 = (i306 + 1)
        }
        null}
}


function printWarning(string msg608) returns void{ 
    local integer i195
    {
        i195 = 0
        loop {
            exitwhen (i195 > 12)
            DisplayTimedTextToPlayer(Player(i195), 0., 0., DEBUG_MSG_DURATION251, ("|cffFF8000[WARNING]|r - " + msg608))
            i195 = (i195 + 1)
        }
        null}
}


function printError(string msg236) returns void{ 
    local integer i323
    {
        i323 = 0
        loop {
            exitwhen (i323 > 12)
            DisplayTimedTextToPlayer(Player(i323), 0., 0., DEBUG_MSG_DURATION251, ("|cffFF0000[ERROR]|r - " + msg236))
            i323 = (i323 + 1)
        }
        null}
}


function printTimed(string msg179, real duration277) returns void{ 
    local integer i225
    {
        i225 = 0
        loop {
            exitwhen (i225 > 12)
            DisplayTimedTextToPlayer(Player(i225), 0., 0., duration277, msg179)
            i225 = (i225 + 1)
        }
        null}
}


function toString(real this272) returns string{ 
    return R2S(this272)
}


function toString(integer this197) returns string{ 
    return I2S(this197)
}


function toString(boolean this330) returns string{ 
    if this330{
        return "true"
    } else {
        return "false"
    }
}


function getX(unit this124) returns real{ 
    return GetUnitX(this124)
}


function getY(unit this138) returns real{ 
    return GetUnitY(this138)
}


function setX(unit this266, real x288) returns unit{ 
    SetUnitX(this266, x288)
    return this266
}


function SetUnitX(unit whichUnit238, real newX308) returns void{ 
}


function setY(unit this307, real y539) returns unit{ 
    SetUnitY(this307, y539)
    return this307
}


function SetUnitY(unit whichUnit188, real newY301) returns void{ 
}


function setXY(unit this192, real x522, real y249) returns unit{ 
    SetUnitX(this192, x522)
    SetUnitY(this192, y249)
    return this192
}


function setPos(unit this235, real x196, real y263) returns unit{ 
    SetUnitPosition(this235, x196, y263)
    return this235
}


function kill(unit this159) returns unit{ 
    KillUnit(this159)
    return this159
}


function addAbility(unit this314, integer abil150) returns unit{ 
    UnitAddAbility(this314, abil150)
    return this314
}


function removeAbility(unit this852, integer abil127) returns unit{ 
    UnitRemoveAbility(this852, abil127)
    return this852
}


function getOwner(unit this130) returns player{ 
    return GetOwningPlayer(this130)
}


function setOwner(unit this249, player p509, boolean changeColor296) returns unit{ 
    SetUnitOwner(this249, p509, changeColor296)
    return this249
}


function setScale(unit this140, real scale222) returns unit{ 
    SetUnitScale(this140, scale222, scale222, scale222)
    return this140
}


function setVertexColor(unit this336, integer r640, integer g309, integer b325, integer a262) returns unit{ 
    SetUnitVertexColor(this336, r640, g309, b325, a262)
    return this336
}


function addEffect(unit this421, string fx202, string attachment495) returns effect{ 
    return AddSpecialEffectTarget(fx202, this421, attachment495)
}


function setFacing(unit this480, real deg648) returns unit{ 
    SetUnitFacing(this480, deg648)
    return this480
}


function getFacing(unit this223) returns real{ 
    return GetUnitFacing(this223)
}


function getFlyHeight(unit this334) returns real{ 
    return GetUnitFlyHeight(this334)
}


function GetUnitFlyHeight(unit whichUnit206) returns real{ 
}


function setFlyHeight(unit this134, real height241, real rate231) returns unit{ 
    SetUnitFlyHeight(this134, height241, rate231)
    return this134
}


function hide(unit this135) returns unit{ 
    ShowUnit(this135, false)
    return this135
}


function show(unit this235) returns unit{ 
    ShowUnit(this235, true)
    return this235
}


function setUserData(unit this199, integer data150) returns unit{ 
    SetUnitUserData(this199, data150)
    return this199
}


function SetUnitUserData(unit whichUnit155, integer data151) returns void{ 
}


function getUserData(unit this174) returns integer{ 
    return GetUnitUserData(this174)
}


function GetUnitUserData(unit whichUnit211) returns integer{ 
}


function destr(multiboard this316) returns void{ 
    DestroyMultiboard(this316)
}


function isDisplayed(multiboard this230) returns boolean{ 
    return IsMultiboardDisplayed(this230)
}


function IsMultiboardDisplayed(multiboard lb815) returns boolean{ 
}


function isMinimized(multiboard this287) returns boolean{ 
    return IsMultiboardMinimized(this287)
}


function IsMultiboardMinimized(multiboard lb119) returns boolean{ 
}


function clear(multiboard this222) returns multiboard{ 
    MultiboardClear(this222)
    return this222
}


function MultiboardClear(multiboard lb207) returns void{ 
}


function display(multiboard this189, boolean show295) returns multiboard{ 
    MultiboardDisplay(this189, show295)
    return this189
}


function getColumnCount(multiboard this184) returns integer{ 
    return MultiboardGetColumnCount(this184)
}


function getItem(multiboard this247, integer row150, integer column222) returns multiboarditem{ 
    return MultiboardGetItem(this247, row150, column222)
}


function getRowCount(multiboard this189) returns integer{ 
    return MultiboardGetRowCount(this189)
}


function getTitleText(multiboard this236) returns string{ 
    return MultiboardGetTitleText(this236)
}


function MultiboardGetTitleText(multiboard lb175) returns string{ 
}


function minimalize(multiboard this169, boolean minimalize252) returns multiboard{ 
    MultiboardMinimize(this169, minimalize252)
    return this169
}


function setColumnCount(multiboard this811, integer count802) returns multiboard{ 
    MultiboardSetColumnCount(this811, count802)
    return this811
}


function setRowCount(multiboard this305, integer count130) returns multiboard{ 
    MultiboardSetRowCount(this305, count130)
    return this305
}


function setItemsIcon(multiboard this873, string path237) returns multiboard{ 
    MultiboardSetItemsIcon(this873, path237)
    return this873
}


function MultiboardSetItemsIcon(multiboard lb833, string iconPath255) returns void{ 
}


function setItemsStyle(multiboard this113, boolean showValues300, boolean showIcons148) returns multiboard{ 
    MultiboardSetItemsStyle(this113, showValues300, showIcons148)
    return this113
}


function MultiboardSetItemsStyle(multiboard lb181, boolean showValues219, boolean showIcons335) returns void{ 
}


function setItemsValue(multiboard this253, string value915) returns multiboard{ 
    MultiboardSetItemsValue(this253, value915)
    return this253
}


function MultiboardSetItemsValue(multiboard lb195, string value182) returns void{ 
}


function setItemsValueColor(multiboard this124, integer r107, integer g214, integer b136, integer a211) returns multiboard{ 
    MultiboardSetItemsValueColor(this124, r107, g214, b136, a211)
    return this124
}


function MultiboardSetItemsValueColor(multiboard lb862, integer red105, integer green204, integer blue794, integer alpha302) returns void{ 
}


function setItemsWidth(multiboard this959, real width282) returns multiboard{ 
    MultiboardSetItemsWidth(this959, width282)
    return this959
}


function MultiboardSetItemsWidth(multiboard lb199, real width292) returns void{ 
}


function setTitle(multiboard this265, string label220) returns multiboard{ 
    MultiboardSetTitleText(this265, label220)
    return this265
}


function setTitleColor(multiboard this164, integer r114, integer g840, integer b264, integer a133) returns multiboard{ 
    MultiboardSetTitleTextColor(this164, r114, g840, b264, a133)
    return this164
}


function release(multiboarditem this184) returns multiboarditem{ 
    MultiboardReleaseItem(this184)
    return this184
}


function setIcon(multiboarditem this954, string iconFileName173) returns multiboarditem{ 
    MultiboardSetItemIcon(this954, iconFileName173)
    return this954
}


function setStyle(multiboarditem this740, boolean showValue143, boolean showIcon203) returns multiboarditem{ 
    MultiboardSetItemStyle(this740, showValue143, showIcon203)
    return this740
}


function setValue(multiboarditem this190, string value221) returns multiboarditem{ 
    MultiboardSetItemValue(this190, value221)
    return this190
}


function setValueColor(multiboarditem this198, integer r311, integer g295, integer b293, integer a320) returns multiboarditem{ 
    MultiboardSetItemValueColor(this198, r311, g295, b293, a320)
    return this198
}


function setWidth(multiboarditem this148, real width297) returns multiboarditem{ 
    MultiboardSetItemWidth(this148, width297)
    return this148
}


function hasBoolean(hashtable this209, integer parentKey274, integer childKey173) returns boolean{ 
    return HaveSavedBoolean(this209, parentKey274, childKey173)
}


function hasHandle(hashtable this297, integer parentKey242, integer childKey264) returns boolean{ 
    return HaveSavedHandle(this297, parentKey242, childKey264)
}


function hasInt(hashtable this790, integer parentKey352, integer childKey323) returns boolean{ 
    return HaveSavedInteger(this790, parentKey352, childKey323)
}


function hasReal(hashtable this285, integer parentKey104, integer childKey633) returns boolean{ 
    return HaveSavedReal(this285, parentKey104, childKey633)
}


function hasString(hashtable this326, integer parentKey110, integer childKey413) returns boolean{ 
    return HaveSavedString(this326, parentKey110, childKey413)
}


function loadAbilityHandle(hashtable this115, integer parentKey101, integer childKey232) returns ability{ 
    return LoadAbilityHandle(this115, parentKey101, childKey232)
}


function loadBoolean(hashtable this141, integer parentKey282, integer childKey187) returns boolean{ 
    return LoadBoolean(this141, parentKey282, childKey187)
}


function loadBooleanExprHandle(hashtable this266, integer parentKey146, integer childKey179) returns boolexpr{ 
    return LoadBooleanExprHandle(this266, parentKey146, childKey179)
}


function loadButtonHandle(hashtable this296, integer parentKey892, integer childKey270) returns button{ 
    return LoadButtonHandle(this296, parentKey892, childKey270)
}


function loadDefeatConditionHandle(hashtable this114, integer parentKey294, integer childKey128) returns defeatcondition{ 
    return LoadDefeatConditionHandle(this114, parentKey294, childKey128)
}


function loadDestructableHandle(hashtable this786, integer parentKey119, integer childKey217) returns destructable{ 
    return LoadDestructableHandle(this786, parentKey119, childKey217)
}


function loadDialogHandle(hashtable this954, integer parentKey104, integer childKey299) returns dialog{ 
    return LoadDialogHandle(this954, parentKey104, childKey299)
}


function loadEffectHandle(hashtable this100, integer parentKey182, integer childKey130) returns effect{ 
    return LoadEffectHandle(this100, parentKey182, childKey130)
}


function loadFogModifierHandle(hashtable this739, integer parentKey281, integer childKey214) returns fogmodifier{ 
    return LoadFogModifierHandle(this739, parentKey281, childKey214)
}


function loadFogStateHandle(hashtable this240, integer parentKey137, integer childKey252) returns fogstate{ 
    return LoadFogStateHandle(this240, parentKey137, childKey252)
}


function loadForceHandle(hashtable this211, integer parentKey330, integer childKey279) returns force{ 
    return LoadForceHandle(this211, parentKey330, childKey279)
}


function loadGroupHandle(hashtable this399, integer parentKey106, integer childKey331) returns group{ 
    return LoadGroupHandle(this399, parentKey106, childKey331)
}


function loadImageHandle(hashtable this642, integer parentKey306, integer childKey263) returns image{ 
    return LoadImageHandle(this642, parentKey306, childKey263)
}


function loadInt(hashtable this965, integer parentKey175, integer childKey128) returns integer{ 
    return LoadInteger(this965, parentKey175, childKey128)
}


function loadItemHandle(hashtable this645, integer parentKey154, integer childKey101) returns item{ 
    return LoadItemHandle(this645, parentKey154, childKey101)
}


function loadItemPoolHandle(hashtable this248, integer parentKey168, integer childKey256) returns itempool{ 
    return LoadItemPoolHandle(this248, parentKey168, childKey256)
}


function loadLeaderboardHandle(hashtable this236, integer parentKey240, integer childKey155) returns leaderboard{ 
    return LoadLeaderboardHandle(this236, parentKey240, childKey155)
}


function loadFogStateHandle(hashtable this304, integer parentKey241, integer childKey213) returns fogstate{ 
    return LoadFogStateHandle(this304, parentKey241, childKey213)
}


function loadLightningHandle(hashtable this825, integer parentKey725, integer childKey203) returns lightning{ 
    return LoadLightningHandle(this825, parentKey725, childKey203)
}


function loadLocationHandle(hashtable this121, integer parentKey315, integer childKey466) returns location{ 
    return LoadLocationHandle(this121, parentKey315, childKey466)
}


function loadImageHandle(hashtable this282, integer parentKey127, integer childKey121) returns image{ 
    return LoadImageHandle(this282, parentKey127, childKey121)
}


function loadMultiboardHandle(hashtable this244, integer parentKey182, integer childKey189) returns multiboard{ 
    return LoadMultiboardHandle(this244, parentKey182, childKey189)
}


function loadFogModifierHandle(hashtable this177, integer parentKey331, integer childKey131) returns fogmodifier{ 
    return LoadFogModifierHandle(this177, parentKey331, childKey131)
}


function loadFogStateHandle(hashtable this215, integer parentKey162, integer childKey117) returns fogstate{ 
    return LoadFogStateHandle(this215, parentKey162, childKey117)
}


function loadForceHandle(hashtable this930, integer parentKey997, integer childKey151) returns force{ 
    return LoadForceHandle(this930, parentKey997, childKey151)
}


function loadItemHandle(hashtable this247, integer parentKey169, integer childKey127) returns item{ 
    return LoadItemHandle(this247, parentKey169, childKey127)
}


function loadPlayerHandle(hashtable this486, integer parentKey106, integer childKey308) returns player{ 
    return LoadPlayerHandle(this486, parentKey106, childKey308)
}


function loadQuestHandle(hashtable this147, integer parentKey235, integer childKey172) returns quest{ 
    return LoadQuestHandle(this147, parentKey235, childKey172)
}


function loadQuestItemHandle(hashtable this140, integer parentKey277, integer childKey158) returns questitem{ 
    return LoadQuestItemHandle(this140, parentKey277, childKey158)
}


function loadReal(hashtable this143, integer parentKey163, integer childKey216) returns real{ 
    return LoadReal(this143, parentKey163, childKey216)
}


function loadRectHandle(hashtable this323, integer parentKey879, integer childKey163) returns rect{ 
    return LoadRectHandle(this323, parentKey879, childKey163)
}


function loadRegionHandle(hashtable this520, integer parentKey311, integer childKey300) returns region{ 
    return LoadRegionHandle(this520, parentKey311, childKey300)
}


function loadSoundHandle(hashtable this340, integer parentKey126, integer childKey166) returns sound{ 
    return LoadSoundHandle(this340, parentKey126, childKey166)
}


function loadString(hashtable this226, integer parentKey196, integer childKey154) returns string{ 
    return LoadStr(this226, parentKey196, childKey154)
}


function loadTextTagHandle(hashtable this119, integer parentKey484, integer childKey331) returns texttag{ 
    return LoadTextTagHandle(this119, parentKey484, childKey331)
}


function loadTimerDialogHandle(hashtable this236, integer parentKey179, integer childKey967) returns timerdialog{ 
    return LoadTimerDialogHandle(this236, parentKey179, childKey967)
}


function loadTimerHandle(hashtable this181, integer parentKey155, integer childKey668) returns timer{ 
    return LoadTimerHandle(this181, parentKey155, childKey668)
}


function loadTrackableHandle(hashtable this273, integer parentKey217, integer childKey211) returns trackable{ 
    return LoadTrackableHandle(this273, parentKey217, childKey211)
}


function loadTriggerActionHandle(hashtable this310, integer parentKey256, integer childKey168) returns triggeraction{ 
    return LoadTriggerActionHandle(this310, parentKey256, childKey168)
}


function loadTriggerConditionHandle(hashtable this272, integer parentKey288, integer childKey282) returns triggercondition{ 
    return LoadTriggerConditionHandle(this272, parentKey288, childKey282)
}


function loadTriggerEventHandle(hashtable this301, integer parentKey103, integer childKey242) returns event{ 
    return LoadTriggerEventHandle(this301, parentKey103, childKey242)
}


function loadTriggerHandle(hashtable this281, integer parentKey520, integer childKey153) returns trigger{ 
    return LoadTriggerHandle(this281, parentKey520, childKey153)
}


function loadUbersplatHandle(hashtable this145, integer parentKey160, integer childKey122) returns ubersplat{ 
    return LoadUbersplatHandle(this145, parentKey160, childKey122)
}


function loadUnitHandle(hashtable this819, integer parentKey161, integer childKey128) returns unit{ 
    return LoadUnitHandle(this819, parentKey161, childKey128)
}


function loadUnitPoolHandle(hashtable this162, integer parentKey551, integer childKey488) returns unitpool{ 
    return LoadUnitPoolHandle(this162, parentKey551, childKey488)
}


function loadWidgetHandle(hashtable this324, integer parentKey299, integer childKey145) returns widget{ 
    return LoadWidgetHandle(this324, parentKey299, childKey145)
}


function saveAbilityHandle(hashtable this149, integer parentKey196, integer childKey272, ability value291) returns hashtable{ 
    SaveAbilityHandle(this149, parentKey196, childKey272, value291)
    return this149
}


function saveBoolean(hashtable this643, integer parentKey231, integer childKey284, boolean value314) returns hashtable{ 
    SaveBoolean(this643, parentKey231, childKey284, value314)
    return this643
}


function saveBooleanExprHandle(hashtable this184, integer parentKey164, integer childKey323, boolexpr value180) returns hashtable{ 
    SaveBooleanExprHandle(this184, parentKey164, childKey323, value180)
    return this184
}


function saveButtonHandle(hashtable this118, integer parentKey273, integer childKey128, button value624) returns hashtable{ 
    SaveButtonHandle(this118, parentKey273, childKey128, value624)
    return this118
}


function saveDefeatConditionHandle(hashtable this302, integer parentKey272, integer childKey293, defeatcondition value889) returns hashtable{ 
    SaveDefeatConditionHandle(this302, parentKey272, childKey293, value889)
    return this302
}


function saveDestructableHandle(hashtable this458, integer parentKey317, integer childKey111, destructable value280) returns hashtable{ 
    SaveDestructableHandle(this458, parentKey317, childKey111, value280)
    return this458
}


function saveDialogHandle(hashtable this686, integer parentKey320, integer childKey324, dialog value164) returns hashtable{ 
    SaveDialogHandle(this686, parentKey320, childKey324, value164)
    return this686
}


function saveEffectHandle(hashtable this163, integer parentKey289, integer childKey228, effect value205) returns hashtable{ 
    SaveEffectHandle(this163, parentKey289, childKey228, value205)
    return this163
}


function saveFogModifierHandle(hashtable this240, integer parentKey228, integer childKey124, fogmodifier value170) returns hashtable{ 
    SaveFogModifierHandle(this240, parentKey228, childKey124, value170)
    return this240
}


function saveFogStateHandle(hashtable this622, integer parentKey513, integer childKey218, fogstate value782) returns hashtable{ 
    SaveFogStateHandle(this622, parentKey513, childKey218, value782)
    return this622
}


function saveForceHandle(hashtable this311, integer parentKey166, integer childKey220, force value687) returns hashtable{ 
    SaveForceHandle(this311, parentKey166, childKey220, value687)
    return this311
}


function saveGroupHandle(hashtable this945, integer parentKey210, integer childKey404, group value323) returns hashtable{ 
    SaveGroupHandle(this945, parentKey210, childKey404, value323)
    return this945
}


function saveImageHandle(hashtable this237, integer parentKey410, integer childKey372, image value573) returns hashtable{ 
    SaveImageHandle(this237, parentKey410, childKey372, value573)
    return this237
}


function saveInt(hashtable this320, integer parentKey139, integer childKey173, integer value778) returns hashtable{ 
    SaveInteger(this320, parentKey139, childKey173, value778)
    return this320
}


function saveItemHandle(hashtable this252, integer parentKey177, integer childKey122, item value322) returns hashtable{ 
    SaveItemHandle(this252, parentKey177, childKey122, value322)
    return this252
}


function saveItemPoolHandle(hashtable this885, integer parentKey967, integer childKey369, itempool value321) returns hashtable{ 
    SaveItemPoolHandle(this885, parentKey967, childKey369, value321)
    return this885
}


function saveLeaderboardHandle(hashtable this311, integer parentKey256, integer childKey323, leaderboard value169) returns hashtable{ 
    SaveLeaderboardHandle(this311, parentKey256, childKey323, value169)
    return this311
}


function saveFogStateHandle(hashtable this170, integer parentKey578, integer childKey302, fogstate value290) returns hashtable{ 
    SaveFogStateHandle(this170, parentKey578, childKey302, value290)
    return this170
}


function saveLightningHandle(hashtable this123, integer parentKey114, integer childKey278, lightning value265) returns hashtable{ 
    SaveLightningHandle(this123, parentKey114, childKey278, value265)
    return this123
}


function saveLocationHandle(hashtable this163, integer parentKey167, integer childKey155, location value315) returns hashtable{ 
    SaveLocationHandle(this163, parentKey167, childKey155, value315)
    return this163
}


function saveImageHandle(hashtable this248, integer parentKey284, integer childKey316, image value258) returns hashtable{ 
    SaveImageHandle(this248, parentKey284, childKey316, value258)
    return this248
}


function saveMultiboardHandle(hashtable this334, integer parentKey577, integer childKey733, multiboard value323) returns hashtable{ 
    SaveMultiboardHandle(this334, parentKey577, childKey733, value323)
    return this334
}


function saveFogModifierHandle(hashtable this254, integer parentKey156, integer childKey324, fogmodifier value559) returns hashtable{ 
    SaveFogModifierHandle(this254, parentKey156, childKey324, value559)
    return this254
}


function saveFogStateHandle(hashtable this445, integer parentKey815, integer childKey107, fogstate value189) returns hashtable{ 
    SaveFogStateHandle(this445, parentKey815, childKey107, value189)
    return this445
}


function saveForceHandle(hashtable this159, integer parentKey230, integer childKey396, force value100) returns hashtable{ 
    SaveForceHandle(this159, parentKey230, childKey396, value100)
    return this159
}


function saveItemHandle(hashtable this314, integer parentKey146, integer childKey146, item value316) returns hashtable{ 
    SaveItemHandle(this314, parentKey146, childKey146, value316)
    return this314
}


function savePlayerHandle(hashtable this190, integer parentKey367, integer childKey121, player value129) returns hashtable{ 
    SavePlayerHandle(this190, parentKey367, childKey121, value129)
    return this190
}


function saveQuestHandle(hashtable this309, integer parentKey215, integer childKey310, quest value961) returns hashtable{ 
    SaveQuestHandle(this309, parentKey215, childKey310, value961)
    return this309
}


function saveQuestItemHandle(hashtable this118, integer parentKey248, integer childKey579, questitem value510) returns hashtable{ 
    SaveQuestItemHandle(this118, parentKey248, childKey579, value510)
    return this118
}


function saveReal(hashtable this963, integer parentKey286, integer childKey241, real value228) returns hashtable{ 
    SaveReal(this963, parentKey286, childKey241, value228)
    return this963
}


function saveRectHandle(hashtable this602, integer parentKey161, integer childKey436, rect value142) returns hashtable{ 
    SaveRectHandle(this602, parentKey161, childKey436, value142)
    return this602
}


function saveRegionHandle(hashtable this355, integer parentKey234, integer childKey442, region value121) returns hashtable{ 
    SaveRegionHandle(this355, parentKey234, childKey442, value121)
    return this355
}


function saveSoundHandle(hashtable this318, integer parentKey304, integer childKey359, sound value148) returns hashtable{ 
    SaveSoundHandle(this318, parentKey304, childKey359, value148)
    return this318
}


function saveString(hashtable this335, integer parentKey181, integer childKey309, string value138) returns hashtable{ 
    SaveStr(this335, parentKey181, childKey309, value138)
    return this335
}


function saveTextTagHandle(hashtable this177, integer parentKey173, integer childKey235, texttag value124) returns hashtable{ 
    SaveTextTagHandle(this177, parentKey173, childKey235, value124)
    return this177
}


function saveTimerDialogHandle(hashtable this187, integer parentKey277, integer childKey170, timerdialog value147) returns hashtable{ 
    SaveTimerDialogHandle(this187, parentKey277, childKey170, value147)
    return this187
}


function saveTimerHandle(hashtable this101, integer parentKey815, integer childKey246, timer value512) returns hashtable{ 
    SaveTimerHandle(this101, parentKey815, childKey246, value512)
    return this101
}


function saveTrackableHandle(hashtable this209, integer parentKey137, integer childKey243, trackable value771) returns hashtable{ 
    SaveTrackableHandle(this209, parentKey137, childKey243, value771)
    return this209
}


function saveTriggerActionHandle(hashtable this764, integer parentKey230, integer childKey196, triggeraction value210) returns hashtable{ 
    SaveTriggerActionHandle(this764, parentKey230, childKey196, value210)
    return this764
}


function saveTriggerConditionHandle(hashtable this350, integer parentKey260, integer childKey375, triggercondition value112) returns hashtable{ 
    SaveTriggerConditionHandle(this350, parentKey260, childKey375, value112)
    return this350
}


function saveTriggerEventHandle(hashtable this982, integer parentKey280, integer childKey121, event value257) returns hashtable{ 
    SaveTriggerEventHandle(this982, parentKey280, childKey121, value257)
    return this982
}


function saveTriggerHandle(hashtable this189, integer parentKey308, integer childKey284, trigger value138) returns hashtable{ 
    SaveTriggerHandle(this189, parentKey308, childKey284, value138)
    return this189
}


function saveUbersplatHandle(hashtable this311, integer parentKey190, integer childKey224, ubersplat value313) returns hashtable{ 
    SaveUbersplatHandle(this311, parentKey190, childKey224, value313)
    return this311
}


function saveUnitHandle(hashtable this489, integer parentKey101, integer childKey259, unit value134) returns hashtable{ 
    SaveUnitHandle(this489, parentKey101, childKey259, value134)
    return this489
}


function saveUnitPoolHandle(hashtable this100, integer parentKey285, integer childKey114, unitpool value321) returns hashtable{ 
    SaveUnitPoolHandle(this100, parentKey285, childKey114, value321)
    return this100
}


function saveWidgetHandle(hashtable this207, integer parentKey338, integer childKey743, widget value487) returns hashtable{ 
    SaveWidgetHandle(this207, parentKey338, childKey743, value487)
    return this207
}


function flushChild(hashtable this244, integer parentKey200) returns void{ 
    FlushChildHashtable(this244, parentKey200)
}


function flush(hashtable this154) returns void{ 
    FlushParentHashtable(this154)
}


function convertUnitTypeToInt(unittype ut225) returns integer{ 
    if (ut225 == UNIT_TYPE_HERO198){
        return 0
    } else {
        if (ut225 == UNIT_TYPE_DEAD121){
            return 1
        } else {
            if (ut225 == UNIT_TYPE_STRUCTURE273){
                return 2
            } else {
                if (ut225 == UNIT_TYPE_FLYING603){
                    return 3
                } else {
                    if (ut225 == UNIT_TYPE_STRUCTURE273){
                        return 2
                    } else {
                        if (ut225 == UNIT_TYPE_ATTACKS_FLYING150){
                            return 5
                        } else {
                            if (ut225 == UNIT_TYPE_ATTACKS_GROUND209){
                                return 6
                            } else {
                                if (ut225 == UNIT_TYPE_MELEE_ATTACKER167){
                                    return 7
                                } else {
                                    if (ut225 == UNIT_TYPE_RANGED_ATTACKER178){
                                        return 8
                                    } else {
                                        if (ut225 == UNIT_TYPE_GIANT768){
                                            return 9
                                        } else {
                                            if (ut225 == UNIT_TYPE_SUMMONED287){
                                                return 10
                                            } else {
                                                if (ut225 == UNIT_TYPE_STUNNED232){
                                                    return 11
                                                } else {
                                                    if (ut225 == UNIT_TYPE_PLAGUED282){
                                                        return 12
                                                    } else {
                                                        if (ut225 == UNIT_TYPE_SNARED267){
                                                            return 13
                                                        } else {
                                                            if (ut225 == UNIT_TYPE_UNDEAD171){
                                                                return 14
                                                            } else {
                                                                if (ut225 == UNIT_TYPE_MECHANICAL193){
                                                                    return 15
                                                                } else {
                                                                    if (ut225 == UNIT_TYPE_PEON162){
                                                                        return 16
                                                                    } else {
                                                                        if (ut225 == UNIT_TYPE_SAPPER327){
                                                                            return 17
                                                                        } else {
                                                                            if (ut225 == UNIT_TYPE_TOWNHALL693){
                                                                                return 18
                                                                            } else {
                                                                                if (ut225 == UNIT_TYPE_ANCIENT165){
                                                                                    return 19
                                                                                } else {
                                                                                    if (ut225 == UNIT_TYPE_TAUREN153){
                                                                                        return 20
                                                                                    } else {
                                                                                        if (ut225 == UNIT_TYPE_POISONED276){
                                                                                            return 21
                                                                                        } else {
                                                                                            if (ut225 == UNIT_TYPE_POLYMORPHED216){
                                                                                                return 22
                                                                                            } else {
                                                                                                if (ut225 == UNIT_TYPE_SLEEPING327){
                                                                                                    return 23
                                                                                                } else {
                                                                                                    if (ut225 == UNIT_TYPE_RESISTANT144){
                                                                                                        return 24
                                                                                                    } else {
                                                                                                        if (ut225 == UNIT_TYPE_ETHEREAL314){
                                                                                                            return 25
                                                                                                        } else {
                                                                                                            if (ut225 == UNIT_TYPE_MAGIC_IMMUNE166){
                                                                                                                return 26
                                                                                                            } else {
                                                                                                                return (- 1)
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}


function setLength(<real, real, real> this153, real length334) returns <real, real, real>{ 
    local real l106
    l106 = SquareRoot((((this153#0 * this153#0) + (this153#1 * this153#1)) + (this153#2 * this153#2)))
    if (l106 == 0.0){
        printError("vector.setLength error: The length of the vector is 0.0!")
        return <0., 0., 0.>
    } else {
    }
    l106 = (length334 / l106)
    return <(this153#0 * l106), (this153#1 * l106), (this153#2 * l106)>
}


function op_plus(<real, real, real> this135, <real, real, real> v330) returns <real, real, real>{ 
    return <(this135#0 + v330#0), (this135#1 + v330#1), (this135#2 + v330#2)>
}


function op_minus(<real, real, real> this313, <real, real, real> v220) returns <real, real, real>{ 
    return <(this313#0 - v220#0), (this313#1 - v220#1), (this313#2 - v220#2)>
}


function addVec2(<real, real, real> this253, <real, real> v105) returns <real, real, real>{ 
    return <(this253#0 + v105#0), (this253#1 + v105#1), this253#2>
}


function addReals(<real, real, real> this298, real x903, real y303, real z223) returns <real, real, real>{ 
    return <(this298#0 + x903), (this298#1 + y303), (this298#2 + z223)>
}


function sub(<real, real, real> this728, <real, real, real> v199) returns <real, real, real>{ 
    return <(this728#0 - v199#0), (this728#1 - v199#1), (this728#2 - v199#2)>
}


function subVec2(<real, real, real> this196, <real, real> v815) returns <real, real, real>{ 
    return <(this196#0 - v815#0), (this196#1 - v815#1), this196#2>
}


function scale(<real, real, real> this168, real factor290) returns <real, real, real>{ 
    return <(this168#0 * factor290), (this168#1 * factor290), (this168#2 * factor290)>
}


function scaleXY(<real, real, real> this257, real factor278) returns <real, real, real>{ 
    return <(this257#0 * factor278), (this257#1 * factor278), this257#2>
}


function cross(<real, real, real> this237, <real, real, real> v165) returns <real, real, real>{ 
    return <((this237#1 * v165#2) - (this237#2 * v165#1)), ((this237#2 * v165#0) - (this237#0 * v165#2)), ((this237#0 * v165#1) - (this237#1 * v165#0))>
}


function dot(<real, real, real> this227, <real, real, real> v219) returns real{ 
    return (((this227#0 * v219#0) + (this227#1 * v219#1)) + (this227#2 * v219#2))
}


function op_mult(<real, real, real> this462, real factor224) returns <real, real, real>{ 
    return <(this462#0 * factor224), (this462#1 * factor224), (this462#2 * factor224)>
}


function project(<real, real, real> this688, <real, real, real> direction574) returns <real, real, real>{ 
    local real l356
    l356 = (((direction574#0 * direction574#0) + (direction574#1 * direction574#1)) + (direction574#2 * direction574#2))
    if (l356 == 0.0){
        printError("vector.projectVector error: The length of the direction vector is 0.0!")
        return <0., 0., 0.>
    } else {
    }
    l356 = ((((this688#0 * direction574#0) + (this688#1 * direction574#1)) + (this688#2 * direction574#2)) / l356)
    return <(direction574#0 * l356), (direction574#1 * l356), (direction574#2 * l356)>
}


function norm(<real, real, real> this304) returns <real, real, real>{ 
    local real len132
    local real x223
    local real y175
    local real z307
    len132 = length(this304)
    x223 = 0.
    y175 = 0.
    z307 = 0.
    if (len132 != 0.0){
        x223 = (this304#0 / len132)
        y175 = (this304#1 / len132)
        z307 = (this304#2 / len132)
    } else {
    }
    return <x223, y175, z307>
}


function length(<real, real, real> this326) returns real{ 
    return SquareRoot((((this326#0 * this326#0) + (this326#1 * this326#1)) + (this326#2 * this326#2)))
}


function trim(<real, real, real> this146, real value213) returns <real, real, real>{ 
    local <real, real, real> result102
    result102 = this146
    if ((result102#0 > (- value213)) and (result102#0 < value213)){
        result102 #0 = 0.
    } else {
    }
    if ((result102#1 > (- value213)) and (result102#1 < value213)){
        result102 #1 = 0.
    } else {
    }
    if ((result102#2 > (- value213)) and (result102#2 < value213)){
        result102 #2 = 0.
    } else {
    }
    return result102
}


function toVec2(<real, real, real> this157) returns <real, real>{ 
    return <this157#0, this157#1>
}


function lengthXY(<real, real, real> this221) returns real{ 
    return SquareRoot(((this221#0 * this221#0) + (this221#1 * this221#1)))
}


function toString(<real, real, real> this594) returns string{ 
    return (((((("Vector3 [ " + toString(this594#0)) + ", ") + toString(this594#1)) + ", ") + toString(this594#2)) + " ]")
}


function add(<real, real> this124, <real, real> v296) returns <real, real>{ 
    return <(this124#0 + v296#0), (this124#1 + v296#1)>
}


function sub(<real, real> this932, <real, real> v198) returns <real, real>{ 
    return <(this932#0 - v198#0), (this932#1 - v198#1)>
}


function scale(<real, real> this164, real factor178) returns <real, real>{ 
    return <(this164#0 * factor178), (this164#1 * factor178)>
}


function norm(<real, real> this277) returns <real, real>{ 
    local real len704
    local real x301
    local real y228
    len704 = length(this277)
    x301 = 0.
    y228 = 0.
    if (len704 != 0.0){
        x301 = (this277#0 / len704)
        y228 = (this277#1 / len704)
    } else {
    }
    return <x301, y228>
}


function length(<real, real> this310) returns real{ 
    return SquareRoot(((this310#0 * this310#0) + (this310#1 * this310#1)))
}


function dot(<real, real> this320, <real, real> v176) returns real{ 
    return ((this320#0 * v176#0) + (this320#1 * v176#1))
}


function trim(<real, real> this290, real value118) returns <real, real>{ 
    local <real, real> result109
    result109 = this290
    if ((result109#0 > (- value118)) and (result109#0 < value118)){
        result109 #0 = 0.
    } else {
    }
    if ((this290#1 > (- value118)) and (this290#1 < value118)){
        result109 #1 = 0.
    } else {
    }
    return result109
}


function toString(<real, real> this805) returns string{ 
    return (((("Vector2 [ " + toString(this805#0)) + ", ") + toString(this805#1)) + " ]")
}


function op_plus(<real, real> this292, <real, real> v108) returns <real, real>{ 
    return <(this292#0 + v108#0), (this292#1 + v108#1)>
}


function op_minus(<real, real> this788, <real, real> v142) returns <real, real>{ 
    return <(this788#0 - v142#0), (this788#1 - v142#1)>
}


function op_mult(<real, real> this417, real factor195) returns <real, real>{ 
    return <(this417#0 * factor195), (this417#1 * factor195)>
}


function getPos(unit this309) returns <real, real>{ 
    return <getX(this309), getY(this309)>
}


function angleTo(<real, real> this898, <real, real> v232) returns real{ 
    return Atan2((v232#1 - this898#1), (v232#0 - this898#0))
}


function polarOffset(<real, real> this213, real angle101, real dist278) returns <real, real>{ 
    return <(this213#0 + (Cos(angle101) * dist278)), (this213#1 + (Sin(angle101) * dist278))>
}


function polarProjectionX(real x238, real dist231, real angle410) returns real{ 
    return (x238 + (dist231 * Cos((angle410 * DEGTORAD414))))
}


function polarProjectionY(real y475, real dist231, real angle721) returns real{ 
    return (y475 + (dist231 * Sin((angle721 * DEGTORAD414))))
}


function polarProjectionZ(real z255, real dist553, real angle876) returns real{ 
    return (z255 + (dist553 * Sin((angle876 * DEGTORAD414))))
}


function angleBetweenCoords(real x1301, real y1140, real x2264, real y2170) returns real{ 
    return (RADTODEG191 * Atan2((y2170 - y1140), (x2264 - x1301)))
}


function distanceBetweenCoords(real x1334, real y1165, real x2211, real y2214) returns real{ 
    return SquareRoot((((x2211 - x1334) * (x2211 - x1334)) + ((y2214 - y1165) * (y2214 - y1165))))
}


function polarProjection3d(<real, real, real> pos164, real distance924, real angleGround144, real angleAir181) returns <real, real, real>{ 
    local real x317
    local real y165
    local real z199
    x317 = (pos164#0 + ((distance924 * Cos(angleGround144)) * Sin(angleAir181)))
    y165 = (pos164#1 + ((distance924 * Sin(angleGround144)) * Sin(angleAir181)))
    z199 = (pos164#2 + (distance924 * Cos(angleAir181)))
    return <x317, y165, z199>
}


function Table_loadInt(integer this107, integer parentKey859) returns integer{ 
    return loadInt(ht203, this107, parentKey859)
}


function Table_saveInt(integer this204, integer parentKey226, integer value186) returns void{ 
    saveInt(ht203, this204, parentKey226, value186)
}


function Table_hasInt(integer this896, integer parentKey680) returns boolean{ 
    return hasInt(ht203, this896, parentKey680)
}


function Table_removeInt(integer this289, integer parentKey228) returns void{ 
    RemoveSavedInteger(ht203, this289, parentKey228)
}


function RemoveSavedInteger(hashtable table290, integer parentKey191, integer childKey299) returns void{ 
}


function Table_loadReal(integer this332, integer parentKey104) returns real{ 
    return loadReal(ht203, this332, parentKey104)
}


function Table_saveReal(integer this168, integer parentKey134, real value168) returns void{ 
    saveReal(ht203, this168, parentKey134, value168)
}


function Table_hasReal(integer this440, integer parentKey272) returns boolean{ 
    return hasReal(ht203, this440, parentKey272)
}


function Table_removeReal(integer this711, integer parentKey783) returns void{ 
    RemoveSavedReal(ht203, this711, parentKey783)
}


function RemoveSavedReal(hashtable table252, integer parentKey367, integer childKey463) returns void{ 
}


function Table_removeHandle(integer this426, integer parentKey331) returns void{ 
    RemoveSavedHandle(ht203, this426, parentKey331)
}


function RemoveSavedHandle(hashtable table574, integer parentKey301, integer childKey588) returns void{ 
}


function Table_loadPlayer(integer this165, integer parentKey149) returns player{ 
    return loadPlayerHandle(ht203, this165, parentKey149)
}


function Table_savePlayer(integer this405, integer parentKey211, player value547) returns void{ 
    savePlayerHandle(ht203, this405, parentKey211, value547)
}


function Table_loadWidget(integer this176, integer parentKey795) returns widget{ 
    return loadWidgetHandle(ht203, this176, parentKey795)
}


function Table_saveWidget(integer this212, integer parentKey288, widget value170) returns void{ 
    saveWidgetHandle(ht203, this212, parentKey288, value170)
}


function Table_loadUnit(integer this684, integer parentKey362) returns unit{ 
    return loadUnitHandle(ht203, this684, parentKey362)
}


function Table_saveUnit(integer this177, integer parentKey789, unit value149) returns void{ 
    saveUnitHandle(ht203, this177, parentKey789, value149)
}


function Table_loadDestructable(integer this549, integer parentKey755) returns destructable{ 
    return loadDestructableHandle(ht203, this549, parentKey755)
}


function Table_saveDestructable(integer this745, integer parentKey109, destructable value188) returns void{ 
    saveDestructableHandle(ht203, this745, parentKey109, value188)
}


function Table_loadItem(integer this202, integer parentKey315) returns item{ 
    return loadItemHandle(ht203, this202, parentKey315)
}


function Table_saveItem(integer this147, integer parentKey160, item value259) returns void{ 
    saveItemHandle(ht203, this147, parentKey160, value259)
}


function Table_loadAbility(integer this754, integer parentKey204) returns ability{ 
    return loadAbilityHandle(ht203, this754, parentKey204)
}


function Table_saveAbility(integer this870, integer parentKey120, ability value333) returns void{ 
    saveAbilityHandle(ht203, this870, parentKey120, value333)
}


function Table_loadForce(integer this209, integer parentKey147) returns force{ 
    return loadForceHandle(ht203, this209, parentKey147)
}


function Table_saveForce(integer this242, integer parentKey201, force value140) returns void{ 
    saveForceHandle(ht203, this242, parentKey201, value140)
}


function Table_loadGroup(integer this315, integer parentKey599) returns group{ 
    return loadGroupHandle(ht203, this315, parentKey599)
}


function Table_saveGroup(integer this113, integer parentKey283, group value497) returns void{ 
    saveGroupHandle(ht203, this113, parentKey283, value497)
}


function Table_loadTrigger(integer this148, integer parentKey215) returns trigger{ 
    return loadTriggerHandle(ht203, this148, parentKey215)
}


function Table_saveTrigger(integer this290, integer parentKey144, trigger value174) returns void{ 
    saveTriggerHandle(ht203, this290, parentKey144, value174)
}


function Table_loadTimer(integer this143, integer parentKey744) returns timer{ 
    return loadTimerHandle(ht203, this143, parentKey744)
}


function Table_saveTimer(integer this232, integer parentKey201, timer value420) returns void{ 
    saveTimerHandle(ht203, this232, parentKey201, value420)
}


function Table_loadLocation(integer this160, integer parentKey265) returns location{ 
    return loadLocationHandle(ht203, this160, parentKey265)
}


function Table_saveLocation(integer this277, integer parentKey136, location value252) returns void{ 
    saveLocationHandle(ht203, this277, parentKey136, value252)
}


function Table_loadRegion(integer this299, integer parentKey317) returns region{ 
    return loadRegionHandle(ht203, this299, parentKey317)
}


function Table_saveRegion(integer this313, integer parentKey121, region value194) returns void{ 
    saveRegionHandle(ht203, this313, parentKey121, value194)
}


function Table_loadRect(integer this138, integer parentKey267) returns rect{ 
    return loadRectHandle(ht203, this138, parentKey267)
}


function Table_saveRect(integer this313, integer parentKey123, rect value161) returns void{ 
    saveRectHandle(ht203, this313, parentKey123, value161)
}


function Table_loadSound(integer this316, integer parentKey704) returns sound{ 
    return loadSoundHandle(ht203, this316, parentKey704)
}


function Table_saveSound(integer this962, integer parentKey805, sound value210) returns void{ 
    saveSoundHandle(ht203, this962, parentKey805, value210)
}


function Table_loadEffect(integer this505, integer parentKey313) returns effect{ 
    return loadEffectHandle(ht203, this505, parentKey313)
}


function Table_saveEffect(integer this212, integer parentKey142, effect value120) returns void{ 
    saveEffectHandle(ht203, this212, parentKey142, value120)
}


function Table_loadDialog(integer this135, integer parentKey324) returns dialog{ 
    return loadDialogHandle(ht203, this135, parentKey324)
}


function Table_saveDialog(integer this314, integer parentKey221, dialog value185) returns void{ 
    saveDialogHandle(ht203, this314, parentKey221, value185)
}


function Table_loadButton(integer this930, integer parentKey815) returns button{ 
    return loadButtonHandle(ht203, this930, parentKey815)
}


function Table_saveButton(integer this209, integer parentKey231, button value118) returns void{ 
    saveButtonHandle(ht203, this209, parentKey231, value118)
}


function Table_loadQuest(integer this884, integer parentKey179) returns quest{ 
    return loadQuestHandle(ht203, this884, parentKey179)
}


function Table_saveQuest(integer this403, integer parentKey149, quest value234) returns void{ 
    saveQuestHandle(ht203, this403, parentKey149, value234)
}


function Table_loadLeaderboard(integer this216, integer parentKey664) returns leaderboard{ 
    return loadLeaderboardHandle(ht203, this216, parentKey664)
}


function Table_saveLeaderboard(integer this202, integer parentKey258, leaderboard value130) returns void{ 
    saveLeaderboardHandle(ht203, this202, parentKey258, value130)
}


function Table_loadMultiboard(integer this122, integer parentKey123) returns multiboard{ 
    return loadMultiboardHandle(ht203, this122, parentKey123)
}


function Table_saveMultiboard(integer this311, integer parentKey135, multiboard value142) returns void{ 
    saveMultiboardHandle(ht203, this311, parentKey135, value142)
}


function Table_loadTrackable(integer this211, integer parentKey248) returns trackable{ 
    return loadTrackableHandle(ht203, this211, parentKey248)
}


function Table_saveTrackable(integer this584, integer parentKey287, trackable value299) returns void{ 
    saveTrackableHandle(ht203, this584, parentKey287, value299)
}


function Table_loadLightning(integer this810, integer parentKey199) returns lightning{ 
    return loadLightningHandle(ht203, this810, parentKey199)
}


function Table_saveLightning(integer this130, integer parentKey325, lightning value304) returns void{ 
    saveLightningHandle(ht203, this130, parentKey325, value304)
}


function Table_loadImage(integer this100, integer parentKey232) returns image{ 
    return loadImageHandle(ht203, this100, parentKey232)
}


function Table_saveImage(integer this318, integer parentKey258, image value230) returns void{ 
    saveImageHandle(ht203, this318, parentKey258, value230)
}


function Table_loadUbersplat(integer this112, integer parentKey255) returns ubersplat{ 
    return loadUbersplatHandle(ht203, this112, parentKey255)
}


function Table_saveUbersplat(integer this783, integer parentKey211, ubersplat value162) returns void{ 
    saveUbersplatHandle(ht203, this783, parentKey211, value162)
}


function Table_flush(integer this148) returns void{ 
    FlushChildHashtable(ht203, this148)
}


function new_Table() returns integer{ 
    local integer this144
    if (Table_firstFree195 > 0){
        this144 = Table_firstFree195
        Table_firstFree195 = Table_nextFree254[this144]
    } else {
        Table_maxIndex330 = (Table_maxIndex330 + 1)
        this144 = Table_maxIndex330
    }
    Table_nextFree254[this144] = -1
    Table_typeId322[this144] = 1
    construct_Table(this144)
    return this144
}


function construct_Table(integer this204) returns void{ 
}


function destroyTable(integer this282) returns void{ 
    Table_flush(this282)
    if (Table_nextFree254[this282] < 0){
        Table_nextFree254[this282] = Table_firstFree195
        Table_firstFree195 = this282
    } else {
        $debugPrint("Double Free of Table")
    }
}


function registerUnitInRangeSource(trigger this113, unit whichUnit312, real range313) returns event{ 
    local integer h469
    local integer u212
    h469 = GetHandleId(this113)
    u212 = GetHandleId(whichUnit312)
    Table_saveUnit(triggerData135, h469, whichUnit312)
    Table_saveTrigger(triggerData135, u212, this113)
    return TriggerRegisterUnitInRange(this113, whichUnit312, range313, null)
}


function getSource(trigger this224) returns unit{ 
    return Table_loadUnit(triggerData135, GetHandleId(this224))
}


function clearRegister(unit this184) returns void{ 
    local integer h247
    local trigger t303
    local integer th164
    h247 = GetHandleId(this184)
    t303 = Table_loadTrigger(triggerData135, h247)
    th164 = GetHandleId(t303)
    DestroyTrigger(t303)
    Table_removeHandle(triggerData135, h247)
    Table_removeHandle(triggerData135, th164)
}


function DestroyTrigger(trigger whichTrigger153) returns void{ 
}


function enable(trigger this115) returns trigger{ 
    EnableTrigger(this115)
    return this115
}


function EnableTrigger(trigger whichTrigger533) returns void{ 
}


function disable(trigger this199) returns trigger{ 
    DisableTrigger(this199)
    return this199
}


function DisableTrigger(trigger whichTrigger200) returns void{ 
}


function destr(trigger this282) returns void{ 
    DestroyTrigger(this282)
}


function reset(trigger this251) returns trigger{ 
    ResetTrigger(this251)
    return this251
}


function ResetTrigger(trigger whichTrigger675) returns void{ 
}


function addAction(trigger this146, code actionFunc120) returns trigger{ 
    TriggerAddAction(this146, actionFunc120)
    return this146
}


function addCondition(trigger this203, boolexpr condition368) returns trigger{ 
    TriggerAddCondition(this203, condition368)
    return this203
}


function TriggerAddCondition(trigger whichTrigger146, boolexpr condition193) returns triggercondition{ 
}


function evaluate(trigger this291) returns trigger{ 
    TriggerEvaluate(this291)
    return this291
}


function execute(trigger this169) returns trigger{ 
    TriggerExecute(this169)
    return this169
}


function registerAnyUnitEvent(trigger this553, playerunitevent whichEvent128) returns trigger{ 
    TriggerRegisterAnyUnitEventBJ(this553, whichEvent128)
    return this553
}


function compileError(string msg742) returns void{ 
}


function createUnitType(string newId223, string deriveFrom274) returns <string>{ 
    return <"">
}


function setInt(<string> this383, string modification242, integer value103) returns void{ 
    null
}


function createTestUnit() returns void{ 
    local <string> u171
    u171 = createUnitType("h000", "hfoo")
    setInt(u171, "ua1b", 42)
}


function config() returns void{ 
    SetMapName("TRIGSTR_001")
    SetMapDescription("TRIGSTR_003")
    SetPlayers(12)
    SetTeams(12)
    SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER179)
    DefineStartLocation(0, (- 128.0), (- 64.0))
    DefineStartLocation(1, (- 128.0), (- 64.0))
    DefineStartLocation(2, (- 128.0), (- 64.0))
    DefineStartLocation(3, (- 128.0), (- 64.0))
    DefineStartLocation(4, (- 128.0), (- 64.0))
    DefineStartLocation(5, (- 128.0), (- 64.0))
    DefineStartLocation(6, (- 128.0), (- 64.0))
    DefineStartLocation(7, (- 128.0), (- 64.0))
    DefineStartLocation(8, (- 128.0), (- 64.0))
    DefineStartLocation(9, (- 128.0), (- 64.0))
    DefineStartLocation(10, (- 128.0), (- 64.0))
    DefineStartLocation(11, (- 128.0), (- 64.0))
    InitCustomPlayerSlots()
    InitCustomTeams()
    InitAllyPriorities()
}


function SetMapName(string name413) returns void{ 
}


function SetMapDescription(string description210) returns void{ 
}


function SetGamePlacement(placement whichPlacementType880) returns void{ 
}


function DefineStartLocation(integer whichStartLoc319, real x199, real y174) returns void{ 
}


function InitCustomPlayerSlots() returns void{ 
    SetPlayerStartLocation(Player(0), 0)
    ForcePlayerStartLocation(Player(0), 0)
    SetPlayerColor(Player(0), ConvertPlayerColor(0))
    SetPlayerRacePreference(Player(0), RACE_PREF_HUMAN158)
    SetPlayerRaceSelectable(Player(0), false)
    SetPlayerController(Player(0), MAP_CONTROL_USER160)
    SetPlayerStartLocation(Player(1), 1)
    ForcePlayerStartLocation(Player(1), 1)
    SetPlayerColor(Player(1), ConvertPlayerColor(1))
    SetPlayerRacePreference(Player(1), RACE_PREF_HUMAN158)
    SetPlayerRaceSelectable(Player(1), false)
    SetPlayerController(Player(1), MAP_CONTROL_USER160)
    SetPlayerStartLocation(Player(2), 2)
    ForcePlayerStartLocation(Player(2), 2)
    SetPlayerColor(Player(2), ConvertPlayerColor(2))
    SetPlayerRacePreference(Player(2), RACE_PREF_HUMAN158)
    SetPlayerRaceSelectable(Player(2), false)
    SetPlayerController(Player(2), MAP_CONTROL_USER160)
    SetPlayerStartLocation(Player(3), 3)
    ForcePlayerStartLocation(Player(3), 3)
    SetPlayerColor(Player(3), ConvertPlayerColor(3))
    SetPlayerRacePreference(Player(3), RACE_PREF_HUMAN158)
    SetPlayerRaceSelectable(Player(3), false)
    SetPlayerController(Player(3), MAP_CONTROL_USER160)
    SetPlayerStartLocation(Player(4), 4)
    ForcePlayerStartLocation(Player(4), 4)
    SetPlayerColor(Player(4), ConvertPlayerColor(4))
    SetPlayerRacePreference(Player(4), RACE_PREF_HUMAN158)
    SetPlayerRaceSelectable(Player(4), false)
    SetPlayerController(Player(4), MAP_CONTROL_USER160)
    SetPlayerStartLocation(Player(5), 5)
    ForcePlayerStartLocation(Player(5), 5)
    SetPlayerColor(Player(5), ConvertPlayerColor(5))
    SetPlayerRacePreference(Player(5), RACE_PREF_HUMAN158)
    SetPlayerRaceSelectable(Player(5), false)
    SetPlayerController(Player(5), MAP_CONTROL_USER160)
    SetPlayerStartLocation(Player(6), 6)
    ForcePlayerStartLocation(Player(6), 6)
    SetPlayerColor(Player(6), ConvertPlayerColor(6))
    SetPlayerRacePreference(Player(6), RACE_PREF_HUMAN158)
    SetPlayerRaceSelectable(Player(6), false)
    SetPlayerController(Player(6), MAP_CONTROL_USER160)
    SetPlayerStartLocation(Player(7), 7)
    ForcePlayerStartLocation(Player(7), 7)
    SetPlayerColor(Player(7), ConvertPlayerColor(7))
    SetPlayerRacePreference(Player(7), RACE_PREF_HUMAN158)
    SetPlayerRaceSelectable(Player(7), false)
    SetPlayerController(Player(7), MAP_CONTROL_USER160)
    SetPlayerStartLocation(Player(8), 8)
    ForcePlayerStartLocation(Player(8), 8)
    SetPlayerColor(Player(8), ConvertPlayerColor(8))
    SetPlayerRacePreference(Player(8), RACE_PREF_HUMAN158)
    SetPlayerRaceSelectable(Player(8), false)
    SetPlayerController(Player(8), MAP_CONTROL_USER160)
    SetPlayerStartLocation(Player(9), 9)
    ForcePlayerStartLocation(Player(9), 9)
    SetPlayerColor(Player(9), ConvertPlayerColor(9))
    SetPlayerRacePreference(Player(9), RACE_PREF_HUMAN158)
    SetPlayerRaceSelectable(Player(9), false)
    SetPlayerController(Player(9), MAP_CONTROL_USER160)
    SetPlayerStartLocation(Player(10), 10)
    ForcePlayerStartLocation(Player(10), 10)
    SetPlayerColor(Player(10), ConvertPlayerColor(10))
    SetPlayerRacePreference(Player(10), RACE_PREF_HUMAN158)
    SetPlayerRaceSelectable(Player(10), false)
    SetPlayerController(Player(10), MAP_CONTROL_USER160)
    SetPlayerStartLocation(Player(11), 11)
    ForcePlayerStartLocation(Player(11), 11)
    SetPlayerColor(Player(11), ConvertPlayerColor(11))
    SetPlayerRacePreference(Player(11), RACE_PREF_HUMAN158)
    SetPlayerRaceSelectable(Player(11), false)
    SetPlayerController(Player(11), MAP_CONTROL_COMPUTER289)
}


function InitCustomTeams() returns void{ 
    SetPlayerTeam(Player(0), 0)
    SetPlayerState(Player(0), PLAYER_STATE_ALLIED_VICTORY212, 1)
    SetPlayerTeam(Player(1), 0)
    SetPlayerState(Player(1), PLAYER_STATE_ALLIED_VICTORY212, 1)
    SetPlayerTeam(Player(2), 0)
    SetPlayerState(Player(2), PLAYER_STATE_ALLIED_VICTORY212, 1)
    SetPlayerTeam(Player(3), 0)
    SetPlayerState(Player(3), PLAYER_STATE_ALLIED_VICTORY212, 1)
    SetPlayerTeam(Player(4), 0)
    SetPlayerState(Player(4), PLAYER_STATE_ALLIED_VICTORY212, 1)
    SetPlayerTeam(Player(5), 0)
    SetPlayerState(Player(5), PLAYER_STATE_ALLIED_VICTORY212, 1)
    SetPlayerTeam(Player(6), 0)
    SetPlayerState(Player(6), PLAYER_STATE_ALLIED_VICTORY212, 1)
    SetPlayerTeam(Player(7), 0)
    SetPlayerState(Player(7), PLAYER_STATE_ALLIED_VICTORY212, 1)
    SetPlayerAllianceStateAllyBJ(Player(0), Player(1), true)
    SetPlayerAllianceStateAllyBJ(Player(0), Player(2), true)
    SetPlayerAllianceStateAllyBJ(Player(0), Player(3), true)
    SetPlayerAllianceStateAllyBJ(Player(0), Player(4), true)
    SetPlayerAllianceStateAllyBJ(Player(0), Player(5), true)
    SetPlayerAllianceStateAllyBJ(Player(0), Player(6), true)
    SetPlayerAllianceStateAllyBJ(Player(0), Player(7), true)
    SetPlayerAllianceStateAllyBJ(Player(1), Player(0), true)
    SetPlayerAllianceStateAllyBJ(Player(1), Player(2), true)
    SetPlayerAllianceStateAllyBJ(Player(1), Player(3), true)
    SetPlayerAllianceStateAllyBJ(Player(1), Player(4), true)
    SetPlayerAllianceStateAllyBJ(Player(1), Player(5), true)
    SetPlayerAllianceStateAllyBJ(Player(1), Player(6), true)
    SetPlayerAllianceStateAllyBJ(Player(1), Player(7), true)
    SetPlayerAllianceStateAllyBJ(Player(2), Player(0), true)
    SetPlayerAllianceStateAllyBJ(Player(2), Player(1), true)
    SetPlayerAllianceStateAllyBJ(Player(2), Player(3), true)
    SetPlayerAllianceStateAllyBJ(Player(2), Player(4), true)
    SetPlayerAllianceStateAllyBJ(Player(2), Player(5), true)
    SetPlayerAllianceStateAllyBJ(Player(2), Player(6), true)
    SetPlayerAllianceStateAllyBJ(Player(2), Player(7), true)
    SetPlayerAllianceStateAllyBJ(Player(3), Player(0), true)
    SetPlayerAllianceStateAllyBJ(Player(3), Player(1), true)
    SetPlayerAllianceStateAllyBJ(Player(3), Player(2), true)
    SetPlayerAllianceStateAllyBJ(Player(3), Player(4), true)
    SetPlayerAllianceStateAllyBJ(Player(3), Player(5), true)
    SetPlayerAllianceStateAllyBJ(Player(3), Player(6), true)
    SetPlayerAllianceStateAllyBJ(Player(3), Player(7), true)
    SetPlayerAllianceStateAllyBJ(Player(4), Player(0), true)
    SetPlayerAllianceStateAllyBJ(Player(4), Player(1), true)
    SetPlayerAllianceStateAllyBJ(Player(4), Player(2), true)
    SetPlayerAllianceStateAllyBJ(Player(4), Player(3), true)
    SetPlayerAllianceStateAllyBJ(Player(4), Player(5), true)
    SetPlayerAllianceStateAllyBJ(Player(4), Player(6), true)
    SetPlayerAllianceStateAllyBJ(Player(4), Player(7), true)
    SetPlayerAllianceStateAllyBJ(Player(5), Player(0), true)
    SetPlayerAllianceStateAllyBJ(Player(5), Player(1), true)
    SetPlayerAllianceStateAllyBJ(Player(5), Player(2), true)
    SetPlayerAllianceStateAllyBJ(Player(5), Player(3), true)
    SetPlayerAllianceStateAllyBJ(Player(5), Player(4), true)
    SetPlayerAllianceStateAllyBJ(Player(5), Player(6), true)
    SetPlayerAllianceStateAllyBJ(Player(5), Player(7), true)
    SetPlayerAllianceStateAllyBJ(Player(6), Player(0), true)
    SetPlayerAllianceStateAllyBJ(Player(6), Player(1), true)
    SetPlayerAllianceStateAllyBJ(Player(6), Player(2), true)
    SetPlayerAllianceStateAllyBJ(Player(6), Player(3), true)
    SetPlayerAllianceStateAllyBJ(Player(6), Player(4), true)
    SetPlayerAllianceStateAllyBJ(Player(6), Player(5), true)
    SetPlayerAllianceStateAllyBJ(Player(6), Player(7), true)
    SetPlayerAllianceStateAllyBJ(Player(7), Player(0), true)
    SetPlayerAllianceStateAllyBJ(Player(7), Player(1), true)
    SetPlayerAllianceStateAllyBJ(Player(7), Player(2), true)
    SetPlayerAllianceStateAllyBJ(Player(7), Player(3), true)
    SetPlayerAllianceStateAllyBJ(Player(7), Player(4), true)
    SetPlayerAllianceStateAllyBJ(Player(7), Player(5), true)
    SetPlayerAllianceStateAllyBJ(Player(7), Player(6), true)
    SetPlayerTeam(Player(8), 1)
    SetPlayerState(Player(8), PLAYER_STATE_ALLIED_VICTORY212, 1)
    SetPlayerTeam(Player(9), 1)
    SetPlayerState(Player(9), PLAYER_STATE_ALLIED_VICTORY212, 1)
    SetPlayerTeam(Player(10), 1)
    SetPlayerState(Player(10), PLAYER_STATE_ALLIED_VICTORY212, 1)
    SetPlayerAllianceStateAllyBJ(Player(8), Player(9), true)
    SetPlayerAllianceStateAllyBJ(Player(8), Player(10), true)
    SetPlayerAllianceStateAllyBJ(Player(9), Player(8), true)
    SetPlayerAllianceStateAllyBJ(Player(9), Player(10), true)
    SetPlayerAllianceStateAllyBJ(Player(10), Player(8), true)
    SetPlayerAllianceStateAllyBJ(Player(10), Player(9), true)
    SetPlayerTeam(Player(11), 2)
    SetPlayerState(Player(11), PLAYER_STATE_ALLIED_VICTORY212, 1)
}


function InitAllyPriorities() returns void{ 
    SetStartLocPrioCount(0, 10)
    SetStartLocPrio(0, 0, 1, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(0, 1, 2, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(0, 2, 3, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(0, 3, 4, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(0, 4, 5, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(0, 5, 6, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(0, 6, 7, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(0, 7, 8, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(0, 8, 9, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(0, 9, 10, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrioCount(1, 10)
    SetStartLocPrio(1, 0, 0, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(1, 1, 2, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(1, 2, 3, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(1, 3, 4, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(1, 4, 5, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(1, 5, 6, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(1, 6, 7, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(1, 7, 8, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(1, 8, 9, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(1, 9, 10, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrioCount(2, 10)
    SetStartLocPrio(2, 0, 0, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(2, 1, 1, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(2, 2, 3, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(2, 3, 4, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(2, 4, 5, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(2, 5, 6, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(2, 6, 7, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(2, 7, 8, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(2, 8, 9, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(2, 9, 10, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrioCount(3, 10)
    SetStartLocPrio(3, 0, 0, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(3, 1, 1, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(3, 2, 2, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(3, 3, 4, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(3, 4, 5, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(3, 5, 6, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(3, 6, 7, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(3, 7, 8, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(3, 8, 9, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(3, 9, 10, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrioCount(4, 10)
    SetStartLocPrio(4, 0, 0, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(4, 1, 1, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(4, 2, 2, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(4, 3, 3, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(4, 4, 5, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(4, 5, 6, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(4, 6, 7, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(4, 7, 8, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(4, 8, 9, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(4, 9, 10, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrioCount(5, 10)
    SetStartLocPrio(5, 0, 0, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(5, 1, 1, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(5, 2, 2, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(5, 3, 3, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(5, 4, 4, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(5, 5, 6, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(5, 6, 7, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(5, 7, 8, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(5, 8, 9, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(5, 9, 10, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrioCount(6, 10)
    SetStartLocPrio(6, 0, 0, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(6, 1, 1, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(6, 2, 2, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(6, 3, 3, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(6, 4, 4, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(6, 5, 5, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(6, 6, 7, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(6, 7, 8, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(6, 8, 9, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(6, 9, 10, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrioCount(7, 10)
    SetStartLocPrio(7, 0, 0, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(7, 1, 1, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(7, 2, 2, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(7, 3, 3, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(7, 4, 4, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(7, 5, 5, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(7, 6, 6, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(7, 7, 8, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(7, 8, 9, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(7, 9, 10, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrioCount(8, 10)
    SetStartLocPrio(8, 0, 0, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(8, 1, 1, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(8, 2, 2, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(8, 3, 3, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(8, 4, 4, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(8, 5, 5, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(8, 6, 6, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(8, 7, 7, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(8, 8, 9, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(8, 9, 10, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrioCount(9, 10)
    SetStartLocPrio(9, 0, 0, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(9, 1, 1, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(9, 2, 2, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(9, 3, 3, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(9, 4, 4, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(9, 5, 5, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(9, 6, 6, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(9, 7, 7, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(9, 8, 8, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(9, 9, 10, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrioCount(10, 10)
    SetStartLocPrio(10, 0, 0, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(10, 1, 1, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(10, 2, 2, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(10, 3, 3, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(10, 4, 4, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(10, 5, 5, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(10, 6, 6, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(10, 7, 7, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(10, 8, 8, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(10, 9, 9, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrioCount(11, 3)
    SetStartLocPrio(11, 0, 8, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(11, 1, 9, MAP_LOC_PRIO_HIGH242)
    SetStartLocPrio(11, 2, 10, MAP_LOC_PRIO_HIGH242)
}


function main() returns void{ 
    initGlobals()
    SetCameraBounds(((- 7424.0) + GetCameraMargin(CAMERA_MARGIN_LEFT577)), ((- 7680.0) + GetCameraMargin(CAMERA_MARGIN_BOTTOM243)), (7424.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT168)), (7168.0 - GetCameraMargin(CAMERA_MARGIN_TOP324)), ((- 7424.0) + GetCameraMargin(CAMERA_MARGIN_LEFT577)), (7168.0 - GetCameraMargin(CAMERA_MARGIN_TOP324)), (7424.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT168)), ((- 7680.0) + GetCameraMargin(CAMERA_MARGIN_BOTTOM243)))
    SetDayNightModels("Environment\DNC\DNCLordaeron\DNCLordaeronTerrain\DNCLordaeronTerrain.mdl", "Environment\DNC\DNCLordaeron\DNCLordaeronUnit\DNCLordaeronUnit.mdl")
    NewSoundEnvironment("Default")
    SetAmbientDaySound("IceCrownDay")
    SetAmbientNightSound("IceCrownNight")
    SetMapMusic("Music", true, 0)
    InitSounds()
    CreateRegions()
    CreateCameras()
    CreateAllItems()
    CreateAllUnits()
    InitBlizzard()
    InitGlobals()
    InitCustomTriggers()
    init_PrintingHelper()
    init_Maths()
    init_Table()
    init_Trigger()
    init_Basics()
}


function SetDayNightModels(string terrainDNCFile142, string unitDNCFile199) returns void{ 
}


function NewSoundEnvironment(string environmentName251) returns void{ 
}


function InitSounds() returns void{ 
    gg_snd_Hint118 = CreateSound("Sound\Interface\Hint.wav", false, false, false, 10, 10, "")
    SetSoundParamsFromLabel(gg_snd_Hint118, "Hint")
    SetSoundDuration(gg_snd_Hint118, 2006)
    gg_snd_Rescue163 = CreateSound("Sound\Interface\Rescue.wav", false, false, false, 10, 10, "")
    SetSoundParamsFromLabel(gg_snd_Rescue163, "Rescue")
    SetSoundDuration(gg_snd_Rescue163, 3796)
    gg_snd_War2IntroMusic233 = CreateSound("Sound\Music\mp3Music\War2IntroMusic.mp3", false, false, false, 10, 10, "")
    SetSoundParamsFromLabel(gg_snd_War2IntroMusic233, "War2Intro")
    SetSoundDuration(gg_snd_War2IntroMusic233, 81136)
    SetSoundVolume(gg_snd_War2IntroMusic233, 127)
    gg_snd_PH1185 = CreateSound("Sound\Music\mp3Music\PH1.mp3", false, false, false, 10, 10, "")
    SetSoundParamsFromLabel(gg_snd_PH1185, "PHMusic")
    SetSoundDuration(gg_snd_PH1185, 281582)
}


function CreateRegions() returns void{ 
    local weathereffect we552
    null
    gg_rct_Choose304 = Rect((- 7712.0), 6016.0, (- 6112.0), 7424.0)
    we552 = AddWeatherEffect(gg_rct_Choose304, 1397647475)
    EnableWeatherEffect(we552, true)
    gg_rct_Region_002127 = Rect((- 6976.0), (- 7328.0), (- 5056.0), (- 1312.0))
    gg_rct_Region_014128 = Rect(928.0, 5184.0, 4160.0, 7104.0)
    gg_rct_Region_015620 = Rect(4160.0, 5184.0, 6976.0, 7104.0)
    gg_rct_Region_022667 = Rect((- 6976.0), 5120.0, (- 4928.0), 7104.0)
    gg_rct_Region_027527 = Rect((- 5568.0), 6368.0, (- 5344.0), 6560.0)
    gg_rct_Region_000315 = Rect((- 2112.0), (- 7328.0), 960.0, (- 3648.0))
    gg_rct_Region_001316 = Rect((- 5056.0), (- 7328.0), (- 2112.0), (- 3648.0))
    gg_rct_Region_003283 = Rect((- 5056.0), (- 3648.0), (- 2368.0), (- 1312.0))
    gg_rct_Region_004105 = Rect((- 6976.0), (- 1312.0), (- 2368.0), 1984.0)
    gg_rct_Region_005300 = Rect((- 2368.0), (- 3648.0), (- 1216.0), 5120.0)
    gg_rct_Region_006169 = Rect((- 1216.0), (- 3648.0), 960.0, (- 1472.0))
    gg_rct_Region_007219 = Rect(960.0, (- 3616.0), 4160.0, (- 1472.0))
    gg_rct_Region_008639 = Rect(928.0, (- 1472.0), 4160.0, 704.0)
    gg_rct_Region_009900 = Rect((- 1216.0), 704.0, 928.0, 5120.0)
    gg_rct_Region_010214 = Rect(928.0, 704.0, 4160.0, 2880.0)
    gg_rct_Region_011116 = Rect(4160.0, (- 3616.0), 6976.0, 704.0)
    gg_rct_Region_012156 = Rect(4160.0, 704.0, 6976.0, 2880.0)
    gg_rct_Region_013920 = Rect(928.0, 2880.0, 6976.0, 5184.0)
    gg_rct_Region_016223 = Rect((- 4928.0), 5120.0, 928.0, 7104.0)
    gg_rct_Region_017263 = Rect((- 6976.0), 1984.0, (- 2368.0), 5120.0)
    gg_rct_Region_018848 = Rect(960.0, (- 7328.0), 4160.0, (- 3616.0))
    gg_rct_Region_024102 = Rect(4160.0, (- 7328.0), 6976.0, (- 3616.0))
    gg_rct_Region_026179 = Rect((- 1216.0), (- 1472.0), 928.0, 704.0)
}


function CreateCameras() returns void{ 
    gg_cam_Camera_001999 = CreateCameraSetup()
    CameraSetupSetField(gg_cam_Camera_001999, CAMERA_FIELD_ZOFFSET301, 0.0, 0.0)
    CameraSetupSetField(gg_cam_Camera_001999, CAMERA_FIELD_ROTATION125, 148.3, 0.0)
    CameraSetupSetField(gg_cam_Camera_001999, CAMERA_FIELD_ANGLE_OF_ATTACK326, 345.7, 0.0)
    CameraSetupSetField(gg_cam_Camera_001999, CAMERA_FIELD_TARGET_DISTANCE158, 991.7, 0.0)
    CameraSetupSetField(gg_cam_Camera_001999, CAMERA_FIELD_ROLL325, 0.0, 0.0)
    CameraSetupSetField(gg_cam_Camera_001999, CAMERA_FIELD_FIELD_OF_VIEW434, 70.0, 0.0)
    CameraSetupSetField(gg_cam_Camera_001999, CAMERA_FIELD_FARZ287, 5000.0, 0.0)
    CameraSetupSetDestPosition(gg_cam_Camera_001999, (- 6863.5), 6652.6, 0.0)
}


function CreateAllItems() returns void{ 
    local integer itemID204
    null
    CreateItem(1227894836, (- 5832.8), (- 2112.9))
    CreateItem(1227894837, (- 6257.8), (- 2140.2))
    CreateItem(1227894838, (- 5748.8), (- 2103.0))
    CreateItem(1227894840, (- 5929.3), (- 2118.8))
    CreateItem(1227894841, (- 6178.9), (- 2136.3))
    CreateItem(1227894841, 4479.1, (- 7055.1))
    CreateItem(1227894841, (- 4726.3), (- 6942.8))
    CreateItem(1227894841, 2300.5, (- 5524.2))
    CreateItem(1227894841, 3833.9, (- 6661.8))
    CreateItem(1227894841, (- 2345.8), (- 4226.5))
    CreateItem(1227894841, 99.8, (- 7051.3))
    CreateItem(1227894841, (- 1766.4), (- 4103.7))
    CreateItem(1227894841, (- 1774.0), (- 3862.8))
    CreateItem(1227894841, 5499.0, (- 6025.7))
    CreateItem(1227894849, (- 1955.5), (- 5627.8))
    CreateItem(1227894849, 680.1, (- 4365.6))
    CreateItem(1227894849, (- 3407.7), (- 6250.1))
    CreateItem(1227894849, (- 3830.4), (- 4934.0))
    CreateItem(1227894849, (- 4483.5), (- 5093.2))
    CreateItem(1227894849, 3555.9, (- 7052.6))
    CreateItem(1227894849, 2410.7, (- 6904.5))
    CreateItem(1227894849, (- 1653.0), (- 5909.7))
    CreateItem(1227894849, 1203.4, (- 6142.2))
    CreateItem(1227894849, 6501.5, (- 5501.7))
    CreateItem(1227894849, 5132.8, (- 4996.6))
    CreateItem(1227894849, 4344.2, (- 4109.3))
    CreateItem(1227894850, (- 6020.6), (- 2130.5))
    CreateItem(1227894851, (- 6108.0), (- 2138.3))
    CreateItem(1227894858, (- 6347.5), (- 2147.9))
}


function CreateAllUnits() returns void{ 
    CreateNeutralPassiveBuildings()
    CreatePlayerBuildings()
    CreateNeutralPassive()
    CreatePlayerUnits()
}


function InitGlobals() returns void{ 
}


function InitCustomTriggers() returns void{ 
    null
}


function SetStartLocPrioCount(integer whichStartLoc251, integer prioSlotCount973) returns void{ 
}


function SetStartLocPrio(integer whichStartLoc241, integer prioSlotIndex209, integer otherStartLocIndex325, startlocprio priority141) returns void{ 
}


function SetPlayerStartLocation(player whichPlayer167, integer startLocIndex257) returns void{ 
}


function ForcePlayerStartLocation(player whichPlayer256, integer startLocIndex260) returns void{ 
}


function ConvertPlayerColor(integer i937) returns playercolor{ 
}


function SetPlayerRacePreference(player whichPlayer306, racepreference whichRacePreference404) returns void{ 
}


function SetPlayerRaceSelectable(player whichPlayer140, boolean value155) returns void{ 
}


function SetPlayerController(player whichPlayer310, mapcontrol controlType187) returns void{ 
}


function EnableWeatherEffect(weathereffect whichEffect597, boolean enable258) returns void{ 
}


function CreateNeutralPassiveBuildings() returns void{ 
    local player p182
    local unit u130
    local integer unitID170
    local trigger t305
    local real life614
    p182 = Player(PLAYER_NEUTRAL_PASSIVE452)
    null
    null
    null
    null
    u130 = CreateUnit(p182, 1848651824, 6400.0, (- 6784.0), 270.000)
    u130 = CreateUnit(p182, 1848651824, 5824.0, (- 4736.0), 270.000)
    u130 = CreateUnit(p182, 1848651824, 3456.0, (- 4160.0), 270.000)
    u130 = CreateUnit(p182, 1848651824, 832.0, (- 7040.0), 270.000)
    u130 = CreateUnit(p182, 1848651824, (- 640.0), (- 6976.0), 270.000)
    u130 = CreateUnit(p182, 1848651824, (- 1664.0), (- 5248.0), 270.000)
    u130 = CreateUnit(p182, 1848651824, (- 2432.0), (- 6144.0), 270.000)
    u130 = CreateUnit(p182, 1848651824, (- 4416.0), (- 6400.0), 270.000)
    u130 = CreateUnit(p182, 1848651824, (- 2624.0), (- 4672.0), 270.000)
    u130 = CreateUnit(p182, 1848651832, (- 128.0), (- 448.0), 270.000)
    u130 = CreateUnit(p182, 1848651832, (- 6080.0), (- 4544.0), 270.000)
    u130 = CreateUnit(p182, 1848651832, (- 3712.0), (- 2560.0), 270.000)
    u130 = CreateUnit(p182, 1848651832, (- 1792.0), 960.0, 270.000)
    u130 = CreateUnit(p182, 1848651832, (- 4736.0), 320.0, 270.000)
    u130 = CreateUnit(p182, 1848651832, (- 4736.0), 3584.0, 270.000)
    u130 = CreateUnit(p182, 1848651832, (- 1664.0), 6208.0, 270.000)
    u130 = CreateUnit(p182, 1848651832, (- 192.0), 2752.0, 270.000)
    u130 = CreateUnit(p182, 1848651832, (- 128.0), (- 2560.0), 270.000)
    u130 = CreateUnit(p182, 1848651832, 2624.0, (- 2624.0), 270.000)
    u130 = CreateUnit(p182, 1848651832, 2496.0, (- 384.0), 270.000)
    u130 = CreateUnit(p182, 1848651832, 2560.0, 1728.0, 270.000)
    u130 = CreateUnit(p182, 1848651832, 4288.0, 3968.0, 270.000)
    u130 = CreateUnit(p182, 1848651832, 2624.0, 6144.0, 270.000)
    u130 = CreateUnit(p182, 1848651832, 5568.0, 6144.0, 270.000)
    u130 = CreateUnit(p182, 1848651832, 5568.0, 1856.0, 270.000)
    u130 = CreateUnit(p182, 1848651832, 5568.0, (- 1600.0), 270.000)
}


function CreatePlayerBuildings() returns void{ 
    CreateBuildingsForPlayer11()
}


function CreateNeutralPassive() returns void{ 
    local player p252
    local unit u269
    local integer unitID211
    local trigger t240
    local real life174
    p252 = Player(PLAYER_NEUTRAL_PASSIVE452)
    null
    null
    null
    null
    u269 = CreateUnit(p252, 1966092344, 6718.6, (- 5509.5), 169.091)
    u269 = CreateUnit(p252, 1966092344, 6239.0, (- 5445.3), 235.170)
}


function CreatePlayerUnits() returns void{ 
    CreateUnitsForPlayer8()
    CreateUnitsForPlayer11()
}


function CreateUnitsForPlayer8() returns void{ 
    local player p304
    local unit u143
    local integer unitID145
    local trigger t316
    local real life158
    p304 = Player(8)
    null
    null
    null
    null
    u143 = CreateUnit(p304, 1747988813, (- 2687.4), (- 3967.1), 78.599)
    SetUnitState(u143, UNIT_STATE_MANA273, 0.)
    u143 = CreateUnit(p304, 1848651845, (- 3114.9), (- 4324.3), 136.432)
    SetUnitState(u143, UNIT_STATE_MANA273, 0.)
    u143 = CreateUnit(p304, 1848651845, (- 3330.5), (- 4613.7), 136.432)
    SetUnitState(u143, UNIT_STATE_MANA273, 0.)
    u143 = CreateUnit(p304, 1848651845, (- 2939.3), (- 4615.0), 136.432)
    SetUnitState(u143, UNIT_STATE_MANA273, 0.)
    u143 = CreateUnit(p304, 1747988809, (- 2685.3), (- 4137.3), 271.772)
    SetUnitState(u143, UNIT_STATE_MANA273, 0.)
    u143 = CreateUnit(p304, 1747988813, (- 3017.1), (- 5359.0), 115.415)
    SetUnitState(u143, UNIT_STATE_MANA273, 0.)
    u143 = CreateUnit(p304, 1747988813, (- 3672.0), (- 6839.6), 0.000)
    SetUnitState(u143, UNIT_STATE_MANA273, 0.)
    u143 = CreateUnit(p304, 1747988813, (- 3121.4), (- 4608.0), 78.600)
    u143 = CreateUnit(p304, 1848651845, (- 3676.1), (- 7034.1), 0.000)
    SetUnitState(u143, UNIT_STATE_MANA273, 0.)
    u143 = CreateUnit(p304, 1848651845, (- 3673.6), (- 6615.5), 0.000)
    SetUnitState(u143, UNIT_STATE_MANA273, 0.)
    u143 = CreateUnit(p304, 1848651845, (- 3073.2), (- 5425.8), 284.115)
    SetUnitState(u143, UNIT_STATE_MANA273, 0.)
    u143 = CreateUnit(p304, 1848651845, (- 3141.1), (- 5487.1), 69.194)
    SetUnitState(u143, UNIT_STATE_MANA273, 0.)
    u143 = CreateUnit(p304, 1848651845, (- 3222.6), (- 5571.2), 322.920)
    SetUnitState(u143, UNIT_STATE_MANA273, 0.)
    u143 = CreateUnit(p304, 1848651845, (- 3076.7), (- 5314.4), 277.908)
    SetUnitState(u143, UNIT_STATE_MANA273, 0.)
    u143 = CreateUnit(p304, 1848651845, (- 3219.2), (- 5174.8), 214.218)
    SetUnitState(u143, UNIT_STATE_MANA273, 0.)
    u143 = CreateUnit(p304, 1848651845, (- 2815.3), (- 5565.2), 136.432)
    SetUnitState(u143, UNIT_STATE_MANA273, 0.)
    u143 = CreateUnit(p304, 1848651845, (- 2795.8), (- 5169.4), 272.601)
    SetUnitState(u143, UNIT_STATE_MANA273, 0.)
    u143 = CreateUnit(p304, 1848651845, (- 2869.7), (- 5234.5), 133.334)
    SetUnitState(u143, UNIT_STATE_MANA273, 0.)
}


function CreateUnitsForPlayer11() returns void{ 
    local player p297
    local unit u110
    local integer unitID119
    local trigger t166
    local real life269
    p297 = Player(11)
    null
    null
    null
    null
    u110 = CreateUnit(p297, 1747988789, 5598.6, (- 5138.9), 151.979)
    u110 = CreateUnit(p297, 1747988789, 4981.6, (- 5760.2), 106.032)
    u110 = CreateUnit(p297, 1747988789, 5119.5, (- 4604.1), 232.972)
    u110 = CreateUnit(p297, 1747988808, 1329.3, (- 7011.2), 294.629)
    u110 = CreateUnit(p297, 1747988808, 2655.5, (- 5819.3), 78.346)
    u110 = CreateUnit(p297, 1747988808, 1652.0, (- 6955.5), 258.461)
    u110 = CreateUnit(p297, 1848651844, 2950.7, (- 5386.7), 11.701)
    u110 = CreateUnit(p297, 1848651844, 3231.3, (- 4969.9), 37.530)
    u110 = CreateUnit(p297, 1848651844, 3888.3, (- 4974.1), 20.248)
    u110 = CreateUnit(p297, 1848651844, 2921.4, (- 6160.2), 345.267)
    u110 = CreateUnit(p297, 1848651844, 3783.7, (- 6538.8), 11.701)
    u110 = CreateUnit(p297, 1848651844, 3439.1, (- 6138.1), 11.701)
    u110 = CreateUnit(p297, 1747988808, 2649.1, (- 6666.3), 15.293)
    u110 = CreateUnit(p297, 1747988808, 3615.6, (- 6882.5), 221.118)
    u110 = CreateUnit(p297, 1848651833, (- 1919.6), (- 5114.6), 178.500)
    u110 = CreateUnit(p297, 1747988792, (- 232.8), (- 7156.9), 185.982)
    u110 = CreateUnit(p297, 1747988792, 552.3, (- 7083.5), 339.839)
    u110 = CreateUnit(p297, 1747988792, 104.8, (- 6910.4), 170.557)
    u110 = CreateUnit(p297, 1747988792, (- 793.9), (- 6670.3), 208.977)
    u110 = CreateUnit(p297, 1848651833, (- 148.1), (- 6414.0), 114.250)
    u110 = CreateUnit(p297, 1848651833, (- 168.1), (- 6651.2), 178.500)
    u110 = CreateUnit(p297, 1848651833, 224.7, (- 5981.4), 14.975)
    u110 = CreateUnit(p297, 1848651833, (- 258.3), (- 5635.8), 183.049)
    u110 = CreateUnit(p297, 1966092340, (- 617.5), (- 5762.3), 1.000)
    u110 = CreateUnit(p297, 1966092340, (- 137.9), (- 5529.5), 1.000)
    SetUnitState(u110, UNIT_STATE_MANA273, 0.)
    u110 = CreateUnit(p297, 1966092340, 488.6, (- 5519.0), 1.000)
    SetUnitState(u110, UNIT_STATE_MANA273, 0.)
    u110 = CreateUnit(p297, 1966092340, 67.6, (- 4861.4), 1.000)
    SetUnitState(u110, UNIT_STATE_MANA273, 0.)
    u110 = CreateUnit(p297, 1848651833, (- 1064.6), (- 4850.3), 178.500)
    u110 = CreateUnit(p297, 1848651833, (- 1321.3), (- 5044.2), 178.500)
    u110 = CreateUnit(p297, 1848651833, 400.7, (- 4625.7), 178.500)
    SetUnitState(u110, UNIT_STATE_MANA273, 0.)
    u110 = CreateUnit(p297, 1848651833, 585.3, (- 4750.5), 178.500)
    u110 = CreateUnit(p297, 1848651833, (- 741.0), (- 4479.1), 178.500)
    u110 = CreateUnit(p297, 1848651845, (- 4187.1), (- 6894.0), 228.358)
    u110 = CreateUnit(p297, 1848651845, (- 4210.6), (- 7007.3), 228.358)
    u110 = CreateUnit(p297, 1848651845, (- 2353.4), (- 5106.2), 136.430)
    u110 = CreateUnit(p297, 1848651845, (- 2375.2), (- 5368.5), 136.430)
    u110 = CreateUnit(p297, 1848651845, (- 4757.3), (- 6392.9), 228.358)
    u110 = CreateUnit(p297, 1848651845, (- 4207.3), (- 7212.3), 228.358)
    u110 = CreateUnit(p297, 1848651845, (- 4796.4), (- 4971.4), 214.220)
    u110 = CreateUnit(p297, 1848651845, (- 4635.9), (- 5183.9), 214.220)
    u110 = CreateUnit(p297, 1747988809, (- 3985.1), (- 4649.6), 117.546)
    u110 = CreateUnit(p297, 1747988809, (- 3504.0), (- 6387.5), 73.303)
    u110 = CreateUnit(p297, 1848651845, (- 2448.5), (- 6615.8), 0.670)
    u110 = CreateUnit(p297, 1848651845, (- 3128.0), (- 6423.0), 240.992)
    u110 = CreateUnit(p297, 1848651845, (- 2656.8), (- 6781.1), 127.775)
    u110 = CreateUnit(p297, 1747988809, (- 3396.1), (- 7208.5), 49.209)
    u110 = CreateUnit(p297, 1848651845, (- 4409.7), (- 6029.0), 114.569)
    u110 = CreateUnit(p297, 1848651845, (- 3999.8), (- 6411.9), 315.779)
    u110 = CreateUnit(p297, 1848651845, (- 3772.6), (- 5905.2), 128.445)
    u110 = CreateUnit(p297, 1848651845, (- 4433.7), (- 6658.8), 228.358)
    u110 = CreateUnit(p297, 1747988809, (- 3540.0), (- 5314.0), 117.546)
}


function CreateBuildingsForPlayer11() returns void{ 
    local player p161
    local unit u749
    local integer unitID820
    local trigger t694
    local real life824
    p161 = Player(11)
    null
    null
    null
    null
    u749 = CreateUnit(p161, 1848651858, 4352.0, (- 6592.0), 270.000)
    u749 = CreateUnit(p161, 1848651859, 4832.0, (- 6752.0), 270.000)
    u749 = CreateUnit(p161, 1848651859, 4832.0, (- 6176.0), 270.000)
    u749 = CreateUnit(p161, 1848651859, 5408.0, (- 6816.0), 270.000)
    u749 = CreateUnit(p161, 1848651859, 4960.0, (- 7072.0), 270.000)
    u749 = CreateUnit(p161, 1848651858, 5312.0, (- 6144.0), 270.000)
    u749 = CreateUnit(p161, 1848651858, 4352.0, (- 5952.0), 270.000)
    u749 = CreateUnit(p161, 1848651859, 4512.0, (- 6368.0), 270.000)
    u749 = CreateUnit(p161, 1848651859, 5408.0, (- 6368.0), 270.000)
    u749 = CreateUnit(p161, 1848651859, 5792.0, (- 6496.0), 270.000)
    u749 = CreateUnit(p161, 1747988547, 5760.0, (- 5696.0), 270.000)
    u749 = CreateUnit(p161, 1848651855, 6752.0, (- 7072.0), 270.000)
    u749 = CreateUnit(p161, 1848651853, 5952.0, (- 6720.0), 270.000)
    u749 = CreateUnit(p161, 1848651853, 5952.0, (- 6912.0), 270.000)
    u749 = CreateUnit(p161, 1747988547, 5760.0, (- 5760.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6080.0, (- 5056.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6080.0, (- 5184.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6080.0, (- 5312.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6080.0, (- 5440.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6080.0, (- 5568.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6080.0, (- 5696.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6080.0, (- 5824.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6080.0, (- 5952.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6208.0, (- 5952.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6336.0, (- 5952.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6464.0, (- 5952.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6592.0, (- 5952.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6720.0, (- 5952.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6848.0, (- 5952.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6848.0, (- 5824.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6848.0, (- 5696.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6848.0, (- 5568.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6848.0, (- 5440.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6848.0, (- 5312.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6848.0, (- 5184.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6848.0, (- 5056.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6720.0, (- 4992.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6592.0, (- 4992.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6464.0, (- 4992.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6336.0, (- 4992.0), 270.000)
    u749 = CreateUnit(p161, 1848651856, 6208.0, (- 4992.0), 270.000)
    u749 = CreateUnit(p161, 1848651859, 6432.0, (- 5088.0), 270.000)
    u749 = CreateUnit(p161, 1848651859, 6368.0, (- 5664.0), 270.000)
    u749 = CreateUnit(p161, 1848651858, 6528.0, (- 5312.0), 270.000)
    u749 = CreateUnit(p161, 1848651854, 6432.0, (- 5600.0), 270.000)
    u749 = CreateUnit(p161, 1848651855, 6432.0, (- 5344.0), 270.000)
    u749 = CreateUnit(p161, 1848651853, 6400.0, (- 5504.0), 270.000)
    u749 = CreateUnit(p161, 1848651853, 6528.0, (- 5184.0), 270.000)
    u749 = CreateUnit(p161, 1848651843, 6272.0, (- 4864.0), 270.000)
    u749 = CreateUnit(p161, 1848651843, 6720.0, (- 5184.0), 270.000)
    u749 = CreateUnit(p161, 1848651843, 4288.0, (- 3840.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 2336.0, (- 6432.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, 2048.0, (- 4096.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, 1856.0, (- 5248.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, 1472.0, (- 4736.0), 270.000)
    u749 = CreateUnit(p161, 1848651859, 2144.0, (- 4640.0), 270.000)
    u749 = CreateUnit(p161, 1848651858, 1984.0, (- 5376.0), 270.000)
    u749 = CreateUnit(p161, 1848651858, 1536.0, (- 5056.0), 270.000)
    u749 = CreateUnit(p161, 1848651859, 2080.0, (- 5728.0), 270.000)
    u749 = CreateUnit(p161, 1848651859, 1312.0, (- 5472.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 2208.0, (- 6560.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 2592.0, (- 6048.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 2144.0, (- 6816.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 2656.0, (- 7200.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, 1600.0, (- 6528.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 1824.0, (- 6304.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 2528.0, (- 5984.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 2080.0, (- 6368.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 2016.0, (- 6304.0), 270.000)
    u749 = CreateUnit(p161, 1747988547, 2752.0, (- 4288.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 3552.0, (- 4832.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 3552.0, (- 5152.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 3616.0, (- 5536.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 3360.0, (- 5472.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 2912.0, (- 5536.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 3040.0, (- 5792.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 3232.0, (- 5984.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 3744.0, (- 6240.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 3808.0, (- 6432.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 2336.0, (- 6048.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 2272.0, (- 5984.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, 3264.0, (- 4352.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, 3648.0, (- 4352.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, 3648.0, (- 3968.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, 3264.0, (- 3968.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 3168.0, (- 3808.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 1952.0, (- 6560.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 2528.0, (- 4960.0), 270.000)
    u749 = CreateUnit(p161, 1848651858, 1920.0, (- 4352.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 2080.0, (- 4256.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 1376.0, (- 4640.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 3360.0, (- 5216.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 2272.0, (- 6240.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, 3712.0, (- 6656.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, 3968.0, (- 6656.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, 3584.0, (- 6144.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, 3584.0, (- 5760.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, 3200.0, (- 5248.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, 3200.0, (- 5504.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 3040.0, (- 6432.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 3680.0, (- 5280.0), 270.000)
    u749 = CreateUnit(p161, 1848651859, 1696.0, (- 5152.0), 270.000)
    u749 = CreateUnit(p161, 1848651864, 2336.0, (- 6304.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, 3200.0, (- 7040.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, 2944.0, (- 6656.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, 1600.0, (- 6144.0), 270.000)
    u749 = CreateUnit(p161, 1747988547, 2752.0, (- 4416.0), 270.000)
    u749 = CreateUnit(p161, 1848651859, 2528.0, (- 3936.0), 270.000)
    u749 = CreateUnit(p161, 1848651859, 1824.0, (- 4128.0), 270.000)
    u749 = CreateUnit(p161, 1848651859, 1504.0, (- 4320.0), 270.000)
    u749 = CreateUnit(p161, 1848651859, 1696.0, (- 4768.0), 270.000)
    u749 = CreateUnit(p161, 1848651843, 2432.0, (- 6656.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, 1984.0, (- 7104.0), 270.000)
    u749 = CreateUnit(p161, 1747988547, (- 256.0), (- 6080.0), 270.000)
    u749 = CreateUnit(p161, 1747988793, 256.0, (- 5056.0), 270.000)
    u749 = CreateUnit(p161, 1747988793, (- 384.0), (- 5248.0), 270.000)
    u749 = CreateUnit(p161, 1747988793, (- 448.0), (- 5696.0), 270.000)
    u749 = CreateUnit(p161, 1747988793, (- 448.0), (- 4736.0), 270.000)
    u749 = CreateUnit(p161, 1848651830, (- 1792.0), (- 6784.0), 270.000)
    u749 = CreateUnit(p161, 1848651830, (- 1792.0), (- 6400.0), 270.000)
    u749 = CreateUnit(p161, 1848651830, (- 1408.0), (- 5760.0), 270.000)
    u749 = CreateUnit(p161, 1848651830, (- 960.0), (- 6144.0), 270.000)
    u749 = CreateUnit(p161, 1848651830, (- 1152.0), (- 5760.0), 270.000)
    u749 = CreateUnit(p161, 1848651827, (- 1152.0), (- 7040.0), 270.000)
    u749 = CreateUnit(p161, 1848651827, (- 1408.0), (- 7104.0), 270.000)
    u749 = CreateUnit(p161, 1848651827, (- 1024.0), (- 6784.0), 270.000)
    u749 = CreateUnit(p161, 1848651827, (- 1024.0), (- 6400.0), 270.000)
    u749 = CreateUnit(p161, 1848651827, (- 1728.0), (- 6144.0), 270.000)
    u749 = CreateUnit(p161, 1848651830, (- 1664.0), (- 6272.0), 270.000)
    u749 = CreateUnit(p161, 1848651827, (- 1664.0), (- 6976.0), 270.000)
    u749 = CreateUnit(p161, 1848652105, (- 1152.0), (- 4096.0), 270.000)
    u749 = CreateUnit(p161, 1848652105, (- 1344.0), (- 3840.0), 270.000)
    u749 = CreateUnit(p161, 1848652105, (- 1600.0), (- 3968.0), 270.000)
    u749 = CreateUnit(p161, 1848651827, (- 1600.0), (- 3776.0), 270.000)
    u749 = CreateUnit(p161, 1848651827, (- 1344.0), (- 4224.0), 270.000)
    u749 = CreateUnit(p161, 1848652100, (- 192.0), (- 4096.0), 270.000)
    u749 = CreateUnit(p161, 1848652100, (- 192.0), (- 4352.0), 270.000)
    u749 = CreateUnit(p161, 1848651830, (- 1920.0), (- 3968.0), 270.000)
    u749 = CreateUnit(p161, 1848651830, (- 1472.0), (- 4224.0), 270.000)
    u749 = CreateUnit(p161, 1848651830, (- 1216.0), (- 3776.0), 270.000)
    u749 = CreateUnit(p161, 1848651827, (- 896.0), (- 3968.0), 270.000)
    u749 = CreateUnit(p161, 1747988547, (- 640.0), (- 3968.0), 270.000)
    u749 = CreateUnit(p161, 1747988547, (- 640.0), (- 4224.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, (- 192.0), (- 3776.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, (- 128.0), (- 3776.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, (- 64.0), (- 3776.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, 0.0, (- 3776.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, (- 192.0), (- 3968.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, (- 128.0), (- 3968.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, (- 64.0), (- 3968.0), 270.000)
    u749 = CreateUnit(p161, 1848651866, 0.0, (- 3968.0), 270.000)
    u749 = CreateUnit(p161, 1848651843, 640.0, (- 3840.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 3968.0), (- 6144.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 4096.0), (- 4352.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 4800.0), (- 4096.0), 270.000)
    u749 = CreateUnit(p161, 1747988547, (- 4736.0), (- 4352.0), 270.000)
    u749 = CreateUnit(p161, 1848651843, (- 4480.0), (- 5248.0), 270.000)
    u749 = CreateUnit(p161, 1848652089, (- 2784.0), (- 6496.0), 270.000)
    u749 = CreateUnit(p161, 1848652089, (- 4064.0), (- 6112.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 3648.0), (- 6784.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 2688.0), (- 5440.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 4032.0), (- 5504.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 4096.0), (- 5504.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 4160.0), (- 5568.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 3456.0), (- 4480.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 3328.0), (- 4288.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 2944.0), (- 3968.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 4416.0), (- 4416.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 4288.0), (- 4544.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 3008.0), (- 7040.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 4352.0), (- 6656.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 4672.0), (- 4992.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 3456.0), (- 5184.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 3520.0), (- 5184.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 3584.0), (- 5184.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 2944.0), (- 5824.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 4608.0), (- 6912.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 4608.0), (- 6976.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 4608.0), (- 7040.0), 270.000)
    u749 = CreateUnit(p161, 1747988547, (- 4032.0), (- 5824.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 3968.0), (- 6784.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 2688.0), (- 7040.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 3264.0), (- 7104.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 3136.0), (- 6656.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 2944.0), (- 6912.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 2688.0), (- 6208.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 2496.0), (- 6400.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 3648.0), (- 5568.0), 270.000)
    u749 = CreateUnit(p161, 1848652088, (- 4160.0), (- 6144.0), 270.000)
}


function SetSoundParamsFromLabel(sound soundHandle307, string soundLabel213) returns void{ 
}


function SetSoundDuration(sound soundHandle215, integer duration240) returns void{ 
}


function init_Trigger() returns void{ 
    triggerData135 = new_Table()
}


function init_Maths() returns void{ 
    PI153 = 3.14159265
    DEGTORAD414 = 0.01745329
    RADTODEG191 = 57.2957795
}


function init_Basics() returns void{ 
    DUMMY_UNIT_ID127 = 1697656880
    HEIGHT_ENABLER491 = 1097691750
    TREE_RECOGNITION682 = 1097163124
    ANIMATION_PERIOD333 = 0.031250000
    MAX_COLLISION_SIZE101 = 197.0
    DUMMY_PLAYER305 = Player(15)
}


function init_PrintingHelper() returns void{ 
    DEBUG_LEVEL308 = 1
    DEBUG_MSG_DURATION251 = 60.
}


function init_Table() returns void{ 
    ht203 = InitHashtable()
}


