boolean FALSE124
boolean TRUE274
integer JASS_MAX_ARRAY_SIZE219
integer PLAYER_NEUTRAL_PASSIVE270
integer PLAYER_NEUTRAL_AGGRESSIVE113
playercolor PLAYER_COLOR_RED676
playercolor PLAYER_COLOR_BLUE124
playercolor PLAYER_COLOR_CYAN290
playercolor PLAYER_COLOR_PURPLE276
playercolor PLAYER_COLOR_YELLOW247
playercolor PLAYER_COLOR_ORANGE692
playercolor PLAYER_COLOR_GREEN128
playercolor PLAYER_COLOR_PINK117
playercolor PLAYER_COLOR_LIGHT_GRAY225
playercolor PLAYER_COLOR_LIGHT_BLUE201
playercolor PLAYER_COLOR_AQUA728
playercolor PLAYER_COLOR_BROWN312
race RACE_HUMAN325
race RACE_ORC150
race RACE_UNDEAD228
race RACE_NIGHTELF229
race RACE_DEMON305
race RACE_OTHER195
playergameresult PLAYER_GAME_RESULT_VICTORY732
playergameresult PLAYER_GAME_RESULT_DEFEAT586
playergameresult PLAYER_GAME_RESULT_TIE334
playergameresult PLAYER_GAME_RESULT_NEUTRAL166
alliancetype ALLIANCE_PASSIVE306
alliancetype ALLIANCE_HELP_REQUEST124
alliancetype ALLIANCE_HELP_RESPONSE143
alliancetype ALLIANCE_SHARED_XP240
alliancetype ALLIANCE_SHARED_SPELLS102
alliancetype ALLIANCE_SHARED_VISION266
alliancetype ALLIANCE_SHARED_CONTROL252
alliancetype ALLIANCE_SHARED_ADVANCED_CONTROL902
alliancetype ALLIANCE_RESCUABLE333
alliancetype ALLIANCE_SHARED_VISION_FORCED259
version VERSION_REIGN_OF_CHAOS290
version VERSION_FROZEN_THRONE334
attacktype ATTACK_TYPE_NORMAL297
attacktype ATTACK_TYPE_MELEE249
attacktype ATTACK_TYPE_PIERCE135
attacktype ATTACK_TYPE_SIEGE961
attacktype ATTACK_TYPE_MAGIC133
attacktype ATTACK_TYPE_CHAOS202
attacktype ATTACK_TYPE_HERO305
damagetype DAMAGE_TYPE_UNKNOWN171
damagetype DAMAGE_TYPE_NORMAL189
damagetype DAMAGE_TYPE_ENHANCED237
damagetype DAMAGE_TYPE_FIRE260
damagetype DAMAGE_TYPE_COLD869
damagetype DAMAGE_TYPE_LIGHTNING975
damagetype DAMAGE_TYPE_POISON874
damagetype DAMAGE_TYPE_DISEASE174
damagetype DAMAGE_TYPE_DIVINE120
damagetype DAMAGE_TYPE_MAGIC707
damagetype DAMAGE_TYPE_SONIC190
damagetype DAMAGE_TYPE_ACID283
damagetype DAMAGE_TYPE_FORCE215
damagetype DAMAGE_TYPE_DEATH846
damagetype DAMAGE_TYPE_MIND272
damagetype DAMAGE_TYPE_PLANT332
damagetype DAMAGE_TYPE_DEFENSIVE226
damagetype DAMAGE_TYPE_DEMOLITION270
damagetype DAMAGE_TYPE_SLOW_POISON175
damagetype DAMAGE_TYPE_SPIRIT_LINK124
damagetype DAMAGE_TYPE_SHADOW_STRIKE714
damagetype DAMAGE_TYPE_UNIVERSAL280
weapontype WEAPON_TYPE_WHOKNOWS179
weapontype WEAPON_TYPE_METAL_LIGHT_CHOP117
weapontype WEAPON_TYPE_METAL_MEDIUM_CHOP190
weapontype WEAPON_TYPE_METAL_HEAVY_CHOP216
weapontype WEAPON_TYPE_METAL_LIGHT_SLICE138
weapontype WEAPON_TYPE_METAL_MEDIUM_SLICE905
weapontype WEAPON_TYPE_METAL_HEAVY_SLICE208
weapontype WEAPON_TYPE_METAL_MEDIUM_BASH126
weapontype WEAPON_TYPE_METAL_HEAVY_BASH256
weapontype WEAPON_TYPE_METAL_MEDIUM_STAB134
weapontype WEAPON_TYPE_METAL_HEAVY_STAB775
weapontype WEAPON_TYPE_WOOD_LIGHT_SLICE317
weapontype WEAPON_TYPE_WOOD_MEDIUM_SLICE894
weapontype WEAPON_TYPE_WOOD_HEAVY_SLICE446
weapontype WEAPON_TYPE_WOOD_LIGHT_BASH124
weapontype WEAPON_TYPE_WOOD_MEDIUM_BASH285
weapontype WEAPON_TYPE_WOOD_HEAVY_BASH205
weapontype WEAPON_TYPE_WOOD_LIGHT_STAB527
weapontype WEAPON_TYPE_WOOD_MEDIUM_STAB107
weapontype WEAPON_TYPE_CLAW_LIGHT_SLICE722
weapontype WEAPON_TYPE_CLAW_MEDIUM_SLICE992
weapontype WEAPON_TYPE_CLAW_HEAVY_SLICE182
weapontype WEAPON_TYPE_AXE_MEDIUM_CHOP267
weapontype WEAPON_TYPE_ROCK_HEAVY_BASH186
pathingtype PATHING_TYPE_ANY234
pathingtype PATHING_TYPE_WALKABILITY514
pathingtype PATHING_TYPE_FLYABILITY329
pathingtype PATHING_TYPE_BUILDABILITY276
pathingtype PATHING_TYPE_PEONHARVESTPATHING241
pathingtype PATHING_TYPE_BLIGHTPATHING528
pathingtype PATHING_TYPE_FLOATABILITY160
pathingtype PATHING_TYPE_AMPHIBIOUSPATHING272
racepreference RACE_PREF_HUMAN466
racepreference RACE_PREF_ORC302
racepreference RACE_PREF_NIGHTELF109
racepreference RACE_PREF_UNDEAD218
racepreference RACE_PREF_DEMON283
racepreference RACE_PREF_RANDOM125
racepreference RACE_PREF_USER_SELECTABLE162
mapcontrol MAP_CONTROL_USER306
mapcontrol MAP_CONTROL_COMPUTER169
mapcontrol MAP_CONTROL_RESCUABLE260
mapcontrol MAP_CONTROL_NEUTRAL173
mapcontrol MAP_CONTROL_CREEP333
mapcontrol MAP_CONTROL_NONE288
gametype GAME_TYPE_MELEE124
gametype GAME_TYPE_FFA977
gametype GAME_TYPE_USE_MAP_SETTINGS216
gametype GAME_TYPE_BLIZ294
gametype GAME_TYPE_ONE_ON_ONE612
gametype GAME_TYPE_TWO_TEAM_PLAY136
gametype GAME_TYPE_THREE_TEAM_PLAY426
gametype GAME_TYPE_FOUR_TEAM_PLAY298
mapflag MAP_FOG_HIDE_TERRAIN296
mapflag MAP_FOG_MAP_EXPLORED323
mapflag MAP_FOG_ALWAYS_VISIBLE206
mapflag MAP_USE_HANDICAPS193
mapflag MAP_OBSERVERS258
mapflag MAP_OBSERVERS_ON_DEATH204
mapflag MAP_FIXED_COLORS630
mapflag MAP_LOCK_RESOURCE_TRADING166
mapflag MAP_RESOURCE_TRADING_ALLIES_ONLY145
mapflag MAP_LOCK_ALLIANCE_CHANGES208
mapflag MAP_ALLIANCE_CHANGES_HIDDEN162
mapflag MAP_CHEATS120
mapflag MAP_CHEATS_HIDDEN329
mapflag MAP_LOCK_SPEED275
mapflag MAP_LOCK_RANDOM_SEED167
mapflag MAP_SHARED_ADVANCED_CONTROL131
mapflag MAP_RANDOM_HERO175
mapflag MAP_RANDOM_RACES331
mapflag MAP_RELOADED308
placement MAP_PLACEMENT_RANDOM232
placement MAP_PLACEMENT_FIXED284
placement MAP_PLACEMENT_USE_MAP_SETTINGS711
placement MAP_PLACEMENT_TEAMS_TOGETHER323
startlocprio MAP_LOC_PRIO_LOW294
startlocprio MAP_LOC_PRIO_HIGH143
startlocprio MAP_LOC_PRIO_NOT212
mapdensity MAP_DENSITY_NONE671
mapdensity MAP_DENSITY_LIGHT193
mapdensity MAP_DENSITY_MEDIUM203
mapdensity MAP_DENSITY_HEAVY119
gamedifficulty MAP_DIFFICULTY_EASY274
gamedifficulty MAP_DIFFICULTY_NORMAL203
gamedifficulty MAP_DIFFICULTY_HARD326
gamedifficulty MAP_DIFFICULTY_INSANE320
gamespeed MAP_SPEED_SLOWEST246
gamespeed MAP_SPEED_SLOW161
gamespeed MAP_SPEED_NORMAL309
gamespeed MAP_SPEED_FAST186
gamespeed MAP_SPEED_FASTEST587
playerslotstate PLAYER_SLOT_STATE_EMPTY202
playerslotstate PLAYER_SLOT_STATE_PLAYING320
playerslotstate PLAYER_SLOT_STATE_LEFT146
volumegroup SOUND_VOLUMEGROUP_UNITMOVEMENT321
volumegroup SOUND_VOLUMEGROUP_UNITSOUNDS114
volumegroup SOUND_VOLUMEGROUP_COMBAT203
volumegroup SOUND_VOLUMEGROUP_SPELLS203
volumegroup SOUND_VOLUMEGROUP_UI180
volumegroup SOUND_VOLUMEGROUP_MUSIC144
volumegroup SOUND_VOLUMEGROUP_AMBIENTSOUNDS160
volumegroup SOUND_VOLUMEGROUP_FIRE160
igamestate GAME_STATE_DIVINE_INTERVENTION141
igamestate GAME_STATE_DISCONNECTED140
fgamestate GAME_STATE_TIME_OF_DAY129
playerstate PLAYER_STATE_GAME_RESULT491
playerstate PLAYER_STATE_RESOURCE_GOLD174
playerstate PLAYER_STATE_RESOURCE_LUMBER156
playerstate PLAYER_STATE_RESOURCE_HERO_TOKENS673
playerstate PLAYER_STATE_RESOURCE_FOOD_CAP871
playerstate PLAYER_STATE_RESOURCE_FOOD_USED269
playerstate PLAYER_STATE_FOOD_CAP_CEILING321
playerstate PLAYER_STATE_GIVES_BOUNTY116
playerstate PLAYER_STATE_ALLIED_VICTORY322
playerstate PLAYER_STATE_PLACED114
playerstate PLAYER_STATE_OBSERVER_ON_DEATH874
playerstate PLAYER_STATE_OBSERVER246
playerstate PLAYER_STATE_UNFOLLOWABLE153
playerstate PLAYER_STATE_GOLD_UPKEEP_RATE224
playerstate PLAYER_STATE_LUMBER_UPKEEP_RATE317
playerstate PLAYER_STATE_GOLD_GATHERED917
playerstate PLAYER_STATE_LUMBER_GATHERED180
playerstate PLAYER_STATE_NO_CREEP_SLEEP559
unitstate UNIT_STATE_LIFE243
unitstate UNIT_STATE_MAX_LIFE244
unitstate UNIT_STATE_MANA132
unitstate UNIT_STATE_MAX_MANA256
aidifficulty AI_DIFFICULTY_NEWBIE314
aidifficulty AI_DIFFICULTY_NORMAL175
aidifficulty AI_DIFFICULTY_INSANE272
playerscore PLAYER_SCORE_UNITS_TRAINED213
playerscore PLAYER_SCORE_UNITS_KILLED327
playerscore PLAYER_SCORE_STRUCT_BUILT180
playerscore PLAYER_SCORE_STRUCT_RAZED315
playerscore PLAYER_SCORE_TECH_PERCENT111
playerscore PLAYER_SCORE_FOOD_MAXPROD653
playerscore PLAYER_SCORE_FOOD_MAXUSED418
playerscore PLAYER_SCORE_HEROES_KILLED247
playerscore PLAYER_SCORE_ITEMS_GAINED334
playerscore PLAYER_SCORE_MERCS_HIRED992
playerscore PLAYER_SCORE_GOLD_MINED_TOTAL389
playerscore PLAYER_SCORE_GOLD_MINED_UPKEEP145
playerscore PLAYER_SCORE_GOLD_LOST_UPKEEP267
playerscore PLAYER_SCORE_GOLD_LOST_TAX707
playerscore PLAYER_SCORE_GOLD_GIVEN136
playerscore PLAYER_SCORE_GOLD_RECEIVED102
playerscore PLAYER_SCORE_LUMBER_TOTAL439
playerscore PLAYER_SCORE_LUMBER_LOST_UPKEEP282
playerscore PLAYER_SCORE_LUMBER_LOST_TAX227
playerscore PLAYER_SCORE_LUMBER_GIVEN122
playerscore PLAYER_SCORE_LUMBER_RECEIVED697
playerscore PLAYER_SCORE_UNIT_TOTAL282
playerscore PLAYER_SCORE_HERO_TOTAL135
playerscore PLAYER_SCORE_RESOURCE_TOTAL142
playerscore PLAYER_SCORE_TOTAL292
gameevent EVENT_GAME_VICTORY224
gameevent EVENT_GAME_END_LEVEL327
gameevent EVENT_GAME_VARIABLE_LIMIT551
gameevent EVENT_GAME_STATE_LIMIT571
gameevent EVENT_GAME_TIMER_EXPIRED429
gameevent EVENT_GAME_ENTER_REGION836
gameevent EVENT_GAME_LEAVE_REGION183
gameevent EVENT_GAME_TRACKABLE_HIT291
gameevent EVENT_GAME_TRACKABLE_TRACK112
gameevent EVENT_GAME_SHOW_SKILL194
gameevent EVENT_GAME_BUILD_SUBMENU612
playerevent EVENT_PLAYER_STATE_LIMIT289
playerevent EVENT_PLAYER_ALLIANCE_CHANGED187
playerevent EVENT_PLAYER_DEFEAT143
playerevent EVENT_PLAYER_VICTORY194
playerevent EVENT_PLAYER_LEAVE205
playerevent EVENT_PLAYER_CHAT274
playerevent EVENT_PLAYER_END_CINEMATIC298
playerunitevent EVENT_PLAYER_UNIT_ATTACKED109
playerunitevent EVENT_PLAYER_UNIT_RESCUED145
playerunitevent EVENT_PLAYER_UNIT_DEATH333
playerunitevent EVENT_PLAYER_UNIT_DECAY231
playerunitevent EVENT_PLAYER_UNIT_DETECTED461
playerunitevent EVENT_PLAYER_UNIT_HIDDEN138
playerunitevent EVENT_PLAYER_UNIT_SELECTED785
playerunitevent EVENT_PLAYER_UNIT_DESELECTED285
playerunitevent EVENT_PLAYER_UNIT_CONSTRUCT_START257
playerunitevent EVENT_PLAYER_UNIT_CONSTRUCT_CANCEL272
playerunitevent EVENT_PLAYER_UNIT_CONSTRUCT_FINISH944
playerunitevent EVENT_PLAYER_UNIT_UPGRADE_START649
playerunitevent EVENT_PLAYER_UNIT_UPGRADE_CANCEL266
playerunitevent EVENT_PLAYER_UNIT_UPGRADE_FINISH226
playerunitevent EVENT_PLAYER_UNIT_TRAIN_START132
playerunitevent EVENT_PLAYER_UNIT_TRAIN_CANCEL955
playerunitevent EVENT_PLAYER_UNIT_TRAIN_FINISH185
playerunitevent EVENT_PLAYER_UNIT_RESEARCH_START285
playerunitevent EVENT_PLAYER_UNIT_RESEARCH_CANCEL578
playerunitevent EVENT_PLAYER_UNIT_RESEARCH_FINISH239
playerunitevent EVENT_PLAYER_UNIT_ISSUED_ORDER200
playerunitevent EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER279
playerunitevent EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER190
playerunitevent EVENT_PLAYER_UNIT_ISSUED_UNIT_ORDER733
playerunitevent EVENT_PLAYER_HERO_LEVEL120
playerunitevent EVENT_PLAYER_HERO_SKILL451
playerunitevent EVENT_PLAYER_HERO_REVIVABLE115
playerunitevent EVENT_PLAYER_HERO_REVIVE_START315
playerunitevent EVENT_PLAYER_HERO_REVIVE_CANCEL175
playerunitevent EVENT_PLAYER_HERO_REVIVE_FINISH116
playerunitevent EVENT_PLAYER_UNIT_SUMMON269
playerunitevent EVENT_PLAYER_UNIT_DROP_ITEM208
playerunitevent EVENT_PLAYER_UNIT_PICKUP_ITEM235
playerunitevent EVENT_PLAYER_UNIT_USE_ITEM204
playerunitevent EVENT_PLAYER_UNIT_LOADED132
unitevent EVENT_UNIT_DAMAGED228
unitevent EVENT_UNIT_DEATH174
unitevent EVENT_UNIT_DECAY308
unitevent EVENT_UNIT_DETECTED202
unitevent EVENT_UNIT_HIDDEN188
unitevent EVENT_UNIT_SELECTED570
unitevent EVENT_UNIT_DESELECTED360
unitevent EVENT_UNIT_STATE_LIMIT319
unitevent EVENT_UNIT_ACQUIRED_TARGET114
unitevent EVENT_UNIT_TARGET_IN_RANGE155
unitevent EVENT_UNIT_ATTACKED902
unitevent EVENT_UNIT_RESCUED792
unitevent EVENT_UNIT_CONSTRUCT_CANCEL128
unitevent EVENT_UNIT_CONSTRUCT_FINISH151
unitevent EVENT_UNIT_UPGRADE_START102
unitevent EVENT_UNIT_UPGRADE_CANCEL291
unitevent EVENT_UNIT_UPGRADE_FINISH325
unitevent EVENT_UNIT_TRAIN_START318
unitevent EVENT_UNIT_TRAIN_CANCEL287
unitevent EVENT_UNIT_TRAIN_FINISH137
unitevent EVENT_UNIT_RESEARCH_START230
unitevent EVENT_UNIT_RESEARCH_CANCEL320
unitevent EVENT_UNIT_RESEARCH_FINISH275
unitevent EVENT_UNIT_ISSUED_ORDER158
unitevent EVENT_UNIT_ISSUED_POINT_ORDER281
unitevent EVENT_UNIT_ISSUED_TARGET_ORDER232
unitevent EVENT_UNIT_HERO_LEVEL331
unitevent EVENT_UNIT_HERO_SKILL220
unitevent EVENT_UNIT_HERO_REVIVABLE250
unitevent EVENT_UNIT_HERO_REVIVE_START147
unitevent EVENT_UNIT_HERO_REVIVE_CANCEL221
unitevent EVENT_UNIT_HERO_REVIVE_FINISH912
unitevent EVENT_UNIT_SUMMON297
unitevent EVENT_UNIT_DROP_ITEM127
unitevent EVENT_UNIT_PICKUP_ITEM303
unitevent EVENT_UNIT_USE_ITEM817
unitevent EVENT_UNIT_LOADED142
widgetevent EVENT_WIDGET_DEATH966
dialogevent EVENT_DIALOG_BUTTON_CLICK986
dialogevent EVENT_DIALOG_CLICK595
gameevent EVENT_GAME_LOADED229
gameevent EVENT_GAME_TOURNAMENT_FINISH_SOON409
gameevent EVENT_GAME_TOURNAMENT_FINISH_NOW206
gameevent EVENT_GAME_SAVE221
playerevent EVENT_PLAYER_ARROW_LEFT_DOWN219
playerevent EVENT_PLAYER_ARROW_LEFT_UP821
playerevent EVENT_PLAYER_ARROW_RIGHT_DOWN160
playerevent EVENT_PLAYER_ARROW_RIGHT_UP143
playerevent EVENT_PLAYER_ARROW_DOWN_DOWN823
playerevent EVENT_PLAYER_ARROW_DOWN_UP107
playerevent EVENT_PLAYER_ARROW_UP_DOWN489
playerevent EVENT_PLAYER_ARROW_UP_UP139
playerunitevent EVENT_PLAYER_UNIT_SELL846
playerunitevent EVENT_PLAYER_UNIT_CHANGE_OWNER143
playerunitevent EVENT_PLAYER_UNIT_SELL_ITEM259
playerunitevent EVENT_PLAYER_UNIT_SPELL_CHANNEL133
playerunitevent EVENT_PLAYER_UNIT_SPELL_CAST265
playerunitevent EVENT_PLAYER_UNIT_SPELL_EFFECT256
playerunitevent EVENT_PLAYER_UNIT_SPELL_FINISH921
playerunitevent EVENT_PLAYER_UNIT_SPELL_ENDCAST280
playerunitevent EVENT_PLAYER_UNIT_PAWN_ITEM500
unitevent EVENT_UNIT_SELL259
unitevent EVENT_UNIT_CHANGE_OWNER291
unitevent EVENT_UNIT_SELL_ITEM150
unitevent EVENT_UNIT_SPELL_CHANNEL193
unitevent EVENT_UNIT_SPELL_CAST446
unitevent EVENT_UNIT_SPELL_EFFECT611
unitevent EVENT_UNIT_SPELL_FINISH333
unitevent EVENT_UNIT_SPELL_ENDCAST309
unitevent EVENT_UNIT_PAWN_ITEM276
limitop LESS_THAN294
limitop LESS_THAN_OR_EQUAL112
limitop EQUAL472
limitop GREATER_THAN_OR_EQUAL327
limitop GREATER_THAN200
limitop NOT_EQUAL874
unittype UNIT_TYPE_HERO219
unittype UNIT_TYPE_DEAD329
unittype UNIT_TYPE_STRUCTURE100
unittype UNIT_TYPE_FLYING301
unittype UNIT_TYPE_GROUND568
unittype UNIT_TYPE_ATTACKS_FLYING160
unittype UNIT_TYPE_ATTACKS_GROUND503
unittype UNIT_TYPE_MELEE_ATTACKER564
unittype UNIT_TYPE_RANGED_ATTACKER319
unittype UNIT_TYPE_GIANT969
unittype UNIT_TYPE_SUMMONED230
unittype UNIT_TYPE_STUNNED316
unittype UNIT_TYPE_PLAGUED923
unittype UNIT_TYPE_SNARED122
unittype UNIT_TYPE_UNDEAD203
unittype UNIT_TYPE_MECHANICAL153
unittype UNIT_TYPE_PEON186
unittype UNIT_TYPE_SAPPER240
unittype UNIT_TYPE_TOWNHALL406
unittype UNIT_TYPE_ANCIENT256
unittype UNIT_TYPE_TAUREN323
unittype UNIT_TYPE_POISONED131
unittype UNIT_TYPE_POLYMORPHED779
unittype UNIT_TYPE_SLEEPING223
unittype UNIT_TYPE_RESISTANT199
unittype UNIT_TYPE_ETHEREAL319
unittype UNIT_TYPE_MAGIC_IMMUNE162
itemtype ITEM_TYPE_PERMANENT284
itemtype ITEM_TYPE_CHARGED164
itemtype ITEM_TYPE_POWERUP256
itemtype ITEM_TYPE_ARTIFACT774
itemtype ITEM_TYPE_PURCHASABLE199
itemtype ITEM_TYPE_CAMPAIGN464
itemtype ITEM_TYPE_MISCELLANEOUS268
itemtype ITEM_TYPE_UNKNOWN193
itemtype ITEM_TYPE_ANY830
itemtype ITEM_TYPE_TOME318
camerafield CAMERA_FIELD_TARGET_DISTANCE250
camerafield CAMERA_FIELD_FARZ140
camerafield CAMERA_FIELD_ANGLE_OF_ATTACK333
camerafield CAMERA_FIELD_FIELD_OF_VIEW332
camerafield CAMERA_FIELD_ROLL287
camerafield CAMERA_FIELD_ROTATION208
camerafield CAMERA_FIELD_ZOFFSET238
blendmode BLEND_MODE_NONE306
blendmode BLEND_MODE_DONT_CARE787
blendmode BLEND_MODE_KEYALPHA149
blendmode BLEND_MODE_BLEND108
blendmode BLEND_MODE_ADDITIVE294
blendmode BLEND_MODE_MODULATE155
blendmode BLEND_MODE_MODULATE_2X335
raritycontrol RARITY_FREQUENT228
raritycontrol RARITY_RARE220
texmapflags TEXMAP_FLAG_NONE174
texmapflags TEXMAP_FLAG_WRAP_U514
texmapflags TEXMAP_FLAG_WRAP_V176
texmapflags TEXMAP_FLAG_WRAP_UV794
fogstate FOG_OF_WAR_MASKED162
fogstate FOG_OF_WAR_FOGGED147
fogstate FOG_OF_WAR_VISIBLE657
integer CAMERA_MARGIN_LEFT275
integer CAMERA_MARGIN_RIGHT231
integer CAMERA_MARGIN_TOP125
integer CAMERA_MARGIN_BOTTOM187
effecttype EFFECT_TYPE_EFFECT233
effecttype EFFECT_TYPE_TARGET295
effecttype EFFECT_TYPE_CASTER984
effecttype EFFECT_TYPE_SPECIAL321
effecttype EFFECT_TYPE_AREA_EFFECT141
effecttype EFFECT_TYPE_MISSILE105
effecttype EFFECT_TYPE_LIGHTNING769
soundtype SOUND_TYPE_EFFECT122
soundtype SOUND_TYPE_EFFECT_LOOPED199
real bj_PI432
real bj_E135
real bj_CELLWIDTH174
real bj_CLIFFHEIGHT299
real bj_UNIT_FACING242
real bj_RADTODEG169
real bj_DEGTORAD321
real bj_TEXT_DELAY_QUEST217
real bj_TEXT_DELAY_QUESTUPDATE142
real bj_TEXT_DELAY_QUESTDONE432
real bj_TEXT_DELAY_QUESTFAILED324
real bj_TEXT_DELAY_QUESTREQUIREMENT112
real bj_TEXT_DELAY_MISSIONFAILED206
real bj_TEXT_DELAY_ALWAYSHINT332
real bj_TEXT_DELAY_HINT284
real bj_TEXT_DELAY_SECRET285
real bj_TEXT_DELAY_UNITACQUIRED170
real bj_TEXT_DELAY_UNITAVAILABLE429
real bj_TEXT_DELAY_ITEMACQUIRED122
real bj_TEXT_DELAY_WARNING267
real bj_QUEUE_DELAY_QUEST585
real bj_QUEUE_DELAY_HINT654
real bj_QUEUE_DELAY_SECRET307
real bj_HANDICAP_EASY130
real bj_GAME_STARTED_THRESHOLD567
real bj_WAIT_FOR_COND_MIN_INTERVAL176
real bj_POLLED_WAIT_INTERVAL988
real bj_POLLED_WAIT_SKIP_THRESHOLD321
integer bj_MAX_INVENTORY971
integer bj_MAX_PLAYERS803
integer bj_PLAYER_NEUTRAL_VICTIM262
integer bj_PLAYER_NEUTRAL_EXTRA148
integer bj_MAX_PLAYER_SLOTS561
integer bj_MAX_SKELETONS674
integer bj_MAX_STOCK_ITEM_SLOTS130
integer bj_MAX_STOCK_UNIT_SLOTS194
integer bj_MAX_ITEM_LEVEL226
real bj_TOD_DAWN461
real bj_TOD_DUSK626
real bj_MELEE_STARTING_TOD241
integer bj_MELEE_STARTING_GOLD_V0260
integer bj_MELEE_STARTING_GOLD_V1211
integer bj_MELEE_STARTING_LUMBER_V0130
integer bj_MELEE_STARTING_LUMBER_V1139
integer bj_MELEE_STARTING_HERO_TOKENS124
integer bj_MELEE_HERO_LIMIT297
integer bj_MELEE_HERO_TYPE_LIMIT159
real bj_MELEE_MINE_SEARCH_RADIUS252
real bj_MELEE_CLEAR_UNITS_RADIUS113
real bj_MELEE_CRIPPLE_TIMEOUT241
real bj_MELEE_CRIPPLE_MSG_DURATION952
integer bj_MELEE_MAX_TWINKED_HEROES_V0366
integer bj_MELEE_MAX_TWINKED_HEROES_V1284
real bj_CREEP_ITEM_DELAY141
real bj_STOCK_RESTOCK_INITIAL_DELAY266
real bj_STOCK_RESTOCK_INTERVAL322
integer bj_STOCK_MAX_ITERATIONS652
integer bj_MAX_DEST_IN_REGION_EVENTS100
integer bj_CAMERA_MIN_FARZ190
integer bj_CAMERA_DEFAULT_DISTANCE334
integer bj_CAMERA_DEFAULT_FARZ297
integer bj_CAMERA_DEFAULT_AOA119
integer bj_CAMERA_DEFAULT_FOV918
integer bj_CAMERA_DEFAULT_ROLL270
integer bj_CAMERA_DEFAULT_ROTATION150
real bj_RESCUE_PING_TIME143
real bj_NOTHING_SOUND_DURATION203
real bj_TRANSMISSION_PING_TIME285
integer bj_TRANSMISSION_IND_RED147
integer bj_TRANSMISSION_IND_BLUE277
integer bj_TRANSMISSION_IND_GREEN184
integer bj_TRANSMISSION_IND_ALPHA301
real bj_TRANSMISSION_PORT_HANGTIME167
real bj_CINEMODE_INTERFACEFADE207
gamespeed bj_CINEMODE_GAMESPEED758
real bj_CINEMODE_VOLUME_UNITMOVEMENT298
real bj_CINEMODE_VOLUME_UNITSOUNDS222
real bj_CINEMODE_VOLUME_COMBAT446
real bj_CINEMODE_VOLUME_SPELLS205
real bj_CINEMODE_VOLUME_UI193
real bj_CINEMODE_VOLUME_MUSIC105
real bj_CINEMODE_VOLUME_AMBIENTSOUNDS249
real bj_CINEMODE_VOLUME_FIRE275
real bj_SPEECH_VOLUME_UNITMOVEMENT318
real bj_SPEECH_VOLUME_UNITSOUNDS133
real bj_SPEECH_VOLUME_COMBAT174
real bj_SPEECH_VOLUME_SPELLS851
real bj_SPEECH_VOLUME_UI666
real bj_SPEECH_VOLUME_MUSIC298
real bj_SPEECH_VOLUME_AMBIENTSOUNDS969
real bj_SPEECH_VOLUME_FIRE215
real bj_SMARTPAN_TRESHOLD_PAN180
real bj_SMARTPAN_TRESHOLD_SNAP331
integer bj_MAX_QUEUED_TRIGGERS126
real bj_QUEUED_TRIGGER_TIMEOUT264
integer bj_CAMPAIGN_INDEX_T200
integer bj_CAMPAIGN_INDEX_H310
integer bj_CAMPAIGN_INDEX_U111
integer bj_CAMPAIGN_INDEX_O735
integer bj_CAMPAIGN_INDEX_N833
integer bj_CAMPAIGN_INDEX_XN158
integer bj_CAMPAIGN_INDEX_XH703
integer bj_CAMPAIGN_INDEX_XU121
integer bj_CAMPAIGN_INDEX_XO122
integer bj_CAMPAIGN_OFFSET_T350
integer bj_CAMPAIGN_OFFSET_H138
integer bj_CAMPAIGN_OFFSET_U271
integer bj_CAMPAIGN_OFFSET_O816
integer bj_CAMPAIGN_OFFSET_N172
integer bj_CAMPAIGN_OFFSET_XN312
integer bj_CAMPAIGN_OFFSET_XH328
integer bj_CAMPAIGN_OFFSET_XU125
integer bj_CAMPAIGN_OFFSET_XO228
integer bj_MISSION_INDEX_T00276
integer bj_MISSION_INDEX_T01148
integer bj_MISSION_INDEX_H00127
integer bj_MISSION_INDEX_H01307
integer bj_MISSION_INDEX_H02267
integer bj_MISSION_INDEX_H03103
integer bj_MISSION_INDEX_H04176
integer bj_MISSION_INDEX_H05201
integer bj_MISSION_INDEX_H06211
integer bj_MISSION_INDEX_H07183
integer bj_MISSION_INDEX_H08142
integer bj_MISSION_INDEX_H09215
integer bj_MISSION_INDEX_H10315
integer bj_MISSION_INDEX_H11227
integer bj_MISSION_INDEX_U00171
integer bj_MISSION_INDEX_U01130
integer bj_MISSION_INDEX_U02277
integer bj_MISSION_INDEX_U03177
integer bj_MISSION_INDEX_U05157
integer bj_MISSION_INDEX_U07149
integer bj_MISSION_INDEX_U08232
integer bj_MISSION_INDEX_U09277
integer bj_MISSION_INDEX_U10388
integer bj_MISSION_INDEX_U11248
integer bj_MISSION_INDEX_O00289
integer bj_MISSION_INDEX_O01256
integer bj_MISSION_INDEX_O02268
integer bj_MISSION_INDEX_O03161
integer bj_MISSION_INDEX_O04284
integer bj_MISSION_INDEX_O05956
integer bj_MISSION_INDEX_O06921
integer bj_MISSION_INDEX_O07274
integer bj_MISSION_INDEX_O08979
integer bj_MISSION_INDEX_O09155
integer bj_MISSION_INDEX_O10226
integer bj_MISSION_INDEX_N00165
integer bj_MISSION_INDEX_N01248
integer bj_MISSION_INDEX_N02276
integer bj_MISSION_INDEX_N03132
integer bj_MISSION_INDEX_N04868
integer bj_MISSION_INDEX_N05112
integer bj_MISSION_INDEX_N06219
integer bj_MISSION_INDEX_N07150
integer bj_MISSION_INDEX_N08179
integer bj_MISSION_INDEX_N09739
integer bj_MISSION_INDEX_XN00192
integer bj_MISSION_INDEX_XN01126
integer bj_MISSION_INDEX_XN02610
integer bj_MISSION_INDEX_XN03537
integer bj_MISSION_INDEX_XN04888
integer bj_MISSION_INDEX_XN05172
integer bj_MISSION_INDEX_XN06975
integer bj_MISSION_INDEX_XN07557
integer bj_MISSION_INDEX_XN08284
integer bj_MISSION_INDEX_XN09305
integer bj_MISSION_INDEX_XN10279
integer bj_MISSION_INDEX_XH00273
integer bj_MISSION_INDEX_XH01112
integer bj_MISSION_INDEX_XH02228
integer bj_MISSION_INDEX_XH03137
integer bj_MISSION_INDEX_XH04154
integer bj_MISSION_INDEX_XH05100
integer bj_MISSION_INDEX_XH06918
integer bj_MISSION_INDEX_XH07367
integer bj_MISSION_INDEX_XH08108
integer bj_MISSION_INDEX_XH09937
integer bj_MISSION_INDEX_XU00106
integer bj_MISSION_INDEX_XU01164
integer bj_MISSION_INDEX_XU02297
integer bj_MISSION_INDEX_XU03244
integer bj_MISSION_INDEX_XU04318
integer bj_MISSION_INDEX_XU05569
integer bj_MISSION_INDEX_XU06306
integer bj_MISSION_INDEX_XU07332
integer bj_MISSION_INDEX_XU08390
integer bj_MISSION_INDEX_XU09377
integer bj_MISSION_INDEX_XU10292
integer bj_MISSION_INDEX_XU11233
integer bj_MISSION_INDEX_XU12138
integer bj_MISSION_INDEX_XU13242
integer bj_MISSION_INDEX_XO00261
integer bj_CINEMATICINDEX_TOP287
integer bj_CINEMATICINDEX_HOP159
integer bj_CINEMATICINDEX_HED317
integer bj_CINEMATICINDEX_OOP847
integer bj_CINEMATICINDEX_OED268
integer bj_CINEMATICINDEX_UOP258
integer bj_CINEMATICINDEX_UED201
integer bj_CINEMATICINDEX_NOP247
integer bj_CINEMATICINDEX_NED789
integer bj_CINEMATICINDEX_XOP208
integer bj_CINEMATICINDEX_XED314
integer bj_ALLIANCE_UNALLIED328
integer bj_ALLIANCE_UNALLIED_VISION153
integer bj_ALLIANCE_ALLIED285
integer bj_ALLIANCE_ALLIED_VISION122
integer bj_ALLIANCE_ALLIED_UNITS354
integer bj_ALLIANCE_ALLIED_ADVUNITS354
integer bj_ALLIANCE_NEUTRAL251
integer bj_ALLIANCE_NEUTRAL_VISION131
integer bj_KEYEVENTTYPE_DEPRESS235
integer bj_KEYEVENTTYPE_RELEASE324
integer bj_KEYEVENTKEY_LEFT193
integer bj_KEYEVENTKEY_RIGHT182
integer bj_KEYEVENTKEY_DOWN165
integer bj_KEYEVENTKEY_UP536
integer bj_TIMETYPE_ADD173
integer bj_TIMETYPE_SET269
integer bj_TIMETYPE_SUB280
integer bj_CAMERABOUNDS_ADJUST_ADD262
integer bj_CAMERABOUNDS_ADJUST_SUB169
integer bj_QUESTTYPE_REQ_DISCOVERED225
integer bj_QUESTTYPE_REQ_UNDISCOVERED131
integer bj_QUESTTYPE_OPT_DISCOVERED116
integer bj_QUESTTYPE_OPT_UNDISCOVERED149
integer bj_QUESTMESSAGE_DISCOVERED965
integer bj_QUESTMESSAGE_UPDATED317
integer bj_QUESTMESSAGE_COMPLETED189
integer bj_QUESTMESSAGE_FAILED753
integer bj_QUESTMESSAGE_REQUIREMENT186
integer bj_QUESTMESSAGE_MISSIONFAILED974
integer bj_QUESTMESSAGE_ALWAYSHINT110
integer bj_QUESTMESSAGE_HINT241
integer bj_QUESTMESSAGE_SECRET231
integer bj_QUESTMESSAGE_UNITACQUIRED249
integer bj_QUESTMESSAGE_UNITAVAILABLE213
integer bj_QUESTMESSAGE_ITEMACQUIRED244
integer bj_QUESTMESSAGE_WARNING999
integer bj_SORTTYPE_SORTBYVALUE231
integer bj_SORTTYPE_SORTBYPLAYER143
integer bj_SORTTYPE_SORTBYLABEL309
integer bj_CINEFADETYPE_FADEIN155
integer bj_CINEFADETYPE_FADEOUT264
integer bj_CINEFADETYPE_FADEOUTIN115
integer bj_REMOVEBUFFS_POSITIVE128
integer bj_REMOVEBUFFS_NEGATIVE930
integer bj_REMOVEBUFFS_ALL166
integer bj_REMOVEBUFFS_NONTLIFE142
integer bj_BUFF_POLARITY_POSITIVE181
integer bj_BUFF_POLARITY_NEGATIVE239
integer bj_BUFF_POLARITY_EITHER450
integer bj_BUFF_RESIST_MAGIC678
integer bj_BUFF_RESIST_PHYSICAL316
integer bj_BUFF_RESIST_EITHER756
integer bj_BUFF_RESIST_BOTH110
integer bj_HEROSTAT_STR680
integer bj_HEROSTAT_AGI136
integer bj_HEROSTAT_INT149
integer bj_MODIFYMETHOD_ADD299
integer bj_MODIFYMETHOD_SUB263
integer bj_MODIFYMETHOD_SET275
integer bj_UNIT_STATE_METHOD_ABSOLUTE324
integer bj_UNIT_STATE_METHOD_RELATIVE162
integer bj_UNIT_STATE_METHOD_DEFAULTS144
integer bj_UNIT_STATE_METHOD_MAXIMUM138
integer bj_GATEOPERATION_CLOSE123
integer bj_GATEOPERATION_OPEN273
integer bj_GATEOPERATION_DESTROY179
integer bj_GAMECACHE_BOOLEAN569
integer bj_GAMECACHE_INTEGER258
integer bj_GAMECACHE_REAL135
integer bj_GAMECACHE_UNIT826
integer bj_GAMECACHE_STRING238
integer bj_HASHTABLE_BOOLEAN846
integer bj_HASHTABLE_INTEGER601
integer bj_HASHTABLE_REAL405
integer bj_HASHTABLE_STRING148
integer bj_HASHTABLE_HANDLE152
integer bj_ITEM_STATUS_HIDDEN257
integer bj_ITEM_STATUS_OWNED293
integer bj_ITEM_STATUS_INVULNERABLE279
integer bj_ITEM_STATUS_POWERUP136
integer bj_ITEM_STATUS_SELLABLE105
integer bj_ITEM_STATUS_PAWNABLE184
integer bj_ITEMCODE_STATUS_POWERUP268
integer bj_ITEMCODE_STATUS_SELLABLE153
integer bj_ITEMCODE_STATUS_PAWNABLE103
integer bj_MINIMAPPINGSTYLE_SIMPLE254
integer bj_MINIMAPPINGSTYLE_FLASHY261
integer bj_MINIMAPPINGSTYLE_ATTACK301
real bj_CORPSE_MAX_DEATH_TIME729
integer bj_CORPSETYPE_FLESH293
integer bj_CORPSETYPE_BONE265
integer bj_ELEVATOR_BLOCKER_CODE171
integer bj_ELEVATOR_CODE01469
integer bj_ELEVATOR_CODE02126
integer bj_ELEVATOR_WALL_TYPE_ALL185
integer bj_ELEVATOR_WALL_TYPE_EAST116
integer bj_ELEVATOR_WALL_TYPE_NORTH234
integer bj_ELEVATOR_WALL_TYPE_SOUTH111
integer bj_ELEVATOR_WALL_TYPE_WEST934
force bj_FORCE_ALL_PLAYERS266
array force bj_FORCE_PLAYER219
integer bj_MELEE_MAX_TWINKED_HEROES189
rect bj_mapInitialPlayableArea946
rect bj_mapInitialCameraBounds238
integer bj_forLoopAIndex273
integer bj_forLoopBIndex249
integer bj_forLoopAIndexEnd855
integer bj_forLoopBIndexEnd312
boolean bj_slotControlReady177
array boolean bj_slotControlUsed756
array mapcontrol bj_slotControl288
timer bj_gameStartedTimer136
boolean bj_gameStarted254
timer bj_volumeGroupsTimer114
boolean bj_isSinglePlayer790
trigger bj_dncSoundsDay181
trigger bj_dncSoundsNight167
sound bj_dayAmbientSound283
sound bj_nightAmbientSound584
trigger bj_dncSoundsDawn292
trigger bj_dncSoundsDusk963
sound bj_dawnSound183
sound bj_duskSound141
boolean bj_useDawnDuskSounds259
boolean bj_dncIsDaytime305
sound bj_rescueSound181
sound bj_questDiscoveredSound136
sound bj_questUpdatedSound316
sound bj_questCompletedSound268
sound bj_questFailedSound194
sound bj_questHintSound438
sound bj_questSecretSound191
sound bj_questItemAcquiredSound205
sound bj_questWarningSound912
sound bj_victoryDialogSound107
sound bj_defeatDialogSound203
trigger bj_stockItemPurchased251
timer bj_stockUpdateTimer250
array boolean bj_stockAllowedPermanent300
array boolean bj_stockAllowedCharged327
array boolean bj_stockAllowedArtifact109
integer bj_stockPickedItemLevel304
itemtype bj_stockPickedItemType311
trigger bj_meleeVisibilityTrained220
boolean bj_meleeVisibilityIsDay140
boolean bj_meleeGrantHeroItems303
location bj_meleeNearestMineToLoc335
unit bj_meleeNearestMine558
real bj_meleeNearestMineDist107
boolean bj_meleeGameOver436
array boolean bj_meleeDefeated232
array boolean bj_meleeVictoried748
array unit bj_ghoul301
array timer bj_crippledTimer248
array timerdialog bj_crippledTimerWindows130
array boolean bj_playerIsCrippled997
array boolean bj_playerIsExposed167
boolean bj_finishSoonAllExposed195
timerdialog bj_finishSoonTimerDialog302
array integer bj_meleeTwinkedHeroes269
trigger bj_rescueUnitBehavior200
boolean bj_rescueChangeColorUnit197
boolean bj_rescueChangeColorBldg177
timer bj_cineSceneEndingTimer512
sound bj_cineSceneLastSound133
trigger bj_cineSceneBeingSkipped173
gamespeed bj_cineModePriorSpeed277
boolean bj_cineModePriorFogSetting182
boolean bj_cineModePriorMaskSetting292
boolean bj_cineModeAlreadyIn191
boolean bj_cineModePriorDawnDusk122
integer bj_cineModeSavedSeed259
timer bj_cineFadeFinishTimer202
timer bj_cineFadeContinueTimer287
real bj_cineFadeContinueRed218
real bj_cineFadeContinueGreen519
real bj_cineFadeContinueBlue692
real bj_cineFadeContinueTrans484
real bj_cineFadeContinueDuration184
string bj_cineFadeContinueTex133
integer bj_queuedExecTotal254
array trigger bj_queuedExecTriggers187
array boolean bj_queuedExecUseConds312
timer bj_queuedExecTimeoutTimer257
trigger bj_queuedExecTimeout320
integer bj_destInRegionDiesCount159
trigger bj_destInRegionDiesTrig303
integer bj_groupCountUnits746
integer bj_forceCountPlayers292
integer bj_groupEnumTypeId293
player bj_groupEnumOwningPlayer771
group bj_groupAddGroupDest242
group bj_groupRemoveGroupDest962
integer bj_groupRandomConsidered126
unit bj_groupRandomCurrentPick233
group bj_groupLastCreatedDest109
group bj_randomSubGroupGroup133
integer bj_randomSubGroupWant265
integer bj_randomSubGroupTotal126
real bj_randomSubGroupChance182
integer bj_destRandomConsidered281
destructable bj_destRandomCurrentPick261
destructable bj_elevatorWallBlocker323
destructable bj_elevatorNeighbor183
integer bj_itemRandomConsidered246
item bj_itemRandomCurrentPick164
integer bj_forceRandomConsidered125
player bj_forceRandomCurrentPick906
unit bj_makeUnitRescuableUnit155
boolean bj_makeUnitRescuableFlag183
boolean bj_pauseAllUnitsFlag257
location bj_enumDestructableCenter320
real bj_enumDestructableRadius252
playercolor bj_setPlayerTargetColor559
boolean bj_isUnitGroupDeadResult577
boolean bj_isUnitGroupEmptyResult333
boolean bj_isUnitGroupInRectResult251
rect bj_isUnitGroupInRectRect131
boolean bj_changeLevelShowScores860
string bj_changeLevelMapName248
group bj_suspendDecayFleshGroup189
group bj_suspendDecayBoneGroup160
timer bj_delayedSuspendDecayTimer199
trigger bj_delayedSuspendDecayTrig306
integer bj_livingPlayerUnitsTypeId120
widget bj_lastDyingWidget147
integer bj_randDistCount311
array integer bj_randDistID329
array integer bj_randDistChance114
unit bj_lastCreatedUnit179
item bj_lastCreatedItem120
item bj_lastRemovedItem243
unit bj_lastHauntedGoldMine294
destructable bj_lastCreatedDestructable368
group bj_lastCreatedGroup263
fogmodifier bj_lastCreatedFogModifier211
effect bj_lastCreatedEffect331
weathereffect bj_lastCreatedWeatherEffect313
terraindeformation bj_lastCreatedTerrainDeformation265
quest bj_lastCreatedQuest205
questitem bj_lastCreatedQuestItem981
defeatcondition bj_lastCreatedDefeatCondition416
timer bj_lastStartedTimer231
timerdialog bj_lastCreatedTimerDialog810
leaderboard bj_lastCreatedLeaderboard299
multiboard bj_lastCreatedMultiboard183
sound bj_lastPlayedSound153
string bj_lastPlayedMusic108
real bj_lastTransmissionDuration209
gamecache bj_lastCreatedGameCache666
hashtable bj_lastCreatedHashtable157
unit bj_lastLoadedUnit132
button bj_lastCreatedButton262
unit bj_lastReplacedUnit242
texttag bj_lastCreatedTextTag210
lightning bj_lastCreatedLightning304
image bj_lastCreatedImage127
ubersplat bj_lastCreatedUbersplat172
boolexpr filterIssueHauntOrderAtLocBJ298
boolexpr filterEnumDestructablesInCircleBJ212
boolexpr filterGetUnitsInRectOfPlayer138
boolexpr filterGetUnitsOfTypeIdAll241
boolexpr filterGetUnitsOfPlayerAndTypeId113
boolexpr filterMeleeTrainedUnitIsHeroBJ282
boolexpr filterLivingPlayerUnitsOfTypeId938
boolean bj_wantDestroyGroup103
integer DEBUG_LEVEL787
real DEBUG_MSG_DURATION310
integer DUMMY_UNIT_ID197
integer HEIGHT_ENABLER205
integer TREE_RECOGNITION226
real ANIMATION_PERIOD314
real MAX_COLLISION_SIZE202
player DUMMY_PLAYER328
real PI370
real DEGTORAD522
real RADTODEG173
hashtable ht108
array integer Table_nextFree296
integer Table_firstFree631
integer Table_maxIndex176
array integer Table_typeId367
integer triggerData369
integer ANGLE_RESOLUTION132
integer INITIAL_DUMMY_COUNT896
integer DUMMY_STACK_LIMIT179
array integer rqs244
array integer RecycleQueue_nextFree286
integer RecycleQueue_firstFree988
integer RecycleQueue_maxIndex266
array integer RecycleQueue_typeId186
array real angle121
array integer queueSize280
array integer firstDummy203
array integer lastDummy262
integer first299
integer last130
integer size259
array integer prev244
array integer next151
array integer Dummy_nextFree113
integer Dummy_firstFree203
integer Dummy_maxIndex141
array integer Dummy_typeId312
group g393
array unit u258
array integer next291
unit staticDummy989
real MIN_RECYCLE_DELAY243
real RECYCLE_INTERVAL325
array integer Fx_nextFree314
integer Fx_firstFree174
integer Fx_maxIndex113
array integer Fx_typeId134
array unit dummy191
array effect fx552
array real zAngle744
array string sfxPath154
array integer red185
array integer green118
array integer blue232
array integer alpha299
timer recycler246
array integer list324
array integer Recyclebin_nextFree150
integer Recyclebin_firstFree326
integer Recyclebin_maxIndex215
array integer Recyclebin_typeId844
array unit u303
array integer next301
integer readindex332
integer writeindex315
integer count118
real MAX_RANGE201
integer DUMMY_ITEM_ID254
location tempLoc256
item dItem204
rect find288
array item hid289
integer hidMax310
real X223
real Y218
real zz289
real lastx109
real lasty115
real e207
real zdif155
real lastz222
trigger gg_trg_Melee_Initialization350
trigger gg_trg_Untitled_Trigger_002422
trigger gg_trg_Untitled_Trigger_001187
unit gg_unit_h000_0002188


function initGlobals() returns void{ 
    Table_firstFree631 = 0
    Table_maxIndex176 = 0
    RecycleQueue_firstFree988 = 0
    RecycleQueue_maxIndex266 = 0
    Dummy_firstFree203 = 0
    Dummy_maxIndex141 = 0
    Fx_firstFree174 = 0
    Fx_maxIndex113 = 0
    Recyclebin_firstFree326 = 0
    Recyclebin_maxIndex215 = 0
    gg_trg_Melee_Initialization350 = null
    gg_trg_Untitled_Trigger_002422 = null
    gg_trg_Untitled_Trigger_001187 = null
    gg_unit_h000_0002188 = null
}


function WidgetDropItem(widget inWidget114, integer inItemID155) returns item{ 
    local real x300
    local real y145
    local real radius153
    local real widgetX129
    local real widgetY218
    null
    null
    radius153 = 32.
    null
    null
    if (inItemID155 == (- 1)){
        return null
    } else {
    }
    widgetX129 = GetWidgetX(inWidget114)
    widgetY218 = GetWidgetY(inWidget114)
    x300 = GetRandomReal((widgetX129 - radius153), (widgetX129 + radius153))
    y145 = GetRandomReal((widgetY218 - radius153), (widgetY218 + radius153))
    return CreateItem(inItemID155, x300, y145)
}


function GetWidgetX(widget whichWidget177) returns real{ 
}


function GetWidgetY(widget whichWidget235) returns real{ 
}


function GetRandomReal(real lowBound295, real highBound230) returns real{ 
}


function CreateItem(integer itemid238, real x155, real y186) returns item{ 
}


function UnitDropItem(unit inUnit257, integer inItemID210) returns item{ 
    local real x116
    local real y118
    local real radius227
    local real unitX328
    local real unitY223
    local item droppedItem246
    null
    null
    radius227 = 32.
    null
    null
    null
    if (inItemID210 == (- 1)){
        return null
    } else {
    }
    unitX328 = GetUnitX(inUnit257)
    unitY223 = GetUnitY(inUnit257)
    x116 = GetRandomReal((unitX328 - radius227), (unitX328 + radius227))
    y118 = GetRandomReal((unitY223 - radius227), (unitY223 + radius227))
    droppedItem246 = CreateItem(inItemID210, x116, y118)
    SetItemDropID(droppedItem246, GetUnitTypeId(inUnit257))
    UpdateStockAvailability(droppedItem246)
    return droppedItem246
}


function GetUnitX(unit whichUnit149) returns real{ 
}


function GetUnitY(unit whichUnit816) returns real{ 
}


function GetUnitTypeId(unit whichUnit258) returns integer{ 
}


function SetItemDropID(item whichItem329, integer unitId319) returns void{ 
}


function UpdateStockAvailability(item whichItem166) returns void{ 
    local itemtype iType286
    local integer iLevel334
    iType286 = GetItemType(whichItem166)
    iLevel334 = GetItemLevel(whichItem166)
    if (iType286 == ITEM_TYPE_PERMANENT284){
        bj_stockAllowedPermanent300[iLevel334] = true
    } else {
        if (iType286 == ITEM_TYPE_CHARGED164){
            bj_stockAllowedCharged327[iLevel334] = true
        } else {
            if (iType286 == ITEM_TYPE_ARTIFACT774){
                bj_stockAllowedArtifact109[iLevel334] = true
            } else {
            }
        }
    }
}


function RandomDistChoose() returns integer{ 
    local integer sum425
    local integer chance435
    local integer index245
    local integer foundID267
    local boolean done186
    sum425 = 0
    chance435 = 0
    null
    foundID267 = (- 1)
    null
    if (bj_randDistCount311 == 0){
        return (- 1)
    } else {
    }
    index245 = 0
    loop {
        sum425 = (sum425 + bj_randDistChance114[index245])
        index245 = (index245 + 1)
        exitwhen (index245 == bj_randDistCount311)
    }
    chance435 = GetRandomInt(1, sum425)
    index245 = 0
    sum425 = 0
    done186 = false
    loop {
        sum425 = (sum425 + bj_randDistChance114[index245])
        if (chance435 <= sum425){
            foundID267 = bj_randDistID329[index245]
            done186 = true
        } else {
        }
        index245 = (index245 + 1)
        if (index245 == bj_randDistCount311){
            done186 = true
        } else {
        }
        exitwhen (done186 == true)
    }
    return foundID267
}


function GetRandomInt(integer lowBound215, integer highBound882) returns integer{ 
}


function RandomDistAddItem(integer inID145, integer inChance186) returns void{ 
    bj_randDistID329[bj_randDistCount311] = inID145
    bj_randDistChance114[bj_randDistCount311] = inChance186
    bj_randDistCount311 = (bj_randDistCount311 + 1)
}


function RandomDistReset() returns void{ 
    bj_randDistCount311 = 0
}


function InitBlizzard() returns void{ 
    ConfigureNeutralVictim()
    InitBlizzardGlobals()
    InitQueuedTriggers()
    InitRescuableBehaviorBJ()
    InitDNCSounds()
    InitMapRects()
    InitSummonableCaps()
    InitNeutralBuildings()
    DetectGameStarted()
}


function ConfigureNeutralVictim() returns void{ 
    local integer index223
    local player indexPlayer335
    local player neutralVictim290
    null
    null
    neutralVictim290 = Player(bj_PLAYER_NEUTRAL_VICTIM262)
    index223 = 0
    loop {
        indexPlayer335 = Player(index223)
        SetPlayerAlliance(neutralVictim290, indexPlayer335, ALLIANCE_PASSIVE306, true)
        SetPlayerAlliance(indexPlayer335, neutralVictim290, ALLIANCE_PASSIVE306, false)
        index223 = (index223 + 1)
        exitwhen (index223 == bj_MAX_PLAYERS803)
    }
    indexPlayer335 = Player(PLAYER_NEUTRAL_AGGRESSIVE113)
    SetPlayerAlliance(neutralVictim290, indexPlayer335, ALLIANCE_PASSIVE306, true)
    SetPlayerAlliance(indexPlayer335, neutralVictim290, ALLIANCE_PASSIVE306, true)
    SetPlayerState(neutralVictim290, PLAYER_STATE_GIVES_BOUNTY116, 0)
}


function InitBlizzardGlobals() returns void{ 
    local integer index526
    local integer userControlledPlayers290
    local version v152
    null
    null
    null
    filterIssueHauntOrderAtLocBJ298 = Filter(function IssueHauntOrderAtLocBJFilter)
    filterEnumDestructablesInCircleBJ212 = Filter(function EnumDestructablesInCircleBJFilter)
    filterGetUnitsInRectOfPlayer138 = Filter(function GetUnitsInRectOfPlayerFilter)
    filterGetUnitsOfTypeIdAll241 = Filter(function GetUnitsOfTypeIdAllFilter)
    filterGetUnitsOfPlayerAndTypeId113 = Filter(function GetUnitsOfPlayerAndTypeIdFilter)
    filterMeleeTrainedUnitIsHeroBJ282 = Filter(function MeleeTrainedUnitIsHeroBJFilter)
    filterLivingPlayerUnitsOfTypeId938 = Filter(function LivingPlayerUnitsOfTypeIdFilter)
    index526 = 0
    loop {
        exitwhen (index526 == bj_MAX_PLAYER_SLOTS561)
        bj_FORCE_PLAYER219[index526] = CreateForce()
        ForceAddPlayer(bj_FORCE_PLAYER219[index526], Player(index526))
        index526 = (index526 + 1)
    }
    bj_FORCE_ALL_PLAYERS266 = CreateForce()
    ForceEnumPlayers(bj_FORCE_ALL_PLAYERS266, null)
    bj_cineModePriorSpeed277 = GetGameSpeed()
    bj_cineModePriorFogSetting182 = IsFogEnabled()
    bj_cineModePriorMaskSetting292 = IsFogMaskEnabled()
    index526 = 0
    loop {
        exitwhen (index526 >= bj_MAX_QUEUED_TRIGGERS126)
        bj_queuedExecTriggers187[index526] = null
        bj_queuedExecUseConds312[index526] = false
        index526 = (index526 + 1)
    }
    bj_isSinglePlayer790 = false
    userControlledPlayers290 = 0
    index526 = 0
    loop {
        exitwhen (index526 >= bj_MAX_PLAYERS803)
        if ((GetPlayerController(Player(index526)) == MAP_CONTROL_USER306) and (GetPlayerSlotState(Player(index526)) == PLAYER_SLOT_STATE_PLAYING320)){
            userControlledPlayers290 = (userControlledPlayers290 + 1)
        } else {
        }
        index526 = (index526 + 1)
    }
    bj_isSinglePlayer790 = (userControlledPlayers290 == 1)
    bj_rescueSound181 = CreateSoundFromLabel("Rescue", false, false, false, 10000, 10000)
    bj_questDiscoveredSound136 = CreateSoundFromLabel("QuestNew", false, false, false, 10000, 10000)
    bj_questUpdatedSound316 = CreateSoundFromLabel("QuestUpdate", false, false, false, 10000, 10000)
    bj_questCompletedSound268 = CreateSoundFromLabel("QuestCompleted", false, false, false, 10000, 10000)
    bj_questFailedSound194 = CreateSoundFromLabel("QuestFailed", false, false, false, 10000, 10000)
    bj_questHintSound438 = CreateSoundFromLabel("Hint", false, false, false, 10000, 10000)
    bj_questSecretSound191 = CreateSoundFromLabel("SecretFound", false, false, false, 10000, 10000)
    bj_questItemAcquiredSound205 = CreateSoundFromLabel("ItemReward", false, false, false, 10000, 10000)
    bj_questWarningSound912 = CreateSoundFromLabel("Warning", false, false, false, 10000, 10000)
    bj_victoryDialogSound107 = CreateSoundFromLabel("QuestCompleted", false, false, false, 10000, 10000)
    bj_defeatDialogSound203 = CreateSoundFromLabel("QuestFailed", false, false, false, 10000, 10000)
    DelayedSuspendDecayCreate()
    v152 = VersionGet()
    if (v152 == VERSION_REIGN_OF_CHAOS290){
        bj_MELEE_MAX_TWINKED_HEROES189 = bj_MELEE_MAX_TWINKED_HEROES_V0366
    } else {
        bj_MELEE_MAX_TWINKED_HEROES189 = bj_MELEE_MAX_TWINKED_HEROES_V1284
    }
}


function InitQueuedTriggers() returns void{ 
    bj_queuedExecTimeout320 = CreateTrigger()
    TriggerRegisterTimerExpireEvent(bj_queuedExecTimeout320, bj_queuedExecTimeoutTimer257)
    TriggerAddAction(bj_queuedExecTimeout320, function QueuedTriggerDoneBJ)
}


function InitRescuableBehaviorBJ() returns void{ 
    local integer index175
    null
    index175 = 0
    loop {
        if (GetPlayerController(Player(index175)) == MAP_CONTROL_RESCUABLE260){
            TryInitRescuableTriggersBJ()
            return %nothing%
        } else {
        }
        index175 = (index175 + 1)
        exitwhen (index175 == bj_MAX_PLAYERS803)
    }
}


function InitDNCSounds() returns void{ 
    bj_dawnSound183 = CreateSoundFromLabel("RoosterSound", false, false, false, 10000, 10000)
    bj_duskSound141 = CreateSoundFromLabel("WolfSound", false, false, false, 10000, 10000)
    bj_dncSoundsDawn292 = CreateTrigger()
    TriggerRegisterGameStateEvent(bj_dncSoundsDawn292, GAME_STATE_TIME_OF_DAY129, EQUAL472, bj_TOD_DAWN461)
    TriggerAddAction(bj_dncSoundsDawn292, function SetDNCSoundsDawn)
    bj_dncSoundsDusk963 = CreateTrigger()
    TriggerRegisterGameStateEvent(bj_dncSoundsDusk963, GAME_STATE_TIME_OF_DAY129, EQUAL472, bj_TOD_DUSK626)
    TriggerAddAction(bj_dncSoundsDusk963, function SetDNCSoundsDusk)
    bj_dncSoundsDay181 = CreateTrigger()
    TriggerRegisterGameStateEvent(bj_dncSoundsDay181, GAME_STATE_TIME_OF_DAY129, GREATER_THAN_OR_EQUAL327, bj_TOD_DAWN461)
    TriggerRegisterGameStateEvent(bj_dncSoundsDay181, GAME_STATE_TIME_OF_DAY129, LESS_THAN294, bj_TOD_DUSK626)
    TriggerAddAction(bj_dncSoundsDay181, function SetDNCSoundsDay)
    bj_dncSoundsNight167 = CreateTrigger()
    TriggerRegisterGameStateEvent(bj_dncSoundsNight167, GAME_STATE_TIME_OF_DAY129, LESS_THAN294, bj_TOD_DAWN461)
    TriggerRegisterGameStateEvent(bj_dncSoundsNight167, GAME_STATE_TIME_OF_DAY129, GREATER_THAN_OR_EQUAL327, bj_TOD_DUSK626)
    TriggerAddAction(bj_dncSoundsNight167, function SetDNCSoundsNight)
}


function InitMapRects() returns void{ 
    bj_mapInitialPlayableArea946 = Rect((GetCameraBoundMinX() - GetCameraMargin(CAMERA_MARGIN_LEFT275)), (GetCameraBoundMinY() - GetCameraMargin(CAMERA_MARGIN_BOTTOM187)), (GetCameraBoundMaxX() + GetCameraMargin(CAMERA_MARGIN_RIGHT231)), (GetCameraBoundMaxY() + GetCameraMargin(CAMERA_MARGIN_TOP125)))
    bj_mapInitialCameraBounds238 = GetCurrentCameraBoundsMapRectBJ()
}


function InitSummonableCaps() returns void{ 
    local integer index166
    null
    index166 = 0
    loop {
        if (not GetPlayerTechResearched(Player(index166), 1382576756, true)){
            SetPlayerTechMaxAllowed(Player(index166), 1752331380, 0)
        } else {
        }
        if (not GetPlayerTechResearched(Player(index166), 1383031403, true)){
            SetPlayerTechMaxAllowed(Player(index166), 1869898347, 0)
        } else {
        }
        SetPlayerTechMaxAllowed(Player(index166), 1970498405, bj_MAX_SKELETONS674)
        index166 = (index166 + 1)
        exitwhen (index166 == bj_MAX_PLAYERS803)
    }
}


function InitNeutralBuildings() returns void{ 
    local integer iLevel266
    null
    iLevel266 = 0
    loop {
        bj_stockAllowedPermanent300[iLevel266] = false
        bj_stockAllowedCharged327[iLevel266] = false
        bj_stockAllowedArtifact109[iLevel266] = false
        iLevel266 = (iLevel266 + 1)
        exitwhen (iLevel266 > bj_MAX_ITEM_LEVEL226)
    }
    SetAllItemTypeSlots(bj_MAX_STOCK_ITEM_SLOTS130)
    SetAllUnitTypeSlots(bj_MAX_STOCK_UNIT_SLOTS194)
    bj_stockUpdateTimer250 = CreateTimer()
    TimerStart(bj_stockUpdateTimer250, bj_STOCK_RESTOCK_INITIAL_DELAY266, false, function StartStockUpdates)
    bj_stockItemPurchased251 = CreateTrigger()
    TriggerRegisterPlayerUnitEvent(bj_stockItemPurchased251, Player(PLAYER_NEUTRAL_PASSIVE270), EVENT_PLAYER_UNIT_SELL_ITEM259, null)
    TriggerAddAction(bj_stockItemPurchased251, function RemovePurchasedItem)
}


function DetectGameStarted() returns void{ 
    bj_gameStartedTimer136 = CreateTimer()
    TimerStart(bj_gameStartedTimer136, bj_GAME_STARTED_THRESHOLD567, false, function MarkGameStarted)
}


function CreateTimer() returns timer{ 
}


function MarkGameStarted() returns void{ 
    bj_gameStarted254 = true
    DestroyTimer(bj_gameStartedTimer136)
}


function TimerStart(timer whichTimer369, real timeout284, boolean periodic964, code handlerFunc125) returns void{ 
}


function DestroyTimer(timer whichTimer124) returns void{ 
}


function SetAllItemTypeSlots(integer slots196) returns void{ 
}


function SetAllUnitTypeSlots(integer slots216) returns void{ 
}


function StartStockUpdates() returns void{ 
    PerformStockUpdates()
    TimerStart(bj_stockUpdateTimer250, bj_STOCK_RESTOCK_INTERVAL322, true, function PerformStockUpdates)
}


function CreateTrigger() returns trigger{ 
}


function Player(integer number324) returns player{ 
}


function TriggerRegisterPlayerUnitEvent(trigger whichTrigger146, player whichPlayer316, playerunitevent whichPlayerUnitEvent139, boolexpr filter172) returns event{ 
}


function RemovePurchasedItem() returns void{ 
    RemoveItemFromStock(GetSellingUnit(), GetItemTypeId(GetSoldItem()))
}


function TriggerAddAction(trigger whichTrigger183, code actionFunc198) returns triggeraction{ 
}


function GetSellingUnit() returns unit{ 
}


function GetSoldItem() returns item{ 
}


function GetItemTypeId(item i317) returns integer{ 
}


function RemoveItemFromStock(unit whichUnit190, integer itemId241) returns void{ 
}


function PerformStockUpdates() returns void{ 
    local integer pickedItemId142
    local itemtype pickedItemType137
    local integer pickedItemLevel194
    local integer allowedCombinations333
    local integer iLevel227
    null
    null
    pickedItemLevel194 = 0
    allowedCombinations333 = 0
    null
    iLevel227 = 1
    loop {
        if bj_stockAllowedPermanent300[iLevel227]{
            allowedCombinations333 = (allowedCombinations333 + 1)
            if (GetRandomInt(1, allowedCombinations333) == 1){
                pickedItemType137 = ITEM_TYPE_PERMANENT284
                pickedItemLevel194 = iLevel227
            } else {
            }
        } else {
        }
        if bj_stockAllowedCharged327[iLevel227]{
            allowedCombinations333 = (allowedCombinations333 + 1)
            if (GetRandomInt(1, allowedCombinations333) == 1){
                pickedItemType137 = ITEM_TYPE_CHARGED164
                pickedItemLevel194 = iLevel227
            } else {
            }
        } else {
        }
        if bj_stockAllowedArtifact109[iLevel227]{
            allowedCombinations333 = (allowedCombinations333 + 1)
            if (GetRandomInt(1, allowedCombinations333) == 1){
                pickedItemType137 = ITEM_TYPE_ARTIFACT774
                pickedItemLevel194 = iLevel227
            } else {
            }
        } else {
        }
        iLevel227 = (iLevel227 + 1)
        exitwhen (iLevel227 > bj_MAX_ITEM_LEVEL226)
    }
    if (allowedCombinations333 == 0){
        return %nothing%
    } else {
    }
    UpdateEachStockBuilding(pickedItemType137, pickedItemLevel194)
}


function UpdateEachStockBuilding(itemtype iType326, integer iLevel148) returns void{ 
    local group g615
    null
    bj_stockPickedItemType311 = iType326
    bj_stockPickedItemLevel304 = iLevel148
    g615 = CreateGroup()
    GroupEnumUnitsOfType(g615, "marketplace", null)
    ForGroup(g615, function UpdateEachStockBuildingEnum)
    DestroyGroup(g615)
}


function CreateGroup() returns group{ 
}


function GroupEnumUnitsOfType(group whichGroup240, string unitname193, boolexpr filter138) returns void{ 
}


function UpdateEachStockBuildingEnum() returns void{ 
    local integer iteration213
    local integer pickedItemId203
    iteration213 = 0
    null
    loop {
        pickedItemId203 = ChooseRandomItemEx(bj_stockPickedItemType311, bj_stockPickedItemLevel304)
        exitwhen IsItemIdSellable(pickedItemId203)
        iteration213 = (iteration213 + 1)
        if (iteration213 > bj_STOCK_MAX_ITERATIONS652){
            return %nothing%
        } else {
        }
    }
    AddItemToStock(GetEnumUnit(), pickedItemId203, 1, 1)
}


function ForGroup(group whichGroup927, code callback178) returns void{ 
}


function DestroyGroup(group whichGroup234) returns void{ 
}


function ChooseRandomItemEx(itemtype whichType302, integer level310) returns integer{ 
}


function IsItemIdSellable(integer itemId185) returns boolean{ 
}


function GetEnumUnit() returns unit{ 
}


function AddItemToStock(unit whichUnit145, integer itemId206, integer currentStock133, integer stockMax437) returns void{ 
}


function GetItemType(item whichItem147) returns itemtype{ 
}


function GetItemLevel(item whichItem182) returns integer{ 
}


function GetPlayerTechResearched(player whichPlayer527, integer techid175, boolean specificonly121) returns boolean{ 
}


function SetPlayerTechMaxAllowed(player whichPlayer141, integer techid149, integer maximum206) returns void{ 
}


function GetCameraBoundMinX() returns real{ 
}


function GetCameraMargin(integer whichMargin275) returns real{ 
}


function GetCameraBoundMinY() returns real{ 
}


function GetCameraBoundMaxX() returns real{ 
}


function GetCameraBoundMaxY() returns real{ 
}


function Rect(real minx265, real miny274, real maxx556, real maxy158) returns rect{ 
}


function GetCurrentCameraBoundsMapRectBJ() returns rect{ 
    return Rect(GetCameraBoundMinX(), GetCameraBoundMinY(), GetCameraBoundMaxX(), GetCameraBoundMaxY())
}


function TriggerRegisterTimerExpireEvent(trigger whichTrigger189, timer t911) returns event{ 
}


function QueuedTriggerDoneBJ() returns void{ 
    local integer index284
    null
    if (bj_queuedExecTotal254 <= 0){
        return %nothing%
    } else {
    }
    QueuedTriggerRemoveByIndex(0)
    PauseTimer(bj_queuedExecTimeoutTimer257)
    QueuedTriggerAttemptExec()
}


function IssueHauntOrderAtLocBJFilter() returns boolean{ 
    return (GetUnitTypeId(GetFilterUnit()) == 1852272492)
}


function Filter(code func186) returns filterfunc{ 
}


function EnumDestructablesInCircleBJFilter() returns boolean{ 
    local location destLoc235
    local boolean result221
    destLoc235 = GetDestructableLoc(GetFilterDestructable())
    null
    result221 = (DistanceBetweenPoints(destLoc235, bj_enumDestructableCenter320) <= bj_enumDestructableRadius252)
    RemoveLocation(destLoc235)
    return result221
}


function GetUnitsInRectOfPlayerFilter() returns boolean{ 
    return (GetOwningPlayer(GetFilterUnit()) == bj_groupEnumOwningPlayer771)
}


function GetUnitsOfTypeIdAllFilter() returns boolean{ 
    return (GetUnitTypeId(GetFilterUnit()) == bj_groupEnumTypeId293)
}


function GetUnitsOfPlayerAndTypeIdFilter() returns boolean{ 
    return (GetUnitTypeId(GetFilterUnit()) == bj_groupEnumTypeId293)
}


function MeleeTrainedUnitIsHeroBJFilter() returns boolean{ 
    return IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO219)
}


function LivingPlayerUnitsOfTypeIdFilter() returns boolean{ 
    local unit filterUnit295
    filterUnit295 = GetFilterUnit()
    return (IsUnitAliveBJ(filterUnit295) and (GetUnitTypeId(filterUnit295) == bj_livingPlayerUnitsTypeId120))
}


function CreateForce() returns force{ 
}


function ForceAddPlayer(force whichForce517, player whichPlayer832) returns void{ 
}


function ForceEnumPlayers(force whichForce136, boolexpr filter224) returns void{ 
}


function GetGameSpeed() returns gamespeed{ 
}


function IsFogEnabled() returns boolean{ 
}


function IsFogMaskEnabled() returns boolean{ 
}


function GetPlayerController(player whichPlayer241) returns mapcontrol{ 
}


function GetPlayerSlotState(player whichPlayer624) returns playerslotstate{ 
}


function CreateSoundFromLabel(string soundLabel117, boolean looping221, boolean is3D158, boolean stopwhenoutofrange746, integer fadeInRate879, integer fadeOutRate112) returns sound{ 
}


function DelayedSuspendDecayCreate() returns void{ 
    bj_delayedSuspendDecayTrig306 = CreateTrigger()
    TriggerRegisterTimerExpireEvent(bj_delayedSuspendDecayTrig306, bj_delayedSuspendDecayTimer199)
    TriggerAddAction(bj_delayedSuspendDecayTrig306, function DelayedSuspendDecay)
}


function VersionGet() returns version{ 
}


function TriggerRegisterGameStateEvent(trigger whichTrigger294, gamestate whichState149, limitop opcode609, real limitval222) returns event{ 
}


function SetDNCSoundsDawn() returns void{ 
    if bj_useDawnDuskSounds259{
        StartSound(bj_dawnSound183)
    } else {
    }
}


function SetDNCSoundsDusk() returns void{ 
    if bj_useDawnDuskSounds259{
        StartSound(bj_duskSound141)
    } else {
    }
}


function SetDNCSoundsDay() returns void{ 
    local real ToD174
    ToD174 = GetTimeOfDay()
    if (((ToD174 >= bj_TOD_DAWN461) and (ToD174 < bj_TOD_DUSK626)) and (not bj_dncIsDaytime305)){
        bj_dncIsDaytime305 = true
        StopSound(bj_nightAmbientSound584, false, true)
        StartSound(bj_dayAmbientSound283)
    } else {
    }
}


function SetDNCSoundsNight() returns void{ 
    local real ToD247
    ToD247 = GetTimeOfDay()
    if (((ToD247 < bj_TOD_DAWN461) or (ToD247 >= bj_TOD_DUSK626)) and bj_dncIsDaytime305){
        bj_dncIsDaytime305 = false
        StopSound(bj_dayAmbientSound283, false, true)
        StartSound(bj_nightAmbientSound584)
    } else {
    }
}


function GetTimeOfDay() returns real{ 
    return GetFloatGameState(GAME_STATE_TIME_OF_DAY129)
}


function StopSound(sound soundHandle214, boolean killWhenDone460, boolean fadeOut332) returns void{ 
}


function StartSound(sound soundHandle245) returns void{ 
}


function InitGenericPlayerSlots() returns void{ 
    local gametype gType931
    gType931 = GetGameTypeSelected()
    if (gType931 == GAME_TYPE_MELEE124){
        MeleeInitPlayerSlots()
    } else {
        if (gType931 == GAME_TYPE_FFA977){
            FFAInitPlayerSlots()
        } else {
            if (gType931 == GAME_TYPE_USE_MAP_SETTINGS216){
            } else {
                if (gType931 == GAME_TYPE_ONE_ON_ONE612){
                    OneOnOneInitPlayerSlots()
                } else {
                    if (gType931 == GAME_TYPE_TWO_TEAM_PLAY136){
                        TeamInitPlayerSlots(2)
                    } else {
                        if (gType931 == GAME_TYPE_THREE_TEAM_PLAY426){
                            TeamInitPlayerSlots(3)
                        } else {
                            if (gType931 == GAME_TYPE_FOUR_TEAM_PLAY298){
                                TeamInitPlayerSlots(4)
                            } else {
                            }
                        }
                    }
                }
            }
        }
    }
}


function GetGameTypeSelected() returns gametype{ 
}


function MeleeInitPlayerSlots() returns void{ 
    TeamInitPlayerSlots(bj_MAX_PLAYERS803)
}


function FFAInitPlayerSlots() returns void{ 
    TeamInitPlayerSlots(bj_MAX_PLAYERS803)
}


function OneOnOneInitPlayerSlots() returns void{ 
    SetTeams(2)
    SetPlayers(2)
    TeamInitPlayerSlots(2)
}


function TeamInitPlayerSlots(integer teamCount324) returns void{ 
    local integer index335
    local player indexPlayer244
    local integer team694
    null
    null
    null
    SetTeams(teamCount324)
    CheckInitPlayerSlotAvailability()
    index335 = 0
    team694 = 0
    loop {
        if bj_slotControlUsed756[index335]{
            indexPlayer244 = Player(index335)
            SetPlayerTeam(indexPlayer244, team694)
            team694 = (team694 + 1)
            if (team694 >= teamCount324){
                team694 = 0
            } else {
            }
        } else {
        }
        index335 = (index335 + 1)
        exitwhen (index335 == bj_MAX_PLAYERS803)
    }
}


function SetTeams(integer teamcount285) returns void{ 
}


function SetPlayers(integer playercount150) returns void{ 
}


function CheckInitPlayerSlotAvailability() returns void{ 
    local integer index194
    null
    if (not bj_slotControlReady177){
        index194 = 0
        loop {
            bj_slotControlUsed756[index194] = false
            bj_slotControl288[index194] = MAP_CONTROL_USER306
            index194 = (index194 + 1)
            exitwhen (index194 == bj_MAX_PLAYERS803)
        }
        bj_slotControlReady177 = true
    } else {
    }
}


function SetPlayerTeam(player whichPlayer872, integer whichTeam331) returns void{ 
}


function SetPlayerSlotAvailable(player whichPlayer164, mapcontrol control236) returns void{ 
    local integer playerIndex116
    playerIndex116 = GetPlayerId(whichPlayer164)
    CheckInitPlayerSlotAvailability()
    bj_slotControlUsed756[playerIndex116] = true
    bj_slotControl288[playerIndex116] = control236
}


function GetPlayerId(player whichPlayer834) returns integer{ 
}


function MeleeInitVictoryDefeat() returns void{ 
    local trigger trig184
    local integer index248
    local player indexPlayer309
    null
    null
    null
    bj_finishSoonTimerDialog302 = CreateTimerDialog(null)
    trig184 = CreateTrigger()
    TriggerRegisterGameEvent(trig184, EVENT_GAME_TOURNAMENT_FINISH_SOON409)
    TriggerAddAction(trig184, function MeleeTriggerTournamentFinishSoon)
    trig184 = CreateTrigger()
    TriggerRegisterGameEvent(trig184, EVENT_GAME_TOURNAMENT_FINISH_NOW206)
    TriggerAddAction(trig184, function MeleeTriggerTournamentFinishNow)
    index248 = 0
    loop {
        indexPlayer309 = Player(index248)
        if (GetPlayerSlotState(indexPlayer309) == PLAYER_SLOT_STATE_PLAYING320){
            bj_meleeDefeated232[index248] = false
            bj_meleeVictoried748[index248] = false
            bj_playerIsCrippled997[index248] = false
            bj_playerIsExposed167[index248] = false
            bj_crippledTimer248[index248] = CreateTimer()
            bj_crippledTimerWindows130[index248] = CreateTimerDialog(bj_crippledTimer248[index248])
            TimerDialogSetTitle(bj_crippledTimerWindows130[index248], MeleeGetCrippledTimerMessage(indexPlayer309))
            trig184 = CreateTrigger()
            TriggerRegisterPlayerUnitEvent(trig184, indexPlayer309, EVENT_PLAYER_UNIT_CONSTRUCT_CANCEL272, null)
            TriggerAddAction(trig184, function MeleeTriggerActionConstructCancel)
            trig184 = CreateTrigger()
            TriggerRegisterPlayerUnitEvent(trig184, indexPlayer309, EVENT_PLAYER_UNIT_DEATH333, null)
            TriggerAddAction(trig184, function MeleeTriggerActionUnitDeath)
            trig184 = CreateTrigger()
            TriggerRegisterPlayerUnitEvent(trig184, indexPlayer309, EVENT_PLAYER_UNIT_CONSTRUCT_START257, null)
            TriggerAddAction(trig184, function MeleeTriggerActionUnitConstructionStart)
            trig184 = CreateTrigger()
            TriggerRegisterPlayerEvent(trig184, indexPlayer309, EVENT_PLAYER_DEFEAT143)
            TriggerAddAction(trig184, function MeleeTriggerActionPlayerDefeated)
            trig184 = CreateTrigger()
            TriggerRegisterPlayerEvent(trig184, indexPlayer309, EVENT_PLAYER_LEAVE205)
            TriggerAddAction(trig184, function MeleeTriggerActionPlayerLeft)
            trig184 = CreateTrigger()
            TriggerRegisterPlayerAllianceChange(trig184, indexPlayer309, ALLIANCE_PASSIVE306)
            TriggerRegisterPlayerStateEvent(trig184, indexPlayer309, PLAYER_STATE_ALLIED_VICTORY322, EQUAL472, 1.)
            TriggerAddAction(trig184, function MeleeTriggerActionAllianceChange)
        } else {
            bj_meleeDefeated232[index248] = true
            bj_meleeVictoried748[index248] = false
            if IsPlayerObserver(indexPlayer309){
                trig184 = CreateTrigger()
                TriggerRegisterPlayerEvent(trig184, indexPlayer309, EVENT_PLAYER_LEAVE205)
                TriggerAddAction(trig184, function MeleeTriggerActionPlayerLeft)
            } else {
            }
        }
        index248 = (index248 + 1)
        exitwhen (index248 == bj_MAX_PLAYERS803)
    }
    TimerStart(CreateTimer(), 2.0, false, function MeleeTriggerActionAllianceChange)
}


function CreateTimerDialog(timer t107) returns timerdialog{ 
}


function TriggerRegisterGameEvent(trigger whichTrigger697, gameevent whichGameEvent100) returns event{ 
}


function MeleeTriggerTournamentFinishSoon() returns void{ 
    local integer playerIndex297
    local player indexPlayer246
    local real timeRemaining173
    null
    null
    timeRemaining173 = GetTournamentFinishSoonTimeRemaining()
    if (not bj_finishSoonAllExposed195){
        bj_finishSoonAllExposed195 = true
        playerIndex297 = 0
        loop {
            indexPlayer246 = Player(playerIndex297)
            if bj_playerIsCrippled997[playerIndex297]{
                bj_playerIsCrippled997[playerIndex297] = false
                PauseTimer(bj_crippledTimer248[playerIndex297])
                if (GetLocalPlayer() == indexPlayer246){
                    TimerDialogDisplay(bj_crippledTimerWindows130[playerIndex297], false)
                } else {
                }
            } else {
            }
            playerIndex297 = (playerIndex297 + 1)
            exitwhen (playerIndex297 == bj_MAX_PLAYERS803)
        }
        MeleeExposeAllPlayers()
    } else {
    }
    TimerDialogDisplay(bj_finishSoonTimerDialog302, true)
    TimerDialogSetRealTimeRemaining(bj_finishSoonTimerDialog302, timeRemaining173)
}


function MeleeTriggerTournamentFinishNow() returns void{ 
    local integer rule136
    rule136 = GetTournamentFinishNowRule()
    if bj_meleeGameOver436{
        return %nothing%
    } else {
    }
    if (rule136 == 1){
        MeleeTournamentFinishNowRuleA(1)
    } else {
        MeleeTournamentFinishNowRuleA(3)
    }
    MeleeRemoveObservers()
}


function MeleeGetCrippledTimerMessage(player whichPlayer592) returns string{ 
    local race r458
    r458 = GetPlayerRace(whichPlayer592)
    if (r458 == RACE_HUMAN325){
        return GetLocalizedString("CRIPPLE_TIMER_HUMAN")
    } else {
        if (r458 == RACE_ORC150){
            return GetLocalizedString("CRIPPLE_TIMER_ORC")
        } else {
            if (r458 == RACE_NIGHTELF229){
                return GetLocalizedString("CRIPPLE_TIMER_NIGHTELF")
            } else {
                if (r458 == RACE_UNDEAD228){
                    return GetLocalizedString("CRIPPLE_TIMER_UNDEAD")
                } else {
                    return ""
                }
            }
        }
    }
}


function TimerDialogSetTitle(timerdialog whichDialog245, string title451) returns void{ 
}


function MeleeTriggerActionConstructCancel() returns void{ 
    MeleeCheckLostUnit(GetCancelledStructure())
}


function MeleeTriggerActionUnitDeath() returns void{ 
    if IsUnitType(GetDyingUnit(), UNIT_TYPE_STRUCTURE100){
        MeleeCheckLostUnit(GetDyingUnit())
    } else {
    }
}


function MeleeTriggerActionUnitConstructionStart() returns void{ 
    MeleeCheckAddedUnit(GetConstructingStructure())
}


function TriggerRegisterPlayerEvent(trigger whichTrigger922, player whichPlayer583, playerevent whichPlayerEvent694) returns event{ 
}


function MeleeTriggerActionPlayerDefeated() returns void{ 
    local player thePlayer222
    thePlayer222 = GetTriggerPlayer()
    CachePlayerHeroData(thePlayer222)
    if (MeleeGetAllyCount(thePlayer222) > 0){
        ShareEverythingWithTeam(thePlayer222)
        if (not bj_meleeDefeated232[GetPlayerId(thePlayer222)]){
            MeleeDoDefeat(thePlayer222)
        } else {
        }
    } else {
        MakeUnitsPassiveForTeam(thePlayer222)
        if (not bj_meleeDefeated232[GetPlayerId(thePlayer222)]){
            MeleeDoDefeat(thePlayer222)
        } else {
        }
    }
    MeleeCheckForLosersAndVictors()
}


function MeleeTriggerActionPlayerLeft() returns void{ 
    local player thePlayer108
    thePlayer108 = GetTriggerPlayer()
    if IsPlayerObserver(thePlayer108){
        RemovePlayerPreserveUnitsBJ(thePlayer108, PLAYER_GAME_RESULT_NEUTRAL166, false)
        return %nothing%
    } else {
    }
    CachePlayerHeroData(thePlayer108)
    if (MeleeGetAllyCount(thePlayer108) > 0){
        ShareEverythingWithTeam(thePlayer108)
        MeleeDoLeave(thePlayer108)
    } else {
        MakeUnitsPassiveForTeam(thePlayer108)
        MeleeDoLeave(thePlayer108)
    }
    MeleeCheckForLosersAndVictors()
}


function TriggerRegisterPlayerAllianceChange(trigger whichTrigger251, player whichPlayer159, alliancetype whichAlliance261) returns event{ 
}


function TriggerRegisterPlayerStateEvent(trigger whichTrigger999, player whichPlayer172, playerstate whichState174, limitop opcode170, real limitval439) returns event{ 
}


function MeleeTriggerActionAllianceChange() returns void{ 
    MeleeCheckForLosersAndVictors()
    MeleeCheckForCrippledPlayers()
}


function IsPlayerObserver(player whichPlayer113) returns boolean{ 
}


function GetTournamentFinishNowRule() returns integer{ 
}


function MeleeTournamentFinishNowRuleA(integer multiplier330) returns void{ 
    local array integer playerScore185
    local array integer teamScore256
    local array force teamForce674
    local integer teamCount305
    local integer index206
    local player indexPlayer200
    local integer index2136
    local player indexPlayer2184
    local integer bestTeam364
    local integer bestScore289
    local boolean draw606
    null
    null
    null
    null
    null
    null
    null
    null
    null
    null
    null
    index206 = 0
    loop {
        indexPlayer200 = Player(index206)
        if MeleeWasUserPlayer(indexPlayer200){
            playerScore185[index206] = GetTournamentScore(indexPlayer200)
            if (playerScore185[index206] <= 0){
                playerScore185[index206] = 1
            } else {
            }
        } else {
            playerScore185[index206] = 0
        }
        index206 = (index206 + 1)
        exitwhen (index206 == bj_MAX_PLAYERS803)
    }
    teamCount305 = 0
    index206 = 0
    loop {
        if (playerScore185[index206] != 0){
            indexPlayer200 = Player(index206)
            teamScore256[teamCount305] = 0
            teamForce674[teamCount305] = CreateForce()
            index2136 = index206
            loop {
                if (playerScore185[index2136] != 0){
                    indexPlayer2184 = Player(index2136)
                    if PlayersAreCoAllied(indexPlayer200, indexPlayer2184){
                        teamScore256[teamCount305] = (teamScore256[teamCount305] + playerScore185[index2136])
                        ForceAddPlayer(teamForce674[teamCount305], indexPlayer2184)
                        playerScore185[index2136] = 0
                    } else {
                    }
                } else {
                }
                index2136 = (index2136 + 1)
                exitwhen (index2136 == bj_MAX_PLAYERS803)
            }
            teamCount305 = (teamCount305 + 1)
        } else {
        }
        index206 = (index206 + 1)
        exitwhen (index206 == bj_MAX_PLAYERS803)
    }
    bj_meleeGameOver436 = true
    if (teamCount305 != 0){
        bestTeam364 = (- 1)
        bestScore289 = (- 1)
        index206 = 0
        loop {
            if (teamScore256[index206] > bestScore289){
                bestTeam364 = index206
                bestScore289 = teamScore256[index206]
            } else {
            }
            index206 = (index206 + 1)
            exitwhen (index206 == teamCount305)
        }
        draw606 = false
        index206 = 0
        loop {
            if (index206 != bestTeam364){
                if (bestScore289 < (multiplier330 * teamScore256[index206])){
                    draw606 = true
                } else {
                }
            } else {
            }
            index206 = (index206 + 1)
            exitwhen (index206 == teamCount305)
        }
        if draw606{
            index206 = 0
            loop {
                ForForce(teamForce674[index206], function MeleeDoDrawEnum)
                index206 = (index206 + 1)
                exitwhen (index206 == teamCount305)
            }
        } else {
            index206 = 0
            loop {
                if (index206 != bestTeam364){
                    ForForce(teamForce674[index206], function MeleeDoDefeatEnum)
                } else {
                }
                index206 = (index206 + 1)
                exitwhen (index206 == teamCount305)
            }
            ForForce(teamForce674[bestTeam364], function MeleeDoVictoryEnum)
        }
    } else {
    }
}


function MeleeRemoveObservers() returns void{ 
    local integer playerIndex474
    local player indexPlayer215
    null
    null
    playerIndex474 = 0
    loop {
        indexPlayer215 = Player(playerIndex474)
        if IsPlayerObserver(indexPlayer215){
            RemovePlayerPreserveUnitsBJ(indexPlayer215, PLAYER_GAME_RESULT_NEUTRAL166, false)
        } else {
        }
        playerIndex474 = (playerIndex474 + 1)
        exitwhen (playerIndex474 == bj_MAX_PLAYERS803)
    }
}


function MeleeWasUserPlayer(player whichPlayer279) returns boolean{ 
    local playerslotstate slotState838
    null
    if (GetPlayerController(whichPlayer279) != MAP_CONTROL_USER306){
        return false
    } else {
    }
    slotState838 = GetPlayerSlotState(whichPlayer279)
    return ((slotState838 == PLAYER_SLOT_STATE_PLAYING320) or (slotState838 == PLAYER_SLOT_STATE_LEFT146))
}


function GetTournamentScore(player whichPlayer230) returns integer{ 
}


function PlayersAreCoAllied(player playerA248, player playerB594) returns boolean{ 
    if (playerA248 == playerB594){
        return true
    } else {
    }
    if GetPlayerAlliance(playerA248, playerB594, ALLIANCE_PASSIVE306){
        if GetPlayerAlliance(playerB594, playerA248, ALLIANCE_PASSIVE306){
            return true
        } else {
        }
    } else {
    }
    return false
}


function MeleeDoDrawEnum() returns void{ 
    local player thePlayer159
    thePlayer159 = GetEnumPlayer()
    CachePlayerHeroData(thePlayer159)
    RemovePlayerPreserveUnitsBJ(thePlayer159, PLAYER_GAME_RESULT_TIE334, false)
}


function ForForce(force whichForce311, code callback100) returns void{ 
}


function MeleeDoDefeatEnum() returns void{ 
    local player thePlayer144
    thePlayer144 = GetEnumPlayer()
    CachePlayerHeroData(thePlayer144)
    MakeUnitsPassiveForTeam(thePlayer144)
    MeleeDoDefeat(thePlayer144)
}


function MeleeDoVictoryEnum() returns void{ 
    local player thePlayer270
    local integer playerIndex210
    thePlayer270 = GetEnumPlayer()
    playerIndex210 = GetPlayerId(thePlayer270)
    if (not bj_meleeVictoried748[playerIndex210]){
        bj_meleeVictoried748[playerIndex210] = true
        CachePlayerHeroData(thePlayer270)
        RemovePlayerPreserveUnitsBJ(thePlayer270, PLAYER_GAME_RESULT_VICTORY732, false)
    } else {
    }
}


function GetTournamentFinishSoonTimeRemaining() returns real{ 
}


function PauseTimer(timer whichTimer293) returns void{ 
}


function GetLocalPlayer() returns player{ 
}


function TimerDialogDisplay(timerdialog whichDialog236, boolean display233) returns void{ 
}


function MeleeExposeAllPlayers() returns void{ 
    local integer playerIndex171
    local player indexPlayer325
    local integer playerIndex2753
    local player indexPlayer2178
    local force toExposeTo107
    null
    null
    null
    null
    toExposeTo107 = CreateForce()
    playerIndex171 = 0
    loop {
        indexPlayer325 = Player(playerIndex171)
        ForceClear(toExposeTo107)
        CripplePlayer(indexPlayer325, toExposeTo107, false)
        playerIndex2753 = 0
        loop {
            indexPlayer2178 = Player(playerIndex2753)
            if (playerIndex171 != playerIndex2753){
                if (not PlayersAreCoAllied(indexPlayer325, indexPlayer2178)){
                    ForceAddPlayer(toExposeTo107, indexPlayer2178)
                } else {
                }
            } else {
            }
            playerIndex2753 = (playerIndex2753 + 1)
            exitwhen (playerIndex2753 == bj_MAX_PLAYERS803)
        }
        CripplePlayer(indexPlayer325, toExposeTo107, true)
        playerIndex171 = (playerIndex171 + 1)
        exitwhen (playerIndex171 == bj_MAX_PLAYERS803)
    }
    DestroyForce(toExposeTo107)
}


function TimerDialogSetRealTimeRemaining(timerdialog whichDialog404, real timeRemaining131) returns void{ 
}


function MeleeCheckForLosersAndVictors() returns void{ 
    local integer playerIndex746
    local player indexPlayer200
    local force defeatedPlayers254
    local force victoriousPlayers111
    local boolean gameOver297
    null
    null
    defeatedPlayers254 = CreateForce()
    null
    gameOver297 = false
    if bj_meleeGameOver436{
        return %nothing%
    } else {
    }
    if (GetIntegerGameState(GAME_STATE_DISCONNECTED140) != 0){
        bj_meleeGameOver436 = true
        return %nothing%
    } else {
    }
    playerIndex746 = 0
    loop {
        indexPlayer200 = Player(playerIndex746)
        if ((not bj_meleeDefeated232[playerIndex746]) and (not bj_meleeVictoried748[playerIndex746])){
            if (MeleeGetAllyStructureCount(indexPlayer200) <= 0){
                ForceAddPlayer(defeatedPlayers254, Player(playerIndex746))
                bj_meleeDefeated232[playerIndex746] = true
            } else {
            }
        } else {
        }
        playerIndex746 = (playerIndex746 + 1)
        exitwhen (playerIndex746 == bj_MAX_PLAYERS803)
    }
    victoriousPlayers111 = MeleeCheckForVictors()
    ForForce(defeatedPlayers254, function MeleeDoDefeatEnum)
    ForForce(victoriousPlayers111, function MeleeDoVictoryEnum)
    if bj_meleeGameOver436{
        MeleeRemoveObservers()
    } else {
    }
}


function MeleeCheckForCrippledPlayers() returns void{ 
    local integer playerIndex268
    local player indexPlayer135
    local force crippledPlayers160
    local boolean isNowCrippled299
    local race indexRace219
    null
    null
    crippledPlayers160 = CreateForce()
    null
    null
    if bj_finishSoonAllExposed195{
        return %nothing%
    } else {
    }
    playerIndex268 = 0
    loop {
        indexPlayer135 = Player(playerIndex268)
        isNowCrippled299 = MeleePlayerIsCrippled(indexPlayer135)
        if ((not bj_playerIsCrippled997[playerIndex268]) and isNowCrippled299){
            bj_playerIsCrippled997[playerIndex268] = true
            TimerStart(bj_crippledTimer248[playerIndex268], bj_MELEE_CRIPPLE_TIMEOUT241, false, function MeleeCrippledPlayerTimeout)
            if (GetLocalPlayer() == indexPlayer135){
                TimerDialogDisplay(bj_crippledTimerWindows130[playerIndex268], true)
                DisplayTimedTextToPlayer(indexPlayer135, 0., 0., bj_MELEE_CRIPPLE_MSG_DURATION952, MeleeGetCrippledWarningMessage(indexPlayer135))
            } else {
            }
        } else {
            if (bj_playerIsCrippled997[playerIndex268] and (not isNowCrippled299)){
                bj_playerIsCrippled997[playerIndex268] = false
                PauseTimer(bj_crippledTimer248[playerIndex268])
                if (GetLocalPlayer() == indexPlayer135){
                    TimerDialogDisplay(bj_crippledTimerWindows130[playerIndex268], false)
                    if (MeleeGetAllyStructureCount(indexPlayer135) > 0){
                        if bj_playerIsExposed167[playerIndex268]{
                            DisplayTimedTextToPlayer(indexPlayer135, 0., 0., bj_MELEE_CRIPPLE_MSG_DURATION952, GetLocalizedString("CRIPPLE_UNREVEALED"))
                        } else {
                            DisplayTimedTextToPlayer(indexPlayer135, 0., 0., bj_MELEE_CRIPPLE_MSG_DURATION952, GetLocalizedString("CRIPPLE_UNCRIPPLED"))
                        }
                    } else {
                    }
                } else {
                }
                MeleeExposePlayer(indexPlayer135, false)
            } else {
            }
        }
        playerIndex268 = (playerIndex268 + 1)
        exitwhen (playerIndex268 == bj_MAX_PLAYERS803)
    }
}


function GetTriggerPlayer() returns player{ 
}


function RemovePlayerPreserveUnitsBJ(player whichPlayer258, playergameresult gameResult207, boolean leftGame254) returns void{ 
    if AllowVictoryDefeat(gameResult207){
        RemovePlayer(whichPlayer258, gameResult207)
        if (gameResult207 == PLAYER_GAME_RESULT_VICTORY732){
            MeleeVictoryDialogBJ(whichPlayer258, leftGame254)
            return %nothing%
        } else {
            if (gameResult207 == PLAYER_GAME_RESULT_DEFEAT586){
                MeleeDefeatDialogBJ(whichPlayer258, leftGame254)
            } else {
                GameOverDialogBJ(whichPlayer258, leftGame254)
            }
        }
    } else {
    }
}


function CachePlayerHeroData(player whichPlayer310) returns void{ 
}


function MeleeGetAllyCount(player whichPlayer283) returns integer{ 
    local integer playerIndex153
    local integer playerCount276
    local player indexPlayer420
    null
    null
    null
    playerCount276 = 0
    playerIndex153 = 0
    loop {
        indexPlayer420 = Player(playerIndex153)
        if ((PlayersAreCoAllied(whichPlayer283, indexPlayer420) and (not bj_meleeDefeated232[playerIndex153])) and (whichPlayer283 != indexPlayer420)){
            playerCount276 = (playerCount276 + 1)
        } else {
        }
        playerIndex153 = (playerIndex153 + 1)
        exitwhen (playerIndex153 == bj_MAX_PLAYERS803)
    }
    return playerCount276
}


function ShareEverythingWithTeam(player whichPlayer262) returns void{ 
    local integer playerIndex570
    local player indexPlayer627
    null
    null
    playerIndex570 = 0
    loop {
        indexPlayer627 = Player(playerIndex570)
        if (PlayersAreCoAllied(whichPlayer262, indexPlayer627) and (whichPlayer262 != indexPlayer627)){
            SetPlayerAlliance(whichPlayer262, indexPlayer627, ALLIANCE_SHARED_VISION266, true)
            SetPlayerAlliance(whichPlayer262, indexPlayer627, ALLIANCE_SHARED_CONTROL252, true)
            SetPlayerAlliance(indexPlayer627, whichPlayer262, ALLIANCE_SHARED_CONTROL252, true)
            SetPlayerAlliance(whichPlayer262, indexPlayer627, ALLIANCE_SHARED_ADVANCED_CONTROL902, true)
        } else {
        }
        playerIndex570 = (playerIndex570 + 1)
        exitwhen (playerIndex570 == bj_MAX_PLAYERS803)
    }
}


function MeleeDoLeave(player whichPlayer254) returns void{ 
    if (GetIntegerGameState(GAME_STATE_DISCONNECTED140) != 0){
        GameOverDialogBJ(whichPlayer254, true)
    } else {
        bj_meleeDefeated232[GetPlayerId(whichPlayer254)] = true
        RemovePlayerPreserveUnitsBJ(whichPlayer254, PLAYER_GAME_RESULT_DEFEAT586, true)
    }
}


function MakeUnitsPassiveForTeam(player whichPlayer273) returns void{ 
    local integer playerIndex263
    local player indexPlayer264
    null
    null
    playerIndex263 = 0
    loop {
        indexPlayer264 = Player(playerIndex263)
        if PlayersAreCoAllied(whichPlayer273, indexPlayer264){
            MakeUnitsPassiveForPlayer(indexPlayer264)
        } else {
        }
        playerIndex263 = (playerIndex263 + 1)
        exitwhen (playerIndex263 == bj_MAX_PLAYERS803)
    }
}


function MeleeDoDefeat(player whichPlayer236) returns void{ 
    bj_meleeDefeated232[GetPlayerId(whichPlayer236)] = true
    RemovePlayerPreserveUnitsBJ(whichPlayer236, PLAYER_GAME_RESULT_DEFEAT586, false)
}


function GetConstructingStructure() returns unit{ 
}


function MeleeCheckAddedUnit(unit addedUnit233) returns void{ 
    local player addedUnitOwner116
    addedUnitOwner116 = GetOwningPlayer(addedUnit233)
    if bj_playerIsCrippled997[GetPlayerId(addedUnitOwner116)]{
        MeleeCheckForCrippledPlayers()
    } else {
    }
}


function GetDyingUnit() returns unit{ 
}


function IsUnitType(unit whichUnit171, unittype whichUnitType328) returns boolean{ 
}


function MeleeCheckLostUnit(unit lostUnit273) returns void{ 
    local player lostUnitOwner237
    lostUnitOwner237 = GetOwningPlayer(lostUnit273)
    if (GetPlayerStructureCount(lostUnitOwner237, true) <= 0){
        MeleeCheckForLosersAndVictors()
    } else {
    }
    MeleeCheckForCrippledPlayers()
}


function GetCancelledStructure() returns unit{ 
}


function GetOwningPlayer(unit whichUnit235) returns player{ 
}


function GetPlayerStructureCount(player whichPlayer299, boolean includeIncomplete112) returns integer{ 
}


function MeleePlayerIsCrippled(player whichPlayer559) returns boolean{ 
    local integer allyStructures103
    local integer allyKeyStructures230
    allyStructures103 = MeleeGetAllyStructureCount(whichPlayer559)
    allyKeyStructures230 = MeleeGetAllyKeyStructureCount(whichPlayer559)
    return ((allyStructures103 > 0) and (allyKeyStructures230 <= 0))
}


function MeleeCrippledPlayerTimeout() returns void{ 
    local timer expiredTimer314
    local integer playerIndex236
    local player exposedPlayer276
    expiredTimer314 = GetExpiredTimer()
    null
    null
    playerIndex236 = 0
    loop {
        if (bj_crippledTimer248[playerIndex236] == expiredTimer314){
            exitwhen true
        } else {
        }
        playerIndex236 = (playerIndex236 + 1)
        exitwhen (playerIndex236 == bj_MAX_PLAYERS803)
    }
    if (playerIndex236 == bj_MAX_PLAYERS803){
        return %nothing%
    } else {
    }
    exposedPlayer276 = Player(playerIndex236)
    if (GetLocalPlayer() == exposedPlayer276){
        TimerDialogDisplay(bj_crippledTimerWindows130[playerIndex236], false)
    } else {
    }
    DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_MELEE_CRIPPLE_MSG_DURATION952, MeleeGetCrippledRevealedMessage(exposedPlayer276))
    MeleeExposePlayer(exposedPlayer276, true)
}


function MeleeGetCrippledWarningMessage(player whichPlayer293) returns string{ 
    local race r704
    r704 = GetPlayerRace(whichPlayer293)
    if (r704 == RACE_HUMAN325){
        return GetLocalizedString("CRIPPLE_WARNING_HUMAN")
    } else {
        if (r704 == RACE_ORC150){
            return GetLocalizedString("CRIPPLE_WARNING_ORC")
        } else {
            if (r704 == RACE_NIGHTELF229){
                return GetLocalizedString("CRIPPLE_WARNING_NIGHTELF")
            } else {
                if (r704 == RACE_UNDEAD228){
                    return GetLocalizedString("CRIPPLE_WARNING_UNDEAD")
                } else {
                    return ""
                }
            }
        }
    }
}


function DisplayTimedTextToPlayer(player toPlayer169, real x214, real y191, real duration236, string message289) returns void{ 
}


function MeleeGetAllyStructureCount(player whichPlayer172) returns integer{ 
    local integer playerIndex137
    local integer buildingCount210
    local player indexPlayer171
    null
    null
    null
    buildingCount210 = 0
    playerIndex137 = 0
    loop {
        indexPlayer171 = Player(playerIndex137)
        if PlayersAreCoAllied(whichPlayer172, indexPlayer171){
            buildingCount210 = (buildingCount210 + GetPlayerStructureCount(indexPlayer171, true))
        } else {
        }
        playerIndex137 = (playerIndex137 + 1)
        exitwhen (playerIndex137 == bj_MAX_PLAYERS803)
    }
    return buildingCount210
}


function GetLocalizedString(string source293) returns string{ 
}


function MeleeExposePlayer(player whichPlayer172, boolean expose286) returns void{ 
    local integer playerIndex220
    local player indexPlayer151
    local force toExposeTo222
    null
    null
    toExposeTo222 = CreateForce()
    CripplePlayer(whichPlayer172, toExposeTo222, false)
    bj_playerIsExposed167[GetPlayerId(whichPlayer172)] = expose286
    playerIndex220 = 0
    loop {
        indexPlayer151 = Player(playerIndex220)
        if (not PlayersAreCoAllied(whichPlayer172, indexPlayer151)){
            ForceAddPlayer(toExposeTo222, indexPlayer151)
        } else {
        }
        playerIndex220 = (playerIndex220 + 1)
        exitwhen (playerIndex220 == bj_MAX_PLAYERS803)
    }
    CripplePlayer(whichPlayer172, toExposeTo222, expose286)
    DestroyForce(toExposeTo222)
}


function MeleeGetAllyKeyStructureCount(player whichPlayer991) returns integer{ 
    local integer playerIndex857
    local player indexPlayer832
    local integer keyStructs871
    null
    null
    null
    keyStructs871 = 0
    playerIndex857 = 0
    loop {
        indexPlayer832 = Player(playerIndex857)
        if PlayersAreCoAllied(whichPlayer991, indexPlayer832){
            keyStructs871 = (keyStructs871 + GetPlayerTypedUnitCount(indexPlayer832, "townhall", true, true))
            keyStructs871 = (keyStructs871 + GetPlayerTypedUnitCount(indexPlayer832, "greathall", true, true))
            keyStructs871 = (keyStructs871 + GetPlayerTypedUnitCount(indexPlayer832, "treeoflife", true, true))
            keyStructs871 = (keyStructs871 + GetPlayerTypedUnitCount(indexPlayer832, "necropolis", true, true))
        } else {
        }
        playerIndex857 = (playerIndex857 + 1)
        exitwhen (playerIndex857 == bj_MAX_PLAYERS803)
    }
    return keyStructs871
}


function GetExpiredTimer() returns timer{ 
}


function MeleeGetCrippledRevealedMessage(player whichPlayer164) returns string{ 
    return ((GetLocalizedString("CRIPPLE_REVEALING_PREFIX") + GetPlayerName(whichPlayer164)) + GetLocalizedString("CRIPPLE_REVEALING_POSTFIX"))
}


function ForceClear(force whichForce833) returns void{ 
}


function CripplePlayer(player whichPlayer133, force toWhichPlayers240, boolean flag235) returns void{ 
}


function DestroyForce(force whichForce252) returns void{ 
}


function GetPlayerName(player whichPlayer229) returns string{ 
}


function GetPlayerRace(player whichPlayer102) returns race{ 
}


function GetIntegerGameState(igamestate whichIntegerGameState191) returns integer{ 
}


function MeleeCheckForVictors() returns force{ 
    local integer playerIndex864
    local integer opponentIndex109
    local force opponentlessPlayers310
    local boolean gameOver242
    null
    null
    opponentlessPlayers310 = CreateForce()
    gameOver242 = false
    playerIndex864 = 0
    loop {
        if (not bj_meleeDefeated232[playerIndex864]){
            opponentIndex109 = 0
            loop {
                if MeleePlayerIsOpponent(playerIndex864, opponentIndex109){
                    return CreateForce()
                } else {
                }
                opponentIndex109 = (opponentIndex109 + 1)
                exitwhen (opponentIndex109 == bj_MAX_PLAYERS803)
            }
            ForceAddPlayer(opponentlessPlayers310, Player(playerIndex864))
            gameOver242 = true
        } else {
        }
        playerIndex864 = (playerIndex864 + 1)
        exitwhen (playerIndex864 == bj_MAX_PLAYERS803)
    }
    bj_meleeGameOver436 = gameOver242
    return opponentlessPlayers310
}


function MeleePlayerIsOpponent(integer playerIndex385, integer opponentIndex259) returns boolean{ 
    local player thePlayer258
    local player theOpponent818
    thePlayer258 = Player(playerIndex385)
    theOpponent818 = Player(opponentIndex259)
    if (playerIndex385 == opponentIndex259){
        return false
    } else {
    }
    if (GetPlayerSlotState(theOpponent818) != PLAYER_SLOT_STATE_PLAYING320){
        return false
    } else {
    }
    if bj_meleeDefeated232[opponentIndex259]{
        return false
    } else {
    }
    if GetPlayerAlliance(thePlayer258, theOpponent818, ALLIANCE_PASSIVE306){
        if GetPlayerAlliance(theOpponent818, thePlayer258, ALLIANCE_PASSIVE306){
            if (GetPlayerState(thePlayer258, PLAYER_STATE_ALLIED_VICTORY322) == 1){
                if (GetPlayerState(theOpponent818, PLAYER_STATE_ALLIED_VICTORY322) == 1){
                    return false
                } else {
                }
            } else {
            }
        } else {
        }
    } else {
    }
    return true
}


function GameOverDialogBJ(player whichPlayer308, boolean leftGame152) returns void{ 
    local trigger t219
    local dialog d213
    local string s229
    t219 = CreateTrigger()
    d213 = DialogCreate()
    null
    DisplayTimedTextFromPlayer(whichPlayer308, 0., 0., 60., GetLocalizedString("PLAYER_LEFT_GAME"))
    if (GetIntegerGameState(GAME_STATE_DISCONNECTED140) != 0){
        s229 = GetLocalizedString("GAMEOVER_DISCONNECTED")
    } else {
        s229 = GetLocalizedString("GAMEOVER_GAME_OVER")
    }
    DialogSetMessage(d213, s229)
    t219 = CreateTrigger()
    TriggerRegisterDialogButtonEvent(t219, DialogAddQuitButton(d213, true, GetLocalizedString("GAMEOVER_OK"), GetLocalizedHotkey("GAMEOVER_OK")))
    DialogDisplay(whichPlayer308, d213, true)
    StartSoundForPlayerBJ(whichPlayer308, bj_defeatDialogSound203)
}


function GetEnumPlayer() returns player{ 
}


function GetPlayerTypedUnitCount(player whichPlayer316, string unitName200, boolean includeIncomplete443, boolean includeUpgrades183) returns integer{ 
}


function GetPlayerAlliance(player sourcePlayer261, player otherPlayer190, alliancetype whichAllianceSetting232) returns boolean{ 
}


function GetPlayerState(player whichPlayer325, playerstate whichPlayerState250) returns integer{ 
}


function LockGuardPosition(unit targ147) returns void{ 
    SetUnitCreepGuard(targ147, true)
}


function SetUnitCreepGuard(unit whichUnit210, boolean creepGuard328) returns void{ 
}


function MeleeStartingAI() returns void{ 
    local integer index248
    local player indexPlayer277
    local race indexRace115
    null
    null
    null
    index248 = 0
    loop {
        indexPlayer277 = Player(index248)
        if (GetPlayerSlotState(indexPlayer277) == PLAYER_SLOT_STATE_PLAYING320){
            indexRace115 = GetPlayerRace(indexPlayer277)
            if (GetPlayerController(indexPlayer277) == MAP_CONTROL_COMPUTER169){
                if (indexRace115 == RACE_HUMAN325){
                    PickMeleeAI(indexPlayer277, "human.ai", null, null)
                } else {
                    if (indexRace115 == RACE_ORC150){
                        PickMeleeAI(indexPlayer277, "orc.ai", null, null)
                    } else {
                        if (indexRace115 == RACE_UNDEAD228){
                            PickMeleeAI(indexPlayer277, "undead.ai", null, null)
                            RecycleGuardPosition(bj_ghoul301[index248])
                        } else {
                            if (indexRace115 == RACE_NIGHTELF229){
                                PickMeleeAI(indexPlayer277, "elf.ai", null, null)
                            } else {
                            }
                        }
                    }
                }
                ShareEverythingWithTeamAI(indexPlayer277)
            } else {
            }
        } else {
        }
        index248 = (index248 + 1)
        exitwhen (index248 == bj_MAX_PLAYERS803)
    }
}


function PickMeleeAI(player num223, string s1103, string s2157, string s3273) returns void{ 
    local integer pick228
    null
    if (GetAIDifficulty(num223) == AI_DIFFICULTY_NEWBIE314){
        StartMeleeAI(num223, s1103)
        return %nothing%
    } else {
    }
    if (s2157 == null){
        pick228 = 1
    } else {
        if (s3273 == null){
            pick228 = GetRandomInt(1, 2)
        } else {
            pick228 = GetRandomInt(1, 3)
        }
    }
    if (pick228 == 1){
        StartMeleeAI(num223, s1103)
    } else {
        if (pick228 == 2){
            StartMeleeAI(num223, s2157)
        } else {
            StartMeleeAI(num223, s3273)
        }
    }
}


function RecycleGuardPosition(unit hUnit673) returns void{ 
}


function ShareEverythingWithTeamAI(player whichPlayer111) returns void{ 
    local integer playerIndex167
    local player indexPlayer215
    null
    null
    playerIndex167 = 0
    loop {
        indexPlayer215 = Player(playerIndex167)
        if (PlayersAreCoAllied(whichPlayer111, indexPlayer215) and (whichPlayer111 != indexPlayer215)){
            if (GetPlayerController(indexPlayer215) == MAP_CONTROL_COMPUTER169){
                SetPlayerAlliance(whichPlayer111, indexPlayer215, ALLIANCE_SHARED_VISION266, true)
                SetPlayerAlliance(whichPlayer111, indexPlayer215, ALLIANCE_SHARED_CONTROL252, true)
                SetPlayerAlliance(whichPlayer111, indexPlayer215, ALLIANCE_SHARED_ADVANCED_CONTROL902, true)
            } else {
            }
        } else {
        }
        playerIndex167 = (playerIndex167 + 1)
        exitwhen (playerIndex167 == bj_MAX_PLAYERS803)
    }
}


function GetAIDifficulty(player num143) returns aidifficulty{ 
}


function StartMeleeAI(player num170, string script334) returns void{ 
}


function MeleeStartingUnitsForPlayer(race whichRace432, player whichPlayer139, location loc243, boolean doHeroes201) returns void{ 
    if (whichRace432 == RACE_HUMAN325){
        MeleeStartingUnitsHuman(whichPlayer139, loc243, doHeroes201, false, false)
    } else {
        if (whichRace432 == RACE_ORC150){
            MeleeStartingUnitsOrc(whichPlayer139, loc243, doHeroes201, false, false)
        } else {
            if (whichRace432 == RACE_UNDEAD228){
                MeleeStartingUnitsUndead(whichPlayer139, loc243, doHeroes201, false, false)
            } else {
                if (whichRace432 == RACE_NIGHTELF229){
                    MeleeStartingUnitsNightElf(whichPlayer139, loc243, doHeroes201, false, false)
                } else {
                }
            }
        }
    }
}


function MeleeStartingUnitsHuman(player whichPlayer308, location startLoc140, boolean doHeroes144, boolean doCamera160, boolean doPreload160) returns void{ 
    local boolean useRandomHero250
    local real unitSpacing199
    local unit nearestMine293
    local location nearMineLoc948
    local location heroLoc273
    local real peonX275
    local real peonY196
    local unit townHall283
    useRandomHero250 = IsMapFlagSet(MAP_RANDOM_HERO175)
    unitSpacing199 = 64.00
    null
    null
    null
    null
    null
    townHall283 = null
    if doPreload160{
        Preloader("scripts\HumanMelee.pld")
    } else {
    }
    nearestMine293 = MeleeFindNearestMine(startLoc140, bj_MELEE_MINE_SEARCH_RADIUS252)
    if (nearestMine293 != null){
        townHall283 = CreateUnitAtLoc(whichPlayer308, 1752461175, startLoc140, bj_UNIT_FACING242)
        nearMineLoc948 = MeleeGetProjectedLoc(GetUnitLoc(nearestMine293), startLoc140, 320., 0.)
        peonX275 = GetLocationX(nearMineLoc948)
        peonY196 = GetLocationY(nearMineLoc948)
        CreateUnit(whichPlayer308, 1752196449, (peonX275 + (0.00 * unitSpacing199)), (peonY196 + (1.00 * unitSpacing199)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer308, 1752196449, (peonX275 + (1.00 * unitSpacing199)), (peonY196 + (0.15 * unitSpacing199)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer308, 1752196449, (peonX275 - (1.00 * unitSpacing199)), (peonY196 + (0.15 * unitSpacing199)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer308, 1752196449, (peonX275 + (0.60 * unitSpacing199)), (peonY196 - (1.00 * unitSpacing199)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer308, 1752196449, (peonX275 - (0.60 * unitSpacing199)), (peonY196 - (1.00 * unitSpacing199)), bj_UNIT_FACING242)
        heroLoc273 = MeleeGetProjectedLoc(GetUnitLoc(nearestMine293), startLoc140, 384., 45.)
    } else {
        townHall283 = CreateUnitAtLoc(whichPlayer308, 1752461175, startLoc140, bj_UNIT_FACING242)
        peonX275 = GetLocationX(startLoc140)
        peonY196 = (GetLocationY(startLoc140) - 224.00)
        CreateUnit(whichPlayer308, 1752196449, (peonX275 + (2.00 * unitSpacing199)), (peonY196 + (0.00 * unitSpacing199)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer308, 1752196449, (peonX275 + (1.00 * unitSpacing199)), (peonY196 + (0.00 * unitSpacing199)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer308, 1752196449, (peonX275 + (0.00 * unitSpacing199)), (peonY196 + (0.00 * unitSpacing199)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer308, 1752196449, (peonX275 - (1.00 * unitSpacing199)), (peonY196 + (0.00 * unitSpacing199)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer308, 1752196449, (peonX275 - (2.00 * unitSpacing199)), (peonY196 + (0.00 * unitSpacing199)), bj_UNIT_FACING242)
        heroLoc273 = Location(peonX275, (peonY196 - (2.00 * unitSpacing199)))
    }
    if (townHall283 != null){
        UnitAddAbilityBJ(1097689443, townHall283)
        UnitMakeAbilityPermanentBJ(true, 1097689443, townHall283)
    } else {
    }
    if doHeroes144{
        if useRandomHero250{
            MeleeRandomHeroLoc(whichPlayer308, 1214344551, 1215130471, 1215324524, 1214409837, heroLoc273)
        } else {
            SetPlayerState(whichPlayer308, PLAYER_STATE_RESOURCE_HERO_TOKENS673, bj_MELEE_STARTING_HERO_TOKENS124)
        }
    } else {
    }
    if doCamera160{
        SetCameraPositionForPlayer(whichPlayer308, peonX275, peonY196)
        SetCameraQuickPositionForPlayer(whichPlayer308, peonX275, peonY196)
    } else {
    }
}


function MeleeStartingUnitsOrc(player whichPlayer103, location startLoc227, boolean doHeroes110, boolean doCamera837, boolean doPreload229) returns void{ 
    local boolean useRandomHero325
    local real unitSpacing177
    local unit nearestMine140
    local location nearMineLoc295
    local location heroLoc202
    local real peonX186
    local real peonY322
    useRandomHero325 = IsMapFlagSet(MAP_RANDOM_HERO175)
    unitSpacing177 = 64.00
    null
    null
    null
    null
    null
    if doPreload229{
        Preloader("scripts\OrcMelee.pld")
    } else {
    }
    nearestMine140 = MeleeFindNearestMine(startLoc227, bj_MELEE_MINE_SEARCH_RADIUS252)
    if (nearestMine140 != null){
        CreateUnitAtLoc(whichPlayer103, 1869050469, startLoc227, bj_UNIT_FACING242)
        nearMineLoc295 = MeleeGetProjectedLoc(GetUnitLoc(nearestMine140), startLoc227, 320., 0.)
        peonX186 = GetLocationX(nearMineLoc295)
        peonY322 = GetLocationY(nearMineLoc295)
        CreateUnit(whichPlayer103, 1869636975, (peonX186 + (0.00 * unitSpacing177)), (peonY322 + (1.00 * unitSpacing177)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer103, 1869636975, (peonX186 + (1.00 * unitSpacing177)), (peonY322 + (0.15 * unitSpacing177)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer103, 1869636975, (peonX186 - (1.00 * unitSpacing177)), (peonY322 + (0.15 * unitSpacing177)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer103, 1869636975, (peonX186 + (0.60 * unitSpacing177)), (peonY322 - (1.00 * unitSpacing177)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer103, 1869636975, (peonX186 - (0.60 * unitSpacing177)), (peonY322 - (1.00 * unitSpacing177)), bj_UNIT_FACING242)
        heroLoc202 = MeleeGetProjectedLoc(GetUnitLoc(nearestMine140), startLoc227, 384., 45.)
    } else {
        CreateUnitAtLoc(whichPlayer103, 1869050469, startLoc227, bj_UNIT_FACING242)
        peonX186 = GetLocationX(startLoc227)
        peonY322 = (GetLocationY(startLoc227) - 224.00)
        CreateUnit(whichPlayer103, 1869636975, (peonX186 + (2.00 * unitSpacing177)), (peonY322 + (0.00 * unitSpacing177)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer103, 1869636975, (peonX186 + (1.00 * unitSpacing177)), (peonY322 + (0.00 * unitSpacing177)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer103, 1869636975, (peonX186 + (0.00 * unitSpacing177)), (peonY322 + (0.00 * unitSpacing177)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer103, 1869636975, (peonX186 - (1.00 * unitSpacing177)), (peonY322 + (0.00 * unitSpacing177)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer103, 1869636975, (peonX186 - (2.00 * unitSpacing177)), (peonY322 + (0.00 * unitSpacing177)), bj_UNIT_FACING242)
        heroLoc202 = Location(peonX186, (peonY322 - (2.00 * unitSpacing177)))
    }
    if doHeroes110{
        if useRandomHero325{
            MeleeRandomHeroLoc(whichPlayer103, 1331850337, 1332109682, 1333027688, 1332963428, heroLoc202)
        } else {
            SetPlayerState(whichPlayer103, PLAYER_STATE_RESOURCE_HERO_TOKENS673, bj_MELEE_STARTING_HERO_TOKENS124)
        }
    } else {
    }
    if doCamera837{
        SetCameraPositionForPlayer(whichPlayer103, peonX186, peonY322)
        SetCameraQuickPositionForPlayer(whichPlayer103, peonX186, peonY322)
    } else {
    }
}


function MeleeStartingUnitsUndead(player whichPlayer167, location startLoc235, boolean doHeroes919, boolean doCamera269, boolean doPreload181) returns void{ 
    local boolean useRandomHero603
    local real unitSpacing179
    local unit nearestMine975
    local location nearMineLoc827
    local location nearTownLoc249
    local location heroLoc102
    local real peonX256
    local real peonY264
    local real ghoulX275
    local real ghoulY175
    useRandomHero603 = IsMapFlagSet(MAP_RANDOM_HERO175)
    unitSpacing179 = 64.00
    null
    null
    null
    null
    null
    null
    null
    null
    if doPreload181{
        Preloader("scripts\UndeadMelee.pld")
    } else {
    }
    nearestMine975 = MeleeFindNearestMine(startLoc235, bj_MELEE_MINE_SEARCH_RADIUS252)
    if (nearestMine975 != null){
        CreateUnitAtLoc(whichPlayer167, 1970172012, startLoc235, bj_UNIT_FACING242)
        nearestMine975 = BlightGoldMineForPlayerBJ(nearestMine975, whichPlayer167)
        nearTownLoc249 = MeleeGetProjectedLoc(startLoc235, GetUnitLoc(nearestMine975), 288., 0.)
        ghoulX275 = GetLocationX(nearTownLoc249)
        ghoulY175 = GetLocationY(nearTownLoc249)
        bj_ghoul301[GetPlayerId(whichPlayer167)] = CreateUnit(whichPlayer167, 1969711215, (ghoulX275 + (0.00 * unitSpacing179)), (ghoulY175 + (0.00 * unitSpacing179)), bj_UNIT_FACING242)
        nearMineLoc827 = MeleeGetProjectedLoc(GetUnitLoc(nearestMine975), startLoc235, 320., 0.)
        peonX256 = GetLocationX(nearMineLoc827)
        peonY264 = GetLocationY(nearMineLoc827)
        CreateUnit(whichPlayer167, 1969316719, (peonX256 + (0.00 * unitSpacing179)), (peonY264 + (0.50 * unitSpacing179)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer167, 1969316719, (peonX256 + (0.65 * unitSpacing179)), (peonY264 - (0.50 * unitSpacing179)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer167, 1969316719, (peonX256 - (0.65 * unitSpacing179)), (peonY264 - (0.50 * unitSpacing179)), bj_UNIT_FACING242)
        SetBlightLoc(whichPlayer167, nearMineLoc827, 768., true)
        heroLoc102 = MeleeGetProjectedLoc(GetUnitLoc(nearestMine975), startLoc235, 384., 45.)
    } else {
        CreateUnitAtLoc(whichPlayer167, 1970172012, startLoc235, bj_UNIT_FACING242)
        peonX256 = GetLocationX(startLoc235)
        peonY264 = (GetLocationY(startLoc235) - 224.00)
        CreateUnit(whichPlayer167, 1969316719, (peonX256 - (1.50 * unitSpacing179)), (peonY264 + (0.00 * unitSpacing179)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer167, 1969316719, (peonX256 - (0.50 * unitSpacing179)), (peonY264 + (0.00 * unitSpacing179)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer167, 1969316719, (peonX256 + (0.50 * unitSpacing179)), (peonY264 + (0.00 * unitSpacing179)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer167, 1969711215, (peonX256 + (1.50 * unitSpacing179)), (peonY264 + (0.00 * unitSpacing179)), bj_UNIT_FACING242)
        SetBlightLoc(whichPlayer167, startLoc235, 768., true)
        heroLoc102 = Location(peonX256, (peonY264 - (2.00 * unitSpacing179)))
    }
    if doHeroes919{
        if useRandomHero603{
            MeleeRandomHeroLoc(whichPlayer167, 1432642913, 1432646245, 1433168227, 1432580716, heroLoc102)
        } else {
            SetPlayerState(whichPlayer167, PLAYER_STATE_RESOURCE_HERO_TOKENS673, bj_MELEE_STARTING_HERO_TOKENS124)
        }
    } else {
    }
    if doCamera269{
        SetCameraPositionForPlayer(whichPlayer167, peonX256, peonY264)
        SetCameraQuickPositionForPlayer(whichPlayer167, peonX256, peonY264)
    } else {
    }
}


function MeleeStartingUnitsNightElf(player whichPlayer235, location startLoc145, boolean doHeroes116, boolean doCamera295, boolean doPreload310) returns void{ 
    local boolean useRandomHero901
    local real unitSpacing257
    local real minTreeDist217
    local real minWispDist125
    local unit nearestMine186
    local location nearMineLoc642
    local location wispLoc550
    local location heroLoc176
    local real peonX244
    local real peonY189
    local unit tree427
    useRandomHero901 = IsMapFlagSet(MAP_RANDOM_HERO175)
    unitSpacing257 = 64.00
    minTreeDist217 = (3.50 * bj_CELLWIDTH174)
    minWispDist125 = (1.75 * bj_CELLWIDTH174)
    null
    null
    null
    null
    null
    null
    null
    if doPreload310{
        Preloader("scripts\NightElfMelee.pld")
    } else {
    }
    nearestMine186 = MeleeFindNearestMine(startLoc145, bj_MELEE_MINE_SEARCH_RADIUS252)
    if (nearestMine186 != null){
        nearMineLoc642 = MeleeGetProjectedLoc(GetUnitLoc(nearestMine186), startLoc145, 650., 0.)
        nearMineLoc642 = MeleeGetLocWithinRect(nearMineLoc642, GetRectFromCircleBJ(GetUnitLoc(nearestMine186), minTreeDist217))
        tree427 = CreateUnitAtLoc(whichPlayer235, 1702129516, nearMineLoc642, bj_UNIT_FACING242)
        IssueTargetOrder(tree427, "entangleinstant", nearestMine186)
        wispLoc550 = MeleeGetProjectedLoc(GetUnitLoc(nearestMine186), startLoc145, 320., 0.)
        wispLoc550 = MeleeGetLocWithinRect(wispLoc550, GetRectFromCircleBJ(GetUnitLoc(nearestMine186), minWispDist125))
        peonX244 = GetLocationX(wispLoc550)
        peonY189 = GetLocationY(wispLoc550)
        CreateUnit(whichPlayer235, 1702327152, (peonX244 + (0.00 * unitSpacing257)), (peonY189 + (1.00 * unitSpacing257)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer235, 1702327152, (peonX244 + (1.00 * unitSpacing257)), (peonY189 + (0.15 * unitSpacing257)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer235, 1702327152, (peonX244 - (1.00 * unitSpacing257)), (peonY189 + (0.15 * unitSpacing257)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer235, 1702327152, (peonX244 + (0.58 * unitSpacing257)), (peonY189 - (1.00 * unitSpacing257)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer235, 1702327152, (peonX244 - (0.58 * unitSpacing257)), (peonY189 - (1.00 * unitSpacing257)), bj_UNIT_FACING242)
        heroLoc176 = MeleeGetProjectedLoc(GetUnitLoc(nearestMine186), startLoc145, 384., 45.)
    } else {
        CreateUnitAtLoc(whichPlayer235, 1702129516, startLoc145, bj_UNIT_FACING242)
        peonX244 = GetLocationX(startLoc145)
        peonY189 = (GetLocationY(startLoc145) - 224.00)
        CreateUnit(whichPlayer235, 1702327152, (peonX244 - (2.00 * unitSpacing257)), (peonY189 + (0.00 * unitSpacing257)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer235, 1702327152, (peonX244 - (1.00 * unitSpacing257)), (peonY189 + (0.00 * unitSpacing257)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer235, 1702327152, (peonX244 + (0.00 * unitSpacing257)), (peonY189 + (0.00 * unitSpacing257)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer235, 1702327152, (peonX244 + (1.00 * unitSpacing257)), (peonY189 + (0.00 * unitSpacing257)), bj_UNIT_FACING242)
        CreateUnit(whichPlayer235, 1702327152, (peonX244 + (2.00 * unitSpacing257)), (peonY189 + (0.00 * unitSpacing257)), bj_UNIT_FACING242)
        heroLoc176 = Location(peonX244, (peonY189 - (2.00 * unitSpacing257)))
    }
    if doHeroes116{
        if useRandomHero901{
            MeleeRandomHeroLoc(whichPlayer235, 1164207469, 1164666213, 1164799855, 1165451634, heroLoc176)
        } else {
            SetPlayerState(whichPlayer235, PLAYER_STATE_RESOURCE_HERO_TOKENS673, bj_MELEE_STARTING_HERO_TOKENS124)
        }
    } else {
    }
    if doCamera295{
        SetCameraPositionForPlayer(whichPlayer235, peonX244, peonY189)
        SetCameraQuickPositionForPlayer(whichPlayer235, peonX244, peonY189)
    } else {
    }
}


function MeleeStartingUnits() returns void{ 
    local integer index276
    local player indexPlayer111
    local location indexStartLoc581
    local race indexRace234
    null
    null
    null
    null
    Preloader("scripts\SharedMelee.pld")
    index276 = 0
    loop {
        indexPlayer111 = Player(index276)
        if (GetPlayerSlotState(indexPlayer111) == PLAYER_SLOT_STATE_PLAYING320){
            indexStartLoc581 = GetStartLocationLoc(GetPlayerStartLocation(indexPlayer111))
            indexRace234 = GetPlayerRace(indexPlayer111)
            if (indexRace234 == RACE_HUMAN325){
                MeleeStartingUnitsHuman(indexPlayer111, indexStartLoc581, true, true, true)
            } else {
                if (indexRace234 == RACE_ORC150){
                    MeleeStartingUnitsOrc(indexPlayer111, indexStartLoc581, true, true, true)
                } else {
                    if (indexRace234 == RACE_UNDEAD228){
                        MeleeStartingUnitsUndead(indexPlayer111, indexStartLoc581, true, true, true)
                    } else {
                        if (indexRace234 == RACE_NIGHTELF229){
                            MeleeStartingUnitsNightElf(indexPlayer111, indexStartLoc581, true, true, true)
                        } else {
                            MeleeStartingUnitsUnknownRace(indexPlayer111, indexStartLoc581, true, true, true)
                        }
                    }
                }
            }
        } else {
        }
        index276 = (index276 + 1)
        exitwhen (index276 == bj_MAX_PLAYERS803)
    }
}


function Preloader(string filename957) returns void{ 
}


function GetPlayerStartLocation(player whichPlayer311) returns integer{ 
}


function GetStartLocationLoc(integer whichStartLocation311) returns location{ 
}


function MeleeStartingUnitsUnknownRace(player whichPlayer110, location startLoc462, boolean doHeroes953, boolean doCamera327, boolean doPreload235) returns void{ 
    local integer index276
    null
    if doPreload235{
    } else {
    }
    index276 = 0
    loop {
        CreateUnit(whichPlayer110, 1853057125, (GetLocationX(startLoc462) + GetRandomReal((- 256), 256.)), (GetLocationY(startLoc462) + GetRandomReal((- 256), 256.)), GetRandomReal(0., 360.))
        index276 = (index276 + 1)
        exitwhen (index276 == 12)
    }
    if doHeroes953{
        SetPlayerState(whichPlayer110, PLAYER_STATE_RESOURCE_HERO_TOKENS673, bj_MELEE_STARTING_HERO_TOKENS124)
    } else {
    }
    if doCamera327{
        SetCameraPositionLocForPlayer(whichPlayer110, startLoc462)
        SetCameraQuickPositionLocForPlayer(whichPlayer110, startLoc462)
    } else {
    }
}


function GetLocationX(location whichLocation771) returns real{ 
}


function GetLocationY(location whichLocation940) returns real{ 
}


function CreateUnit(player id121, integer unitid625, real x848, real y304, real face185) returns unit{ 
}


function SetPlayerState(player whichPlayer230, playerstate whichPlayerState539, integer value436) returns void{ 
}


function SetCameraPositionLocForPlayer(player whichPlayer253, location loc299) returns void{ 
    if (GetLocalPlayer() == whichPlayer253){
        SetCameraPosition(GetLocationX(loc299), GetLocationY(loc299))
    } else {
    }
}


function SetCameraQuickPositionLocForPlayer(player whichPlayer440, location loc228) returns void{ 
    if (GetLocalPlayer() == whichPlayer440){
        SetCameraQuickPosition(GetLocationX(loc228), GetLocationY(loc228))
    } else {
    }
}


function IsMapFlagSet(mapflag whichMapFlag277) returns boolean{ 
}


function MeleeFindNearestMine(location src157, real range215) returns unit{ 
    local group nearbyMines335
    null
    bj_meleeNearestMine558 = null
    bj_meleeNearestMineDist107 = (- 1)
    bj_meleeNearestMineToLoc335 = src157
    nearbyMines335 = CreateGroup()
    GroupEnumUnitsInRangeOfLoc(nearbyMines335, src157, range215, null)
    ForGroup(nearbyMines335, function MeleeEnumFindNearestMine)
    DestroyGroup(nearbyMines335)
    return bj_meleeNearestMine558
}


function GetUnitLoc(unit whichUnit692) returns location{ 
}


function MeleeGetProjectedLoc(location src208, location targ104, real distance215, real deltaAngle585) returns location{ 
    local real srcX210
    local real srcY257
    local real direction129
    srcX210 = GetLocationX(src208)
    srcY257 = GetLocationY(src208)
    direction129 = (Atan2((GetLocationY(targ104) - srcY257), (GetLocationX(targ104) - srcX210)) + deltaAngle585)
    return Location((srcX210 + (distance215 * Cos(direction129))), (srcY257 + (distance215 * Sin(direction129))))
}


function GetRectFromCircleBJ(location center164, real radius812) returns rect{ 
    local real centerX196
    local real centerY478
    centerX196 = GetLocationX(center164)
    centerY478 = GetLocationY(center164)
    return Rect((centerX196 - radius812), (centerY478 - radius812), (centerX196 + radius812), (centerY478 + radius812))
}


function MeleeGetLocWithinRect(location src230, rect r219) returns location{ 
    local real withinX325
    local real withinY887
    withinX325 = MeleeGetNearestValueWithin(GetLocationX(src230), GetRectMinX(r219), GetRectMaxX(r219))
    withinY887 = MeleeGetNearestValueWithin(GetLocationY(src230), GetRectMinY(r219), GetRectMaxY(r219))
    return Location(withinX325, withinY887)
}


function CreateUnitAtLoc(player id332, integer unitid328, location whichLocation157, real face658) returns unit{ 
}


function IssueTargetOrder(unit whichUnit335, string order661, widget targetWidget317) returns boolean{ 
}


function Location(real x406, real y295) returns location{ 
}


function MeleeRandomHeroLoc(player p887, integer id1889, integer id2234, integer id3156, integer id4922, location loc174) returns unit{ 
    local unit hero167
    local integer roll223
    local integer pick807
    local version v705
    hero167 = null
    null
    null
    null
    v705 = VersionGet()
    if (v705 == VERSION_REIGN_OF_CHAOS290){
        roll223 = GetRandomInt(1, 3)
    } else {
        roll223 = GetRandomInt(1, 4)
    }
    if (roll223 == 1){
        pick807 = id1889
    } else {
        if (roll223 == 2){
            pick807 = id2234
        } else {
            if (roll223 == 3){
                pick807 = id3156
            } else {
                if (roll223 == 4){
                    pick807 = id4922
                } else {
                    pick807 = id1889
                }
            }
        }
    }
    hero167 = CreateUnitAtLoc(p887, pick807, loc174, bj_UNIT_FACING242)
    if bj_meleeGrantHeroItems303{
        MeleeGrantItemsToHero(hero167)
    } else {
    }
    return hero167
}


function SetCameraPositionForPlayer(player whichPlayer784, real x193, real y274) returns void{ 
    if (GetLocalPlayer() == whichPlayer784){
        SetCameraPosition(x193, y274)
    } else {
    }
}


function SetCameraQuickPositionForPlayer(player whichPlayer234, real x130, real y628) returns void{ 
    if (GetLocalPlayer() == whichPlayer234){
        SetCameraQuickPosition(x130, y628)
    } else {
    }
}


function BlightGoldMineForPlayerBJ(unit goldMine154, player whichPlayer316) returns unit{ 
    local real mineX160
    local real mineY160
    local integer mineGold118
    local unit newMine933
    null
    null
    null
    null
    if (GetUnitTypeId(goldMine154) != 1852272492){
        return null
    } else {
    }
    mineX160 = GetUnitX(goldMine154)
    mineY160 = GetUnitY(goldMine154)
    mineGold118 = GetResourceAmount(goldMine154)
    RemoveUnit(goldMine154)
    newMine933 = CreateBlightedGoldmine(whichPlayer316, mineX160, mineY160, bj_UNIT_FACING242)
    SetResourceAmount(newMine933, mineGold118)
    return newMine933
}


function SetBlightLoc(player whichPlayer190, location whichLocation235, real radius130, boolean addBlight105) returns void{ 
}


function UnitAddAbilityBJ(integer abilityId906, unit whichUnit781) returns boolean{ 
    return UnitAddAbility(whichUnit781, abilityId906)
}


function UnitMakeAbilityPermanentBJ(boolean permanent221, integer abilityId268, unit whichUnit344) returns boolean{ 
    return UnitMakeAbilityPermanent(whichUnit344, permanent221, abilityId268)
}


function GetRectMinX(rect whichRect175) returns real{ 
}


function GetRectMaxX(rect whichRect285) returns real{ 
}


function MeleeGetNearestValueWithin(real val325, real minVal252, real maxVal472) returns real{ 
    if (val325 < minVal252){
        return minVal252
    } else {
        if (val325 > maxVal472){
            return maxVal472
        } else {
            return val325
        }
    }
}


function GetRectMinY(rect whichRect922) returns real{ 
}


function GetRectMaxY(rect whichRect208) returns real{ 
}


function Atan2(real y880, real x336) returns real{ 
}


function Cos(real radians149) returns real{ 
}


function Sin(real radians231) returns real{ 
}


function MeleeGrantItemsToHero(unit whichUnit972) returns void{ 
    local integer owner628
    owner628 = GetPlayerId(GetOwningPlayer(whichUnit972))
    if (bj_meleeTwinkedHeroes269[owner628] < bj_MELEE_MAX_TWINKED_HEROES189){
        UnitAddItemById(whichUnit972, 1937012592)
        bj_meleeTwinkedHeroes269[owner628] = (bj_meleeTwinkedHeroes269[owner628] + 1)
    } else {
    }
}


function GroupEnumUnitsInRangeOfLoc(group whichGroup165, location whichLocation250, real radius970, boolexpr filter214) returns void{ 
}


function MeleeEnumFindNearestMine() returns void{ 
    local unit enumUnit267
    local real dist225
    local location unitLoc323
    enumUnit267 = GetEnumUnit()
    null
    null
    if (GetUnitTypeId(enumUnit267) == 1852272492){
        unitLoc323 = GetUnitLoc(enumUnit267)
        dist225 = DistanceBetweenPoints(unitLoc323, bj_meleeNearestMineToLoc335)
        RemoveLocation(unitLoc323)
        if ((bj_meleeNearestMineDist107 < 0.) or (dist225 < bj_meleeNearestMineDist107)){
            bj_meleeNearestMine558 = enumUnit267
            bj_meleeNearestMineDist107 = dist225
        } else {
        }
    } else {
    }
}


function DistanceBetweenPoints(location locA123, location locB144) returns real{ 
    local real dx312
    local real dy187
    dx312 = (GetLocationX(locB144) - GetLocationX(locA123))
    dy187 = (GetLocationY(locB144) - GetLocationY(locA123))
    return SquareRoot(((dx312 * dx312) + (dy187 * dy187)))
}


function RemoveLocation(location whichLocation296) returns void{ 
}


function MeleeClearExcessUnits() returns void{ 
    local integer index132
    local real locX198
    local real locY274
    local player indexPlayer238
    null
    null
    null
    null
    index132 = 0
    loop {
        indexPlayer238 = Player(index132)
        if (GetPlayerSlotState(indexPlayer238) == PLAYER_SLOT_STATE_PLAYING320){
            locX198 = GetStartLocationX(GetPlayerStartLocation(indexPlayer238))
            locY274 = GetStartLocationY(GetPlayerStartLocation(indexPlayer238))
            MeleeClearNearbyUnits(locX198, locY274, bj_MELEE_CLEAR_UNITS_RADIUS113)
        } else {
        }
        index132 = (index132 + 1)
        exitwhen (index132 == bj_MAX_PLAYERS803)
    }
}


function GetStartLocationX(integer whichStartLocation298) returns real{ 
}


function GetStartLocationY(integer whichStartLocation306) returns real{ 
}


function MeleeClearNearbyUnits(real x264, real y323, real range122) returns void{ 
    local group nearbyUnits146
    null
    nearbyUnits146 = CreateGroup()
    GroupEnumUnitsInRange(nearbyUnits146, x264, y323, range122, null)
    ForGroup(nearbyUnits146, function MeleeClearExcessUnit)
    DestroyGroup(nearbyUnits146)
}


function GroupEnumUnitsInRange(group whichGroup261, real x311, real y235, real radius794, boolexpr filter121) returns void{ 
}


function MeleeClearExcessUnit() returns void{ 
    local unit theUnit277
    local integer owner219
    theUnit277 = GetEnumUnit()
    owner219 = GetPlayerId(GetOwningPlayer(theUnit277))
    if (owner219 == PLAYER_NEUTRAL_AGGRESSIVE113){
        RemoveUnit(GetEnumUnit())
    } else {
        if (owner219 == PLAYER_NEUTRAL_PASSIVE270){
            if (not IsUnitType(theUnit277, UNIT_TYPE_STRUCTURE100)){
                RemoveUnit(GetEnumUnit())
            } else {
            }
        } else {
        }
    }
}


function RemoveUnit(unit whichUnit222) returns void{ 
}


function MeleeGrantHeroItems() returns void{ 
    local integer index271
    local trigger trig186
    null
    null
    index271 = 0
    loop {
        bj_meleeTwinkedHeroes269[index271] = 0
        index271 = (index271 + 1)
        exitwhen (index271 == bj_MAX_PLAYER_SLOTS561)
    }
    index271 = 0
    loop {
        trig186 = CreateTrigger()
        TriggerRegisterPlayerUnitEvent(trig186, Player(index271), EVENT_PLAYER_UNIT_TRAIN_FINISH185, filterMeleeTrainedUnitIsHeroBJ282)
        TriggerAddAction(trig186, function MeleeGrantItemsToTrainedHero)
        index271 = (index271 + 1)
        exitwhen (index271 == bj_MAX_PLAYERS803)
    }
    trig186 = CreateTrigger()
    TriggerRegisterPlayerUnitEvent(trig186, Player(PLAYER_NEUTRAL_PASSIVE270), EVENT_PLAYER_UNIT_SELL846, filterMeleeTrainedUnitIsHeroBJ282)
    TriggerAddAction(trig186, function MeleeGrantItemsToHiredHero)
    bj_meleeGrantHeroItems303 = true
}


function MeleeGrantItemsToTrainedHero() returns void{ 
    MeleeGrantItemsToHero(GetTrainedUnit())
}


function MeleeGrantItemsToHiredHero() returns void{ 
    MeleeGrantItemsToHero(GetSoldUnit())
}


function GetSoldUnit() returns unit{ 
}


function GetTrainedUnit() returns unit{ 
}


function UnitAddItemById(unit whichUnit210, integer itemId139) returns item{ 
}


function GetFilterUnit() returns unit{ 
}


function MeleeStartingHeroLimit() returns void{ 
    local integer index121
    null
    index121 = 0
    loop {
        SetPlayerMaxHeroesAllowed(bj_MELEE_HERO_LIMIT297, Player(index121))
        ReducePlayerTechMaxAllowed(Player(index121), 1214344551, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1215130471, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1215324524, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1214409837, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1331850337, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1332109682, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1333027688, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1332963428, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1164207469, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1164666213, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1164799855, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1165451634, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1432642913, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1432646245, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1433168227, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1432580716, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1315988077, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1315074670, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1315858291, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1315990632, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1315074932, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1315007587, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1316252014, bj_MELEE_HERO_TYPE_LIMIT159)
        ReducePlayerTechMaxAllowed(Player(index121), 1315334514, bj_MELEE_HERO_TYPE_LIMIT159)
        index121 = (index121 + 1)
        exitwhen (index121 == bj_MAX_PLAYERS803)
    }
}


function SetPlayerMaxHeroesAllowed(integer maximum144, player whichPlayer251) returns void{ 
    SetPlayerTechMaxAllowed(whichPlayer251, 1212502607, maximum144)
}


function ReducePlayerTechMaxAllowed(player whichPlayer480, integer techId260, integer limit250) returns void{ 
    local integer oldMax283
    oldMax283 = GetPlayerTechMaxAllowed(whichPlayer480, techId260)
    if ((oldMax283 < 0) or (oldMax283 > limit250)){
        SetPlayerTechMaxAllowed(whichPlayer480, techId260, limit250)
    } else {
    }
}


function GetPlayerTechMaxAllowed(player whichPlayer126, integer techid132) returns integer{ 
}


function MeleeStartingResources() returns void{ 
    local integer index184
    local player indexPlayer176
    local version v110
    local integer startingGold236
    local integer startingLumber178
    null
    null
    null
    null
    null
    v110 = VersionGet()
    if (v110 == VERSION_REIGN_OF_CHAOS290){
        startingGold236 = bj_MELEE_STARTING_GOLD_V0260
        startingLumber178 = bj_MELEE_STARTING_LUMBER_V0130
    } else {
        startingGold236 = bj_MELEE_STARTING_GOLD_V1211
        startingLumber178 = bj_MELEE_STARTING_LUMBER_V1139
    }
    index184 = 0
    loop {
        indexPlayer176 = Player(index184)
        if (GetPlayerSlotState(indexPlayer176) == PLAYER_SLOT_STATE_PLAYING320){
            SetPlayerState(indexPlayer176, PLAYER_STATE_RESOURCE_GOLD174, startingGold236)
            SetPlayerState(indexPlayer176, PLAYER_STATE_RESOURCE_LUMBER156, startingLumber178)
        } else {
        }
        index184 = (index184 + 1)
        exitwhen (index184 == bj_MAX_PLAYERS803)
    }
}


function MeleeStartingVisibility() returns void{ 
    SetFloatGameState(GAME_STATE_TIME_OF_DAY129, bj_MELEE_STARTING_TOD241)
}


function SetFloatGameState(fgamestate whichFloatGameState241, real value139) returns void{ 
}


function GetAbilityName(integer abilcode177) returns string{ 
    return GetObjectName(abilcode177)
}


function GetObjectName(integer objectId225) returns string{ 
}


function SetBlightRadiusLocBJ(boolean addBlight238, player whichPlayer269, location loc105, real radius152) returns void{ 
    SetBlightLoc(whichPlayer269, loc105, radius152, addBlight238)
}


function SetBlightRectBJ(boolean addBlight240, player whichPlayer301, rect r107) returns void{ 
    SetBlightRect(whichPlayer301, r107, addBlight240)
}


function SetBlightRect(player whichPlayer192, rect r244, boolean addBlight282) returns void{ 
}


function SaveDyingWidget() returns void{ 
    bj_lastDyingWidget147 = GetTriggerWidget()
}


function GetTriggerWidget() returns widget{ 
}


function SetUnitRallyDestructable(unit whichUnit132, destructable targDest257) returns void{ 
    IssueTargetOrder(whichUnit132, "setrally", targDest257)
}


function SetUnitRallyUnit(unit whichUnit311, unit targUnit871) returns void{ 
    IssueTargetOrder(whichUnit311, "setrally", targUnit871)
}


function SetUnitRallyPoint(unit whichUnit557, location targPos270) returns void{ 
    IssuePointOrderLocBJ(whichUnit557, "setrally", targPos270)
}


function IssuePointOrderLocBJ(unit whichUnit223, string order888, location whichLocation326) returns boolean{ 
    return IssuePointOrderLoc(whichUnit223, order888, whichLocation326)
}


function GetDyingDestructable() returns destructable{ 
    return GetTriggerDestructable()
}


function GetTriggerDestructable() returns destructable{ 
}


function GroupTargetItemOrder(group whichGroup262, string order274, widget targetWidget517) returns boolean{ 
    return GroupTargetOrder(whichGroup262, order274, targetWidget517)
}


function GroupTargetOrder(group whichGroup529, string order117, widget targetWidget214) returns boolean{ 
}


function GroupTargetDestructableOrder(group whichGroup114, string order169, widget targetWidget319) returns boolean{ 
    return GroupTargetOrder(whichGroup114, order169, targetWidget319)
}


function GroupImmediateOrderBJ(group whichGroup609, string order248) returns boolean{ 
    return GroupImmediateOrder(whichGroup609, order248)
}


function GroupImmediateOrder(group whichGroup202, string order298) returns boolean{ 
}


function GroupPointOrderLocBJ(group whichGroup111, string order124, location whichLocation277) returns boolean{ 
    return GroupPointOrderLoc(whichGroup111, order124, whichLocation277)
}


function GroupPointOrderLoc(group whichGroup883, string order468, location whichLocation287) returns boolean{ 
}


function GroupTargetOrderBJ(group whichGroup246, string order179, widget targetWidget240) returns boolean{ 
    return GroupTargetOrder(whichGroup246, order179, targetWidget240)
}


function IssueImmediateOrderBJ(unit whichUnit256, string order707) returns boolean{ 
    return IssueImmediateOrder(whichUnit256, order707)
}


function IssueImmediateOrder(unit whichUnit325, string order282) returns boolean{ 
}


function IssueTargetItemOrder(unit whichUnit503, string order473, widget targetWidget372) returns boolean{ 
    return IssueTargetOrder(whichUnit503, order473, targetWidget372)
}


function IssueTargetDestructableOrder(unit whichUnit236, string order103, widget targetWidget680) returns boolean{ 
    return IssueTargetOrder(whichUnit236, order103, targetWidget680)
}


function IssuePointOrderLoc(unit whichUnit215, string order285, location whichLocation131) returns boolean{ 
}


function IssueTargetOrderBJ(unit whichUnit545, string order268, widget targetWidget806) returns boolean{ 
    return IssueTargetOrder(whichUnit545, order268, targetWidget806)
}


function UnlockGameSpeedBJ() returns void{ 
    SetMapFlag(MAP_LOCK_SPEED275, false)
}


function SetMapFlag(mapflag whichMapFlag228, boolean value319) returns void{ 
}


function LockGameSpeedBJ() returns void{ 
    SetMapFlag(MAP_LOCK_SPEED275, true)
}


function SetPlayerUnitAvailableBJ(integer unitId251, boolean allowed292, player whichPlayer732) returns void{ 
    if allowed292{
        SetPlayerTechMaxAllowed(whichPlayer732, unitId251, (- 1))
    } else {
        SetPlayerTechMaxAllowed(whichPlayer732, unitId251, 0)
    }
}


function SetPlayerColorBJ(player whichPlayer420, playercolor color153, boolean changeExisting213) returns void{ 
    local group g866
    null
    SetPlayerColor(whichPlayer420, color153)
    if changeExisting213{
        bj_setPlayerTargetColor559 = color153
        g866 = CreateGroup()
        GroupEnumUnitsOfPlayer(g866, whichPlayer420, null)
        ForGroup(g866, function SetPlayerColorBJEnum)
        DestroyGroup(g866)
    } else {
    }
}


function SetPlayerColor(player whichPlayer281, playercolor color260) returns void{ 
}


function GroupEnumUnitsOfPlayer(group whichGroup918, player whichPlayer175, boolexpr filter146) returns void{ 
}


function SetPlayerColorBJEnum() returns void{ 
    SetUnitColor(GetEnumUnit(), bj_setPlayerTargetColor559)
}


function SetUnitColor(unit whichUnit143, playercolor whichColor316) returns void{ 
}


function IsPointBlightedBJ(location where266) returns boolean{ 
    return IsPointBlighted(GetLocationX(where266), GetLocationY(where266))
}


function IsPointBlighted(real x203, real y186) returns boolean{ 
}


function GetLastHauntedGoldMine() returns unit{ 
    return bj_lastHauntedGoldMine294
}


function BlightGoldMineForPlayer(unit goldMine259, player whichPlayer141) returns unit{ 
    bj_lastHauntedGoldMine294 = BlightGoldMineForPlayerBJ(goldMine259, whichPlayer141)
    return bj_lastHauntedGoldMine294
}


function GetResourceAmount(unit whichUnit595) returns integer{ 
}


function CreateBlightedGoldmine(player id125, real x265, real y218, real face180) returns unit{ 
}


function SetResourceAmount(unit whichUnit138, integer amount302) returns void{ 
}


function GetRectHeightBJ(rect r231) returns real{ 
    return (GetRectMaxY(r231) - GetRectMinY(r231))
}


function GetRectWidthBJ(rect r393) returns real{ 
    return (GetRectMaxX(r393) - GetRectMinX(r393))
}


function ConvertedPlayer(integer convertedPlayerId260) returns player{ 
    return Player((convertedPlayerId260 - 1))
}


function GetConvertedPlayerId(player whichPlayer266) returns integer{ 
    return (GetPlayerId(whichPlayer266) + 1)
}


function AddResourceAmountBJ(integer delta158, unit whichUnit286) returns void{ 
    AddResourceAmount(whichUnit286, delta158)
}


function AddResourceAmount(unit whichUnit137, integer amount164) returns void{ 
}


function IsPlayerFlagSetBJ(playerstate whichPlayerFlag113, player whichPlayer147) returns boolean{ 
    return (GetPlayerState(whichPlayer147, whichPlayerFlag113) == 1)
}


function GetPlayerTaxRateBJ(playerstate whichResource488, player sourcePlayer324, player otherPlayer161) returns integer{ 
    return GetPlayerTaxRate(sourcePlayer324, otherPlayer161, whichResource488)
}


function GetPlayerTaxRate(player sourcePlayer253, player otherPlayer289, playerstate whichResource198) returns integer{ 
}


function SetPlayerTaxRateBJ(integer rate298, playerstate whichResource136, player sourcePlayer236, player otherPlayer277) returns void{ 
    SetPlayerTaxRate(sourcePlayer236, otherPlayer277, whichResource136, rate298)
}


function SetPlayerTaxRate(player sourcePlayer234, player otherPlayer173, playerstate whichResource445, integer rate204) returns void{ 
}


function SetPlayerFlagBJ(playerstate whichPlayerFlag167, boolean flag120, player whichPlayer183) returns void{ 
    SetPlayerState(whichPlayer183, whichPlayerFlag167, IntegerTertiaryOp(flag120, 1, 0))
}


function IntegerTertiaryOp(boolean flag334, integer valueA316, integer valueB236) returns integer{ 
    if flag334{
        return valueA316
    } else {
        return valueB236
    }
}


function SetPlayerStateBJ(player whichPlayer245, playerstate whichPlayerState145, integer value152) returns void{ 
    local integer oldValue180
    oldValue180 = GetPlayerState(whichPlayer245, whichPlayerState145)
    AdjustPlayerStateBJ((value152 - oldValue180), whichPlayer245, whichPlayerState145)
}


function AdjustPlayerStateBJ(integer delta461, player whichPlayer101, playerstate whichPlayerState430) returns void{ 
    if (delta461 > 0){
        if (whichPlayerState430 == PLAYER_STATE_RESOURCE_GOLD174){
            AdjustPlayerStateSimpleBJ(whichPlayer101, PLAYER_STATE_GOLD_GATHERED917, delta461)
        } else {
            if (whichPlayerState430 == PLAYER_STATE_RESOURCE_LUMBER156){
                AdjustPlayerStateSimpleBJ(whichPlayer101, PLAYER_STATE_LUMBER_GATHERED180, delta461)
            } else {
            }
        }
    } else {
    }
    AdjustPlayerStateSimpleBJ(whichPlayer101, whichPlayerState430, delta461)
}


function AdjustPlayerStateSimpleBJ(player whichPlayer231, playerstate whichPlayerState239, integer delta136) returns void{ 
    SetPlayerState(whichPlayer231, whichPlayerState239, (GetPlayerState(whichPlayer231, whichPlayerState239) + delta136))
}


function GetFadeFromSecondsAsReal(real seconds514) returns real{ 
    if (seconds514 != 0.){
        return (128.00 / seconds514)
    } else {
    }
    return 10000.00
}


function GetFadeFromSeconds(real seconds281) returns integer{ 
    if (seconds281 != 0.){
        return (128 / R2I(seconds281))
    } else {
    }
    return 10000
}


function R2I(real r564) returns integer{ 
}


function IsPlayerSlotState(player whichPlayer194, playerslotstate whichState288) returns boolean{ 
    return (GetPlayerSlotState(whichPlayer194) == whichState288)
}


function GetRectCenter(rect whichRect243) returns location{ 
    return Location(GetRectCenterX(whichRect243), GetRectCenterY(whichRect243))
}


function GetRectCenterX(rect whichRect444) returns real{ 
}


function GetRectCenterY(rect whichRect130) returns real{ 
}


function GetPlayerStartLocationLoc(player whichPlayer276) returns location{ 
    return GetStartLocationLoc(GetPlayerStartLocation(whichPlayer276))
}


function GetPlayerStartLocationY(player whichPlayer289) returns real{ 
    return GetStartLocationY(GetPlayerStartLocation(whichPlayer289))
}


function GetPlayerStartLocationX(player whichPlayer222) returns real{ 
    return GetStartLocationX(GetPlayerStartLocation(whichPlayer222))
}


function CopySaveGameBJ(string sourceSaveName253, string destSaveName215) returns boolean{ 
    return CopySaveGame(sourceSaveName253, destSaveName215)
}


function CopySaveGame(string sourceSaveName327, string destSaveName134) returns boolean{ 
}


function RemoveSaveDirectoryBJ(string sourceDirName309) returns boolean{ 
    return RemoveSaveDirectory(sourceDirName309)
}


function RemoveSaveDirectory(string sourceDirName625) returns boolean{ 
}


function RenameSaveDirectoryBJ(string sourceDirName193, string destDirName114) returns boolean{ 
    return RenameSaveDirectory(sourceDirName193, destDirName114)
}


function RenameSaveDirectory(string sourceDirName200, string destDirName194) returns boolean{ 
}


function SaveAndLoadGameBJ(string saveFileName158, string loadFileName220, boolean doScoreScreen160) returns void{ 
    SaveGame(saveFileName158)
    LoadGame(loadFileName220, doScoreScreen160)
}


function SaveGame(string saveFileName127) returns void{ 
}


function LoadGame(string saveFileName195, boolean doScoreScreen209) returns void{ 
}


function SaveAndChangeLevelBJ(string saveFileName227, string newLevel323, boolean doScoreScreen289) returns void{ 
    SaveGame(saveFileName227)
    ChangeLevel(newLevel323, doScoreScreen289)
}


function ChangeLevel(string newLevel182, boolean doScoreScreen596) returns void{ 
}


function LoadGameBJ(string loadFileName316, boolean doScoreScreen134) returns void{ 
    LoadGame(loadFileName316, doScoreScreen134)
}


function IsCustomCampaignButtonVisibile(integer whichButton950) returns boolean{ 
    return GetCustomCampaignButtonVisible((whichButton950 - 1))
}


function GetCustomCampaignButtonVisible(integer whichButton221) returns boolean{ 
}


function ShowCustomCampaignButton(boolean show215, integer whichButton200) returns void{ 
    SetCustomCampaignButtonVisible((whichButton200 - 1), show215)
}


function SetCustomCampaignButtonVisible(integer whichButton539, boolean visible169) returns void{ 
}


function HaveSavedValue(integer key219, integer valueType239, integer missionKey922, hashtable table115) returns boolean{ 
    if (valueType239 == bj_HASHTABLE_BOOLEAN846){
        return HaveSavedBoolean(table115, missionKey922, key219)
    } else {
        if (valueType239 == bj_HASHTABLE_INTEGER601){
            return HaveSavedInteger(table115, missionKey922, key219)
        } else {
            if (valueType239 == bj_HASHTABLE_REAL405){
                return HaveSavedReal(table115, missionKey922, key219)
            } else {
                if (valueType239 == bj_HASHTABLE_STRING148){
                    return HaveSavedString(table115, missionKey922, key219)
                } else {
                    if (valueType239 == bj_HASHTABLE_HANDLE152){
                        return HaveSavedHandle(table115, missionKey922, key219)
                    } else {
                        return false
                    }
                }
            }
        }
    }
}


function HaveSavedBoolean(hashtable table773, integer parentKey333, integer childKey312) returns boolean{ 
}


function HaveSavedInteger(hashtable table236, integer parentKey862, integer childKey101) returns boolean{ 
}


function HaveSavedReal(hashtable table160, integer parentKey173, integer childKey126) returns boolean{ 
}


function HaveSavedString(hashtable table287, integer parentKey376, integer childKey229) returns boolean{ 
}


function HaveSavedHandle(hashtable table745, integer parentKey138, integer childKey692) returns boolean{ 
}


function HaveStoredValue(string key262, integer valueType999, string missionKey779, gamecache cache326) returns boolean{ 
    if (valueType999 == bj_GAMECACHE_BOOLEAN569){
        return HaveStoredBoolean(cache326, missionKey779, key262)
    } else {
        if (valueType999 == bj_GAMECACHE_INTEGER258){
            return HaveStoredInteger(cache326, missionKey779, key262)
        } else {
            if (valueType999 == bj_GAMECACHE_REAL135){
                return HaveStoredReal(cache326, missionKey779, key262)
            } else {
                if (valueType999 == bj_GAMECACHE_UNIT826){
                    return HaveStoredUnit(cache326, missionKey779, key262)
                } else {
                    if (valueType999 == bj_GAMECACHE_STRING238){
                        return HaveStoredString(cache326, missionKey779, key262)
                    } else {
                        return false
                    }
                }
            }
        }
    }
}


function HaveStoredBoolean(gamecache cache624, string missionKey401, string key306) returns boolean{ 
}


function HaveStoredInteger(gamecache cache293, string missionKey203, string key659) returns boolean{ 
}


function HaveStoredReal(gamecache cache330, string missionKey183, string key245) returns boolean{ 
}


function HaveStoredUnit(gamecache cache233, string missionKey893, string key252) returns boolean{ 
}


function HaveStoredString(gamecache cache168, string missionKey198, string key811) returns boolean{ 
}


function FlushChildHashtableBJ(integer missionKey106, hashtable table303) returns void{ 
    FlushChildHashtable(table303, missionKey106)
}


function FlushChildHashtable(hashtable table324, integer parentKey280) returns void{ 
}


function FlushParentHashtableBJ(hashtable table322) returns void{ 
    FlushParentHashtable(table322)
}


function FlushParentHashtable(hashtable table179) returns void{ 
}


function FlushStoredMissionBJ(string missionKey128, gamecache cache191) returns void{ 
    FlushStoredMission(cache191, missionKey128)
}


function FlushStoredMission(gamecache cache328, string missionKey206) returns void{ 
}


function FlushGameCacheBJ(gamecache cache954) returns void{ 
    FlushGameCache(cache954)
}


function FlushGameCache(gamecache cache227) returns void{ 
}


function GetLastRestoredUnitBJ() returns unit{ 
    return bj_lastLoadedUnit132
}


function RestoreUnitLocFacingPointBJ(string key128, string missionKey881, gamecache cache158, player forWhichPlayer247, location loc284, location lookAt234) returns unit{ 
    return RestoreUnitLocFacingAngleBJ(key128, missionKey881, cache158, forWhichPlayer247, loc284, AngleBetweenPoints(loc284, lookAt234))
}


function AngleBetweenPoints(location locA123, location locB324) returns real{ 
    return (bj_RADTODEG169 * Atan2((GetLocationY(locB324) - GetLocationY(locA123)), (GetLocationX(locB324) - GetLocationX(locA123))))
}


function RestoreUnitLocFacingAngleBJ(string key777, string missionKey292, gamecache cache331, player forWhichPlayer273, location loc935, real facing315) returns unit{ 
    bj_lastLoadedUnit132 = RestoreUnit(cache331, missionKey292, key777, forWhichPlayer273, GetLocationX(loc935), GetLocationY(loc935), facing315)
    return bj_lastLoadedUnit132
}


function RestoreUnit(gamecache cache485, string missionKey190, string key204, player forWhichPlayer253, real x130, real y121, real facing180) returns unit{ 
}


function LoadHashtableHandleBJ(integer key123, integer missionKey288, hashtable table273) returns hashtable{ 
    return LoadHashtableHandle(table273, missionKey288, key123)
}


function LoadHashtableHandle(hashtable table292, integer parentKey138, integer childKey742) returns hashtable{ 
}


function LoadFogModifierHandleBJ(integer key943, integer missionKey294, hashtable table198) returns fogmodifier{ 
    return LoadFogModifierHandle(table198, missionKey294, key943)
}


function LoadFogModifierHandle(hashtable table233, integer parentKey301, integer childKey300) returns fogmodifier{ 
}


function LoadFogStateHandleBJ(integer key201, integer missionKey136, hashtable table280) returns fogstate{ 
    return LoadFogStateHandle(table280, missionKey136, key201)
}


function LoadFogStateHandle(hashtable table144, integer parentKey331, integer childKey243) returns fogstate{ 
}


function LoadRegionHandleBJ(integer key334, integer missionKey266, hashtable table331) returns region{ 
    return LoadRegionHandle(table331, missionKey266, key334)
}


function LoadRegionHandle(hashtable table254, integer parentKey238, integer childKey282) returns region{ 
}


function LoadUbersplatHandleBJ(integer key272, integer missionKey227, hashtable table189) returns ubersplat{ 
    return LoadUbersplatHandle(table189, missionKey227, key272)
}


function LoadUbersplatHandle(hashtable table115, integer parentKey202, integer childKey641) returns ubersplat{ 
}


function LoadImageHandleBJ(integer key290, integer missionKey195, hashtable table143) returns image{ 
    return LoadImageHandle(table143, missionKey195, key290)
}


function LoadImageHandle(hashtable table140, integer parentKey870, integer childKey178) returns image{ 
}


function LoadLightningHandleBJ(integer key303, integer missionKey247, hashtable table778) returns lightning{ 
    return LoadLightningHandle(table778, missionKey247, key303)
}


function LoadLightningHandle(hashtable table141, integer parentKey274, integer childKey110) returns lightning{ 
}


function LoadTextTagHandleBJ(integer key176, integer missionKey821, hashtable table313) returns texttag{ 
    return LoadTextTagHandle(table313, missionKey821, key176)
}


function LoadTextTagHandle(hashtable table282, integer parentKey204, integer childKey256) returns texttag{ 
}


function LoadButtonHandleBJ(integer key330, integer missionKey322, hashtable table126) returns button{ 
    return LoadButtonHandle(table126, missionKey322, key330)
}


function LoadButtonHandle(hashtable table216, integer parentKey422, integer childKey188) returns button{ 
}


function LoadDialogHandleBJ(integer key274, integer missionKey884, hashtable table134) returns dialog{ 
    return LoadDialogHandle(table134, missionKey884, key274)
}


function LoadDialogHandle(hashtable table255, integer parentKey301, integer childKey122) returns dialog{ 
}


function LoadTrackableHandleBJ(integer key292, integer missionKey224, hashtable table190) returns trackable{ 
    return LoadTrackableHandle(table190, missionKey224, key292)
}


function LoadTrackableHandle(hashtable table320, integer parentKey297, integer childKey217) returns trackable{ 
}


function LoadMultiboardItemHandleBJ(integer key166, integer missionKey187, hashtable table103) returns multiboarditem{ 
    return LoadMultiboardItemHandle(table103, missionKey187, key166)
}


function LoadMultiboardItemHandle(hashtable table793, integer parentKey236, integer childKey252) returns multiboarditem{ 
}


function LoadMultiboardHandleBJ(integer key249, integer missionKey494, hashtable table196) returns multiboard{ 
    return LoadMultiboardHandle(table196, missionKey494, key249)
}


function LoadMultiboardHandle(hashtable table678, integer parentKey121, integer childKey222) returns multiboard{ 
}


function LoadLeaderboardHandleBJ(integer key268, integer missionKey197, hashtable table301) returns leaderboard{ 
    return LoadLeaderboardHandle(table301, missionKey197, key268)
}


function LoadLeaderboardHandle(hashtable table875, integer parentKey375, integer childKey257) returns leaderboard{ 
}


function LoadTimerDialogHandleBJ(integer key934, integer missionKey319, hashtable table152) returns timerdialog{ 
    return LoadTimerDialogHandle(table152, missionKey319, key934)
}


function LoadTimerDialogHandle(hashtable table253, integer parentKey262, integer childKey174) returns timerdialog{ 
}


function LoadDefeatConditionHandleBJ(integer key287, integer missionKey303, hashtable table129) returns defeatcondition{ 
    return LoadDefeatConditionHandle(table129, missionKey303, key287)
}


function LoadDefeatConditionHandle(hashtable table127, integer parentKey119, integer childKey283) returns defeatcondition{ 
}


function LoadQuestItemHandleBJ(integer key137, integer missionKey282, hashtable table146) returns questitem{ 
    return LoadQuestItemHandle(table146, missionKey282, key137)
}


function LoadQuestItemHandle(hashtable table224, integer parentKey158, integer childKey331) returns questitem{ 
}


function LoadQuestHandleBJ(integer key743, integer missionKey206, hashtable table252) returns quest{ 
    return LoadQuestHandle(table252, missionKey206, key743)
}


function LoadQuestHandle(hashtable table314, integer parentKey242, integer childKey152) returns quest{ 
}


function LoadItemPoolHandleBJ(integer key277, integer missionKey183, hashtable table317) returns itempool{ 
    return LoadItemPoolHandle(table317, missionKey183, key277)
}


function LoadItemPoolHandle(hashtable table193, integer parentKey150, integer childKey321) returns itempool{ 
}


function LoadUnitPoolHandleBJ(integer key537, integer missionKey498, hashtable table144) returns unitpool{ 
    return LoadUnitPoolHandle(table144, missionKey498, key537)
}


function LoadUnitPoolHandle(hashtable table274, integer parentKey310, integer childKey430) returns unitpool{ 
}


function LoadEffectHandleBJ(integer key209, integer missionKey410, hashtable table955) returns effect{ 
    return LoadEffectHandle(table955, missionKey410, key209)
}


function LoadEffectHandle(hashtable table286, integer parentKey279, integer childKey320) returns effect{ 
}


function LoadSoundHandleBJ(integer key180, integer missionKey476, hashtable table326) returns sound{ 
    return LoadSoundHandle(table326, missionKey476, key180)
}


function LoadSoundHandle(hashtable table207, integer parentKey579, integer childKey293) returns sound{ 
}


function LoadBooleanExprHandleBJ(integer key293, integer missionKey142, hashtable table120) returns boolexpr{ 
    return LoadBooleanExprHandle(table120, missionKey142, key293)
}


function LoadBooleanExprHandle(hashtable table117, integer parentKey297, integer childKey136) returns boolexpr{ 
}


function LoadRectHandleBJ(integer key232, integer missionKey104, hashtable table953) returns rect{ 
    return LoadRectHandle(table953, missionKey104, key232)
}


function LoadRectHandle(hashtable table247, integer parentKey508, integer childKey840) returns rect{ 
}


function LoadLocationHandleBJ(integer key725, integer missionKey129, hashtable table832) returns location{ 
    return LoadLocationHandle(table832, missionKey129, key725)
}


function LoadLocationHandle(hashtable table271, integer parentKey199, integer childKey184) returns location{ 
}


function LoadGroupHandleBJ(integer key551, integer missionKey817, hashtable table104) returns group{ 
    return LoadGroupHandle(table104, missionKey817, key551)
}


function LoadGroupHandle(hashtable table156, integer parentKey192, integer childKey547) returns group{ 
}


function LoadForceHandleBJ(integer key734, integer missionKey888, hashtable table187) returns force{ 
    return LoadForceHandle(table187, missionKey888, key734)
}


function LoadForceHandle(hashtable table327, integer parentKey992, integer childKey304) returns force{ 
}


function LoadTriggerEventHandleBJ(integer key416, integer missionKey169, hashtable table318) returns event{ 
    return LoadTriggerEventHandle(table318, missionKey169, key416)
}


function LoadTriggerEventHandle(hashtable table330, integer parentKey149, integer childKey330) returns event{ 
}


function LoadTriggerActionHandleBJ(integer key134, integer missionKey210, hashtable table174) returns triggeraction{ 
    return LoadTriggerActionHandle(table174, missionKey210, key134)
}


function LoadTriggerActionHandle(hashtable table246, integer parentKey350, integer childKey240) returns triggeraction{ 
}


function LoadTriggerConditionHandleBJ(integer key806, integer missionKey253, hashtable table116) returns triggercondition{ 
    return LoadTriggerConditionHandle(table116, missionKey253, key806)
}


function LoadTriggerConditionHandle(hashtable table162, integer parentKey241, integer childKey314) returns triggercondition{ 
}


function LoadTriggerHandleBJ(integer key411, integer missionKey117, hashtable table312) returns trigger{ 
    return LoadTriggerHandle(table312, missionKey117, key411)
}


function LoadTriggerHandle(hashtable table158, integer parentKey166, integer childKey249) returns trigger{ 
}


function LoadTimerHandleBJ(integer key259, integer missionKey181, hashtable table197) returns timer{ 
    return LoadTimerHandle(table197, missionKey181, key259)
}


function LoadTimerHandle(hashtable table140, integer parentKey244, integer childKey102) returns timer{ 
}


function LoadAbilityHandleBJ(integer key233, integer missionKey250, hashtable table155) returns ability{ 
    return LoadAbilityHandle(table155, missionKey250, key233)
}


function LoadAbilityHandle(hashtable table474, integer parentKey246, integer childKey317) returns ability{ 
}


function LoadUnitHandleBJ(integer key342, integer missionKey139, hashtable table367) returns unit{ 
    return LoadUnitHandle(table367, missionKey139, key342)
}


function LoadUnitHandle(hashtable table131, integer parentKey328, integer childKey106) returns unit{ 
}


function LoadItemHandleBJ(integer key213, integer missionKey111, hashtable table142) returns item{ 
    return LoadItemHandle(table142, missionKey111, key213)
}


function LoadItemHandle(hashtable table313, integer parentKey158, integer childKey104) returns item{ 
}


function LoadDestructableHandleBJ(integer key644, integer missionKey161, hashtable table301) returns destructable{ 
    return LoadDestructableHandle(table301, missionKey161, key644)
}


function LoadDestructableHandle(hashtable table226, integer parentKey578, integer childKey144) returns destructable{ 
}


function LoadWidgetHandleBJ(integer key182, integer missionKey303, hashtable table168) returns widget{ 
    return LoadWidgetHandle(table168, missionKey303, key182)
}


function LoadWidgetHandle(hashtable table335, integer parentKey211, integer childKey211) returns widget{ 
}


function LoadPlayerHandleBJ(integer key674, integer missionKey159, hashtable table277) returns player{ 
    return LoadPlayerHandle(table277, missionKey159, key674)
}


function LoadPlayerHandle(hashtable table113, integer parentKey189, integer childKey422) returns player{ 
}


function LoadStringBJ(integer key615, integer missionKey148, hashtable table179) returns string{ 
    local string s156
    null
    s156 = LoadStr(table179, missionKey148, key615)
    if (s156 == null){
        return ""
    } else {
        return s156
    }
}


function LoadStr(hashtable table279, integer parentKey321, integer childKey327) returns string{ 
}


function LoadBooleanBJ(integer key222, integer missionKey118, hashtable table114) returns boolean{ 
    return LoadBoolean(table114, missionKey118, key222)
}


function LoadBoolean(hashtable table259, integer parentKey248, integer childKey266) returns boolean{ 
}


function LoadIntegerBJ(integer key122, integer missionKey555, hashtable table353) returns integer{ 
    return LoadInteger(table353, missionKey555, key122)
}


function LoadInteger(hashtable table865, integer parentKey167, integer childKey271) returns integer{ 
}


function LoadRealBJ(integer key108, integer missionKey179, hashtable table613) returns real{ 
    return LoadReal(table613, missionKey179, key108)
}


function LoadReal(hashtable table148, integer parentKey183, integer childKey251) returns real{ 
}


function GetStoredStringBJ(string key683, string missionKey333, gamecache cache227) returns string{ 
    local string s249
    null
    s249 = GetStoredString(cache227, missionKey333, key683)
    if (s249 == null){
        return ""
    } else {
        return s249
    }
}


function GetStoredString(gamecache cache271, string missionKey129, string key804) returns string{ 
}


function GetStoredBooleanBJ(string key323, string missionKey122, gamecache cache156) returns boolean{ 
    return GetStoredBoolean(cache156, missionKey122, key323)
}


function GetStoredBoolean(gamecache cache244, string missionKey248, string key583) returns boolean{ 
}


function GetStoredIntegerBJ(string key100, string missionKey150, gamecache cache312) returns integer{ 
    return GetStoredInteger(cache312, missionKey150, key100)
}


function GetStoredInteger(gamecache cache259, string missionKey124, string key907) returns integer{ 
}


function GetStoredRealBJ(string key273, string missionKey258, gamecache cache683) returns real{ 
    return GetStoredReal(cache683, missionKey258, key273)
}


function GetStoredReal(gamecache cache281, string missionKey226, string key599) returns real{ 
}


function SaveHashtableHandleBJ(hashtable whichHashtable167, integer key230, integer missionKey277, hashtable table322) returns boolean{ 
    return SaveHashtableHandle(table322, missionKey277, key230, whichHashtable167)
}


function SaveHashtableHandle(hashtable table107, integer parentKey916, integer childKey187, hashtable whichHashtable116) returns boolean{ 
}


function SaveAgentHandleBJ(agent whichAgent124, integer key145, integer missionKey271, hashtable table256) returns boolean{ 
    return SaveAgentHandle(table256, missionKey271, key145, whichAgent124)
}


function SaveAgentHandle(hashtable table282, integer parentKey958, integer childKey282, agent whichAgent284) returns boolean{ 
}


function SaveFogModifierHandleBJ(fogmodifier whichFogModifier107, integer key225, integer missionKey130, hashtable table588) returns boolean{ 
    return SaveFogModifierHandle(table588, missionKey130, key225, whichFogModifier107)
}


function SaveFogModifierHandle(hashtable table641, integer parentKey269, integer childKey295, fogmodifier whichFogModifier233) returns boolean{ 
}


function SaveFogStateHandleBJ(fogstate whichFogState207, integer key827, integer missionKey138, hashtable table893) returns boolean{ 
    return SaveFogStateHandle(table893, missionKey138, key827, whichFogState207)
}


function SaveFogStateHandle(hashtable table129, integer parentKey914, integer childKey194, fogstate whichFogState648) returns boolean{ 
}


function SaveRegionHandleBJ(region whichRegion283, integer key281, integer missionKey235, hashtable table311) returns boolean{ 
    return SaveRegionHandle(table311, missionKey235, key281, whichRegion283)
}


function SaveRegionHandle(hashtable table153, integer parentKey234, integer childKey218, region whichRegion312) returns boolean{ 
}


function SaveUbersplatHandleBJ(ubersplat whichUbersplat176, integer key216, integer missionKey233, hashtable table227) returns boolean{ 
    return SaveUbersplatHandle(table227, missionKey233, key216, whichUbersplat176)
}


function SaveUbersplatHandle(hashtable table192, integer parentKey118, integer childKey297, ubersplat whichUbersplat521) returns boolean{ 
}


function SaveImageHandleBJ(image whichImage234, integer key137, integer missionKey234, hashtable table270) returns boolean{ 
    return SaveImageHandle(table270, missionKey234, key137, whichImage234)
}


function SaveImageHandle(hashtable table302, integer parentKey230, integer childKey421, image whichImage225) returns boolean{ 
}


function SaveLightningHandleBJ(lightning whichLightning809, integer key286, integer missionKey172, hashtable table276) returns boolean{ 
    return SaveLightningHandle(table276, missionKey172, key286, whichLightning809)
}


function SaveLightningHandle(hashtable table165, integer parentKey153, integer childKey249, lightning whichLightning216) returns boolean{ 
}


function SaveTextTagHandleBJ(texttag whichTexttag270, integer key259, integer missionKey986, hashtable table757) returns boolean{ 
    return SaveTextTagHandle(table757, missionKey986, key259, whichTexttag270)
}


function SaveTextTagHandle(hashtable table315, integer parentKey142, integer childKey314, texttag whichTexttag268) returns boolean{ 
}


function SaveButtonHandleBJ(button whichButton308, integer key207, integer missionKey470, hashtable table354) returns boolean{ 
    return SaveButtonHandle(table354, missionKey470, key207, whichButton308)
}


function SaveButtonHandle(hashtable table257, integer parentKey123, integer childKey133, button whichButton258) returns boolean{ 
}


function SaveDialogHandleBJ(dialog whichDialog823, integer key828, integer missionKey124, hashtable table244) returns boolean{ 
    return SaveDialogHandle(table244, missionKey124, key828, whichDialog823)
}


function SaveDialogHandle(hashtable table504, integer parentKey280, integer childKey256, dialog whichDialog122) returns boolean{ 
}


function SaveTrackableHandleBJ(trackable whichTrackable286, integer key511, integer missionKey140, hashtable table328) returns boolean{ 
    return SaveTrackableHandle(table328, missionKey140, key511, whichTrackable286)
}


function SaveTrackableHandle(hashtable table155, integer parentKey107, integer childKey979, trackable whichTrackable240) returns boolean{ 
}


function SaveMultiboardItemHandleBJ(multiboarditem whichMultiboarditem102, integer key114, integer missionKey796, hashtable table297) returns boolean{ 
    return SaveMultiboardItemHandle(table297, missionKey796, key114, whichMultiboarditem102)
}


function SaveMultiboardItemHandle(hashtable table270, integer parentKey215, integer childKey284, multiboarditem whichMultiboarditem278) returns boolean{ 
}


function SaveMultiboardHandleBJ(multiboard whichMultiboard194, integer key206, integer missionKey236, hashtable table286) returns boolean{ 
    return SaveMultiboardHandle(table286, missionKey236, key206, whichMultiboard194)
}


function SaveMultiboardHandle(hashtable table538, integer parentKey175, integer childKey226, multiboard whichMultiboard981) returns boolean{ 
}


function SaveLeaderboardHandleBJ(leaderboard whichLeaderboard189, integer key348, integer missionKey101, hashtable table222) returns boolean{ 
    return SaveLeaderboardHandle(table222, missionKey101, key348, whichLeaderboard189)
}


function SaveLeaderboardHandle(hashtable table219, integer parentKey133, integer childKey273, leaderboard whichLeaderboard645) returns boolean{ 
}


function SaveTimerDialogHandleBJ(timerdialog whichTimerdialog226, integer key831, integer missionKey316, hashtable table213) returns boolean{ 
    return SaveTimerDialogHandle(table213, missionKey316, key831, whichTimerdialog226)
}


function SaveTimerDialogHandle(hashtable table160, integer parentKey610, integer childKey309, timerdialog whichTimerdialog161) returns boolean{ 
}


function SaveDefeatConditionHandleBJ(defeatcondition whichDefeatcondition334, integer key831, integer missionKey506, hashtable table185) returns boolean{ 
    return SaveDefeatConditionHandle(table185, missionKey506, key831, whichDefeatcondition334)
}


function SaveDefeatConditionHandle(hashtable table386, integer parentKey985, integer childKey281, defeatcondition whichDefeatcondition172) returns boolean{ 
}


function SaveQuestItemHandleBJ(questitem whichQuestitem828, integer key166, integer missionKey242, hashtable table286) returns boolean{ 
    return SaveQuestItemHandle(table286, missionKey242, key166, whichQuestitem828)
}


function SaveQuestItemHandle(hashtable table206, integer parentKey755, integer childKey295, questitem whichQuestitem279) returns boolean{ 
}


function SaveQuestHandleBJ(quest whichQuest200, integer key275, integer missionKey666, hashtable table115) returns boolean{ 
    return SaveQuestHandle(table115, missionKey666, key275, whichQuest200)
}


function SaveQuestHandle(hashtable table246, integer parentKey318, integer childKey164, quest whichQuest186) returns boolean{ 
}


function SaveItemPoolHandleBJ(itempool whichItempool319, integer key163, integer missionKey881, hashtable table120) returns boolean{ 
    return SaveItemPoolHandle(table120, missionKey881, key163, whichItempool319)
}


function SaveItemPoolHandle(hashtable table221, integer parentKey345, integer childKey254, itempool whichItempool334) returns boolean{ 
}


function SaveUnitPoolHandleBJ(unitpool whichUnitpool144, integer key263, integer missionKey160, hashtable table182) returns boolean{ 
    return SaveUnitPoolHandle(table182, missionKey160, key263, whichUnitpool144)
}


function SaveUnitPoolHandle(hashtable table171, integer parentKey253, integer childKey601, unitpool whichUnitpool252) returns boolean{ 
}


function SaveEffectHandleBJ(effect whichEffect920, integer key263, integer missionKey239, hashtable table293) returns boolean{ 
    return SaveEffectHandle(table293, missionKey239, key263, whichEffect920)
}


function SaveEffectHandle(hashtable table379, integer parentKey289, integer childKey791, effect whichEffect282) returns boolean{ 
}


function SaveSoundHandleBJ(sound whichSound178, integer key683, integer missionKey654, hashtable table312) returns boolean{ 
    return SaveSoundHandle(table312, missionKey654, key683, whichSound178)
}


function SaveSoundHandle(hashtable table143, integer parentKey162, integer childKey579, sound whichSound475) returns boolean{ 
}


function SaveBooleanExprHandleBJ(boolexpr whichBoolexpr936, integer key744, integer missionKey152, hashtable table692) returns boolean{ 
    return SaveBooleanExprHandle(table692, missionKey152, key744, whichBoolexpr936)
}


function SaveBooleanExprHandle(hashtable table100, integer parentKey117, integer childKey304, boolexpr whichBoolexpr276) returns boolean{ 
}


function SaveRectHandleBJ(rect whichRect296, integer key132, integer missionKey265, hashtable table327) returns boolean{ 
    return SaveRectHandle(table327, missionKey265, key132, whichRect296)
}


function SaveRectHandle(hashtable table181, integer parentKey345, integer childKey118, rect whichRect273) returns boolean{ 
}


function SaveLocationHandleBJ(location whichLocation113, integer key149, integer missionKey254, hashtable table259) returns boolean{ 
    return SaveLocationHandle(table259, missionKey254, key149, whichLocation113)
}


function SaveLocationHandle(hashtable table209, integer parentKey175, integer childKey319, location whichLocation135) returns boolean{ 
}


function SaveGroupHandleBJ(group whichGroup254, integer key680, integer missionKey270, hashtable table196) returns boolean{ 
    return SaveGroupHandle(table196, missionKey270, key680, whichGroup254)
}


function SaveGroupHandle(hashtable table186, integer parentKey492, integer childKey170, group whichGroup252) returns boolean{ 
}


function SaveForceHandleBJ(force whichForce167, integer key324, integer missionKey297, hashtable table871) returns boolean{ 
    return SaveForceHandle(table871, missionKey297, key324, whichForce167)
}


function SaveForceHandle(hashtable table234, integer parentKey267, integer childKey633, force whichForce326) returns boolean{ 
}


function SaveTriggerEventHandleBJ(event whichEvent213, integer key253, integer missionKey270, hashtable table301) returns boolean{ 
    return SaveTriggerEventHandle(table301, missionKey270, key253, whichEvent213)
}


function SaveTriggerEventHandle(hashtable table595, integer parentKey160, integer childKey274, event whichEvent563) returns boolean{ 
}


function SaveTriggerActionHandleBJ(triggeraction whichTriggeraction310, integer key258, integer missionKey278, hashtable table481) returns boolean{ 
    return SaveTriggerActionHandle(table481, missionKey278, key258, whichTriggeraction310)
}


function SaveTriggerActionHandle(hashtable table603, integer parentKey723, integer childKey121, triggeraction whichTriggeraction148) returns boolean{ 
}


function SaveTriggerConditionHandleBJ(triggercondition whichTriggercondition600, integer key325, integer missionKey246, hashtable table198) returns boolean{ 
    return SaveTriggerConditionHandle(table198, missionKey246, key325, whichTriggercondition600)
}


function SaveTriggerConditionHandle(hashtable table140, integer parentKey219, integer childKey889, triggercondition whichTriggercondition323) returns boolean{ 
}


function SaveTriggerHandleBJ(trigger whichTrigger460, integer key212, integer missionKey353, hashtable table290) returns boolean{ 
    return SaveTriggerHandle(table290, missionKey353, key212, whichTrigger460)
}


function SaveTriggerHandle(hashtable table181, integer parentKey270, integer childKey159, trigger whichTrigger152) returns boolean{ 
}


function SaveTimerHandleBJ(timer whichTimer111, integer key646, integer missionKey289, hashtable table262) returns boolean{ 
    return SaveTimerHandle(table262, missionKey289, key646, whichTimer111)
}


function SaveTimerHandle(hashtable table308, integer parentKey164, integer childKey230, timer whichTimer782) returns boolean{ 
}


function SaveAbilityHandleBJ(ability whichAbility575, integer key328, integer missionKey272, hashtable table200) returns boolean{ 
    return SaveAbilityHandle(table200, missionKey272, key328, whichAbility575)
}


function SaveAbilityHandle(hashtable table174, integer parentKey262, integer childKey115, ability whichAbility148) returns boolean{ 
}


function SaveUnitHandleBJ(unit whichUnit255, integer key928, integer missionKey183, hashtable table231) returns boolean{ 
    return SaveUnitHandle(table231, missionKey183, key928, whichUnit255)
}


function SaveUnitHandle(hashtable table254, integer parentKey910, integer childKey220, unit whichUnit842) returns boolean{ 
}


function SaveItemHandleBJ(item whichItem189, integer key240, integer missionKey219, hashtable table268) returns boolean{ 
    return SaveItemHandle(table268, missionKey219, key240, whichItem189)
}


function SaveItemHandle(hashtable table225, integer parentKey860, integer childKey124, item whichItem202) returns boolean{ 
}


function SaveDestructableHandleBJ(destructable whichDestructable284, integer key994, integer missionKey259, hashtable table245) returns boolean{ 
    return SaveDestructableHandle(table245, missionKey259, key994, whichDestructable284)
}


function SaveDestructableHandle(hashtable table989, integer parentKey236, integer childKey128, destructable whichDestructable289) returns boolean{ 
}


function SaveWidgetHandleBJ(widget whichWidget129, integer key102, integer missionKey318, hashtable table388) returns boolean{ 
    return SaveWidgetHandle(table388, missionKey318, key102, whichWidget129)
}


function SaveWidgetHandle(hashtable table143, integer parentKey209, integer childKey180, widget whichWidget169) returns boolean{ 
}


function SavePlayerHandleBJ(player whichPlayer286, integer key136, integer missionKey289, hashtable table131) returns boolean{ 
    return SavePlayerHandle(table131, missionKey289, key136, whichPlayer286)
}


function SavePlayerHandle(hashtable table237, integer parentKey266, integer childKey204, player whichPlayer144) returns boolean{ 
}


function SaveStringBJ(string value109, integer key869, integer missionKey295, hashtable table757) returns boolean{ 
    return SaveStr(table757, missionKey295, key869, value109)
}


function SaveStr(hashtable table256, integer parentKey221, integer childKey179, string value175) returns boolean{ 
}


function SaveBooleanBJ(boolean value202, integer key940, integer missionKey249, hashtable table111) returns void{ 
    SaveBoolean(table111, missionKey249, key940, value202)
}


function SaveBoolean(hashtable table199, integer parentKey268, integer childKey122, boolean value241) returns void{ 
}


function SaveIntegerBJ(integer value160, integer key905, integer missionKey344, hashtable table127) returns void{ 
    SaveInteger(table127, missionKey344, key905, value160)
}


function SaveInteger(hashtable table209, integer parentKey830, integer childKey271, integer value152) returns void{ 
}


function SaveRealBJ(real value153, integer key326, integer missionKey180, hashtable table237) returns void{ 
    SaveReal(table237, missionKey180, key326, value153)
}


function SaveReal(hashtable table234, integer parentKey511, integer childKey115, real value743) returns void{ 
}


function StoreUnitBJ(unit whichUnit212, string key312, string missionKey425, gamecache cache275) returns boolean{ 
    return StoreUnit(cache275, missionKey425, key312, whichUnit212)
}


function StoreUnit(gamecache cache146, string missionKey234, string key308, unit whichUnit207) returns boolean{ 
}


function StoreStringBJ(string value262, string key230, string missionKey291, gamecache cache311) returns boolean{ 
    return StoreString(cache311, missionKey291, key230, value262)
}


function StoreString(gamecache cache412, string missionKey252, string key309, string value293) returns boolean{ 
}


function StoreBooleanBJ(boolean value788, string key126, string missionKey241, gamecache cache260) returns void{ 
    StoreBoolean(cache260, missionKey241, key126, value788)
}


function StoreBoolean(gamecache cache390, string missionKey490, string key253, boolean value909) returns void{ 
}


function StoreIntegerBJ(integer value135, string key163, string missionKey213, gamecache cache229) returns void{ 
    StoreInteger(cache229, missionKey213, key163, value135)
}


function StoreInteger(gamecache cache183, string missionKey114, string key271, integer value387) returns void{ 
}


function StoreRealBJ(real value772, string key312, string missionKey170, gamecache cache188) returns void{ 
    StoreReal(cache188, missionKey170, key312, value772)
}


function StoreReal(gamecache cache132, string missionKey966, string key134, real value105) returns void{ 
}


function GetLastCreatedHashtableBJ() returns hashtable{ 
    return bj_lastCreatedHashtable157
}


function InitHashtableBJ() returns hashtable{ 
    bj_lastCreatedHashtable157 = InitHashtable()
    return bj_lastCreatedHashtable157
}


function InitHashtable() returns hashtable{ 
}


function GetLastCreatedGameCacheBJ() returns gamecache{ 
    return bj_lastCreatedGameCache666
}


function SaveGameCacheBJ(gamecache cache690) returns boolean{ 
    return SaveGameCache(cache690)
}


function SaveGameCache(gamecache whichCache201) returns boolean{ 
}


function InitGameCacheBJ(string campaignFile387) returns gamecache{ 
    bj_lastCreatedGameCache666 = InitGameCache(campaignFile387)
    return bj_lastCreatedGameCache666
}


function InitGameCache(string campaignFile419) returns gamecache{ 
}


function SetCinematicAvailableBJ(boolean available856, integer cinematicIndex313) returns void{ 
    if (cinematicIndex313 == bj_CINEMATICINDEX_TOP287){
        SetOpCinematicAvailable(bj_CAMPAIGN_INDEX_T200, available856)
        PlayCinematic("TutorialOp")
    } else {
        if (cinematicIndex313 == bj_CINEMATICINDEX_HOP159){
            SetOpCinematicAvailable(bj_CAMPAIGN_INDEX_H310, available856)
            PlayCinematic("HumanOp")
        } else {
            if (cinematicIndex313 == bj_CINEMATICINDEX_HED317){
                SetEdCinematicAvailable(bj_CAMPAIGN_INDEX_H310, available856)
                PlayCinematic("HumanEd")
            } else {
                if (cinematicIndex313 == bj_CINEMATICINDEX_OOP847){
                    SetOpCinematicAvailable(bj_CAMPAIGN_INDEX_O735, available856)
                    PlayCinematic("OrcOp")
                } else {
                    if (cinematicIndex313 == bj_CINEMATICINDEX_OED268){
                        SetEdCinematicAvailable(bj_CAMPAIGN_INDEX_O735, available856)
                        PlayCinematic("OrcEd")
                    } else {
                        if (cinematicIndex313 == bj_CINEMATICINDEX_UOP258){
                            SetEdCinematicAvailable(bj_CAMPAIGN_INDEX_U111, available856)
                            PlayCinematic("UndeadOp")
                        } else {
                            if (cinematicIndex313 == bj_CINEMATICINDEX_UED201){
                                SetEdCinematicAvailable(bj_CAMPAIGN_INDEX_U111, available856)
                                PlayCinematic("UndeadEd")
                            } else {
                                if (cinematicIndex313 == bj_CINEMATICINDEX_NOP247){
                                    SetEdCinematicAvailable(bj_CAMPAIGN_INDEX_N833, available856)
                                    PlayCinematic("NightElfOp")
                                } else {
                                    if (cinematicIndex313 == bj_CINEMATICINDEX_NED789){
                                        SetEdCinematicAvailable(bj_CAMPAIGN_INDEX_N833, available856)
                                        PlayCinematic("NightElfEd")
                                    } else {
                                        if (cinematicIndex313 == bj_CINEMATICINDEX_XOP208){
                                            SetOpCinematicAvailable(bj_CAMPAIGN_OFFSET_XN312, available856)
                                            PlayCinematic("IntroX")
                                        } else {
                                            if (cinematicIndex313 == bj_CINEMATICINDEX_XED314){
                                                SetEdCinematicAvailable(bj_CAMPAIGN_OFFSET_XU125, available856)
                                                PlayCinematic("OutroX")
                                            } else {
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}


function SetOpCinematicAvailable(integer campaignNumber103, boolean available200) returns void{ 
}


function PlayCinematic(string movieName115) returns void{ 
}


function SetEdCinematicAvailable(integer campaignNumber329, boolean available257) returns void{ 
}


function SetCampaignAvailableBJ(boolean available164, integer campaignNumber838) returns void{ 
    local integer campaignOffset264
    null
    if (campaignNumber838 == bj_CAMPAIGN_INDEX_H310){
        SetTutorialCleared(true)
    } else {
    }
    if (campaignNumber838 == bj_CAMPAIGN_INDEX_XN158){
        campaignOffset264 = bj_CAMPAIGN_OFFSET_XN312
    } else {
        if (campaignNumber838 == bj_CAMPAIGN_INDEX_XH703){
            campaignOffset264 = bj_CAMPAIGN_OFFSET_XH328
        } else {
            if (campaignNumber838 == bj_CAMPAIGN_INDEX_XU121){
                campaignOffset264 = bj_CAMPAIGN_OFFSET_XU125
            } else {
                if (campaignNumber838 == bj_CAMPAIGN_INDEX_XO122){
                    campaignOffset264 = bj_CAMPAIGN_OFFSET_XO228
                } else {
                    campaignOffset264 = campaignNumber838
                }
            }
        }
    }
    SetCampaignAvailable(campaignOffset264, available164)
    SetCampaignMenuRaceBJ(campaignNumber838)
    ForceCampaignSelectScreen()
}


function SetTutorialCleared(boolean cleared260) returns void{ 
}


function SetCampaignAvailable(integer campaignNumber261, boolean available214) returns void{ 
}


function SetCampaignMenuRaceBJ(integer campaignNumber201) returns void{ 
    if (campaignNumber201 == bj_CAMPAIGN_INDEX_T200){
        SetCampaignMenuRace(RACE_OTHER195)
    } else {
        if (campaignNumber201 == bj_CAMPAIGN_INDEX_H310){
            SetCampaignMenuRace(RACE_HUMAN325)
        } else {
            if (campaignNumber201 == bj_CAMPAIGN_INDEX_U111){
                SetCampaignMenuRace(RACE_UNDEAD228)
            } else {
                if (campaignNumber201 == bj_CAMPAIGN_INDEX_O735){
                    SetCampaignMenuRace(RACE_ORC150)
                } else {
                    if (campaignNumber201 == bj_CAMPAIGN_INDEX_N833){
                        SetCampaignMenuRace(RACE_NIGHTELF229)
                    } else {
                        if (campaignNumber201 == bj_CAMPAIGN_INDEX_XN158){
                            SetCampaignMenuRaceEx(bj_CAMPAIGN_OFFSET_XN312)
                        } else {
                            if (campaignNumber201 == bj_CAMPAIGN_INDEX_XH703){
                                SetCampaignMenuRaceEx(bj_CAMPAIGN_OFFSET_XH328)
                            } else {
                                if (campaignNumber201 == bj_CAMPAIGN_INDEX_XU121){
                                    SetCampaignMenuRaceEx(bj_CAMPAIGN_OFFSET_XU125)
                                } else {
                                    if (campaignNumber201 == bj_CAMPAIGN_INDEX_XO122){
                                        SetCampaignMenuRaceEx(bj_CAMPAIGN_OFFSET_XO228)
                                    } else {
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}


function ForceCampaignSelectScreen() returns void{ 
}


function SetMissionAvailableBJ(boolean available659, integer missionIndex152) returns void{ 
    local integer campaignNumber299
    local integer missionNumber276
    campaignNumber299 = (missionIndex152 / 1000)
    missionNumber276 = (missionIndex152 - (campaignNumber299 * 1000))
    SetMissionAvailable(campaignNumber299, missionNumber276, available659)
}


function SetMissionAvailable(integer campaignNumber178, integer missionNumber692, boolean available867) returns void{ 
}


function SetCampaignMenuRace(race r190) returns void{ 
}


function SetCampaignMenuRaceEx(integer campaignIndex514) returns void{ 
}


function SetPlayerAbilityAvailableBJ(boolean avail349, integer abilid589, player whichPlayer391) returns void{ 
    SetPlayerAbilityAvailable(whichPlayer391, abilid589, avail349)
}


function SetPlayerAbilityAvailable(player whichPlayer290, integer abilid303, boolean avail652) returns void{ 
}


function GetPlayerTechMaxAllowedSwap(integer techid479, player whichPlayer296) returns integer{ 
    return GetPlayerTechMaxAllowed(whichPlayer296, techid479)
}


function GetPlayerTechCountSimple(integer techid552, player whichPlayer274) returns integer{ 
    return GetPlayerTechCount(whichPlayer274, techid552, true)
}


function GetPlayerTechCount(player whichPlayer170, integer techid535, boolean specificonly175) returns integer{ 
}


function SetPlayerTechMaxAllowedSwap(integer techid130, integer maximum272, player whichPlayer267) returns void{ 
    SetPlayerTechMaxAllowed(whichPlayer267, techid130, maximum272)
}


function SetPlayerTechResearchedSwap(integer techid332, integer levels556, player whichPlayer196) returns void{ 
    SetPlayerTechResearched(whichPlayer196, techid332, levels556)
}


function SetPlayerTechResearched(player whichPlayer315, integer techid150, integer setToLevel144) returns void{ 
}


function TryInitRescuableTriggersBJ() returns void{ 
    local integer index151
    null
    if (bj_rescueUnitBehavior200 == null){
        bj_rescueUnitBehavior200 = CreateTrigger()
        index151 = 0
        loop {
            TriggerRegisterPlayerUnitEvent(bj_rescueUnitBehavior200, Player(index151), EVENT_PLAYER_UNIT_RESCUED145, null)
            index151 = (index151 + 1)
            exitwhen (index151 == bj_MAX_PLAYER_SLOTS561)
        }
        TriggerAddAction(bj_rescueUnitBehavior200, function TriggerActionUnitRescuedBJ)
    } else {
    }
}


function MakeUnitRescuableToForceBJ(unit whichUnit156, boolean isRescuable249, force whichForce168) returns void{ 
    bj_makeUnitRescuableUnit155 = whichUnit156
    bj_makeUnitRescuableFlag183 = isRescuable249
    ForForce(whichForce168, function MakeUnitRescuableToForceBJEnum)
}


function MakeUnitRescuableToForceBJEnum() returns void{ 
    TryInitRescuableTriggersBJ()
    SetUnitRescuable(bj_makeUnitRescuableUnit155, GetEnumPlayer(), bj_makeUnitRescuableFlag183)
}


function SetUnitRescuable(unit whichUnit272, player byWhichPlayer281, boolean flag276) returns void{ 
}


function SetRescueBuildingColorChangeBJ(boolean changeColor287) returns void{ 
    bj_rescueChangeColorBldg177 = changeColor287
}


function SetRescueUnitColorChangeBJ(boolean changeColor852) returns void{ 
    bj_rescueChangeColorUnit197 = changeColor852
}


function TriggerActionUnitRescuedBJ() returns void{ 
    local unit theUnit225
    theUnit225 = GetTriggerUnit()
    if IsUnitType(theUnit225, UNIT_TYPE_STRUCTURE100){
        RescueUnitBJ(theUnit225, GetOwningPlayer(GetRescuer()), bj_rescueChangeColorBldg177)
    } else {
        RescueUnitBJ(theUnit225, GetOwningPlayer(GetRescuer()), bj_rescueChangeColorUnit197)
    }
}


function GetTriggerUnit() returns unit{ 
}


function GetRescuer() returns unit{ 
}


function RescueUnitBJ(unit whichUnit160, player rescuer230, boolean changeColor221) returns void{ 
    if (IsUnitDeadBJ(whichUnit160) or (GetOwningPlayer(whichUnit160) == rescuer230)){
        return %nothing%
    } else {
    }
    StartSound(bj_rescueSound181)
    SetUnitOwner(whichUnit160, rescuer230, changeColor221)
    UnitAddIndicator(whichUnit160, 0, 255, 0, 255)
    PingMinimapForPlayer(rescuer230, GetUnitX(whichUnit160), GetUnitY(whichUnit160), bj_RESCUE_PING_TIME143)
}


function IsUnitDeadBJ(unit whichUnit254) returns boolean{ 
    return (GetUnitState(whichUnit254, UNIT_STATE_LIFE243) <= 0.)
}


function SetUnitOwner(unit whichUnit124, player whichPlayer137, boolean changeColor334) returns void{ 
}


function UnitAddIndicator(unit whichUnit127, integer red202, integer green124, integer blue127, integer alpha143) returns void{ 
}


function PingMinimapForPlayer(player whichPlayer701, real x274, real y155, real duration673) returns void{ 
    if (GetLocalPlayer() == whichPlayer701){
        PingMinimap(x274, y155, duration673)
    } else {
    }
}


function CinematicFilterGenericBJ(real duration963, blendmode bmode732, string tex222, real red0208, real green0873, real blue0289, real trans0396, real red1149, real green1206, real blue1102, real trans1320) returns void{ 
    AbortCinematicFadeBJ()
    SetCineFilterTexture(tex222)
    SetCineFilterBlendMode(bmode732)
    SetCineFilterTexMapFlags(TEXMAP_FLAG_NONE174)
    SetCineFilterStartUV(0., 0., 1., 1.)
    SetCineFilterEndUV(0., 0., 1., 1.)
    SetCineFilterStartColor(PercentTo255(red0208), PercentTo255(green0873), PercentTo255(blue0289), PercentTo255((100. - trans0396)))
    SetCineFilterEndColor(PercentTo255(red1149), PercentTo255(green1206), PercentTo255(blue1102), PercentTo255((100. - trans1320)))
    SetCineFilterDuration(duration963)
    DisplayCineFilter(true)
}


function AbortCinematicFadeBJ() returns void{ 
    if (bj_cineFadeContinueTimer287 != null){
        DestroyTimer(bj_cineFadeContinueTimer287)
    } else {
    }
    if (bj_cineFadeFinishTimer202 != null){
        DestroyTimer(bj_cineFadeFinishTimer202)
    } else {
    }
}


function SetCineFilterTexture(string filename503) returns void{ 
}


function SetCineFilterBlendMode(blendmode whichMode274) returns void{ 
}


function SetCineFilterTexMapFlags(texmapflags whichFlags240) returns void{ 
}


function SetCineFilterStartUV(real minu170, real minv636, real maxu202, real maxv298) returns void{ 
}


function SetCineFilterEndUV(real minu966, real minv594, real maxu568, real maxv108) returns void{ 
}


function PercentTo255(real percentage115) returns integer{ 
    return PercentToInt(percentage115, 255)
}


function SetCineFilterStartColor(integer red138, integer green803, integer blue197, integer alpha320) returns void{ 
}


function SetCineFilterEndColor(integer red649, integer green180, integer blue283, integer alpha301) returns void{ 
}


function SetCineFilterDuration(real duration136) returns void{ 
}


function DisplayCineFilter(boolean flag156) returns void{ 
}


function CinematicFadeBJ(integer fadetype408, real duration985, string tex105, real red629, real green200, real blue234, real trans134) returns void{ 
    if (fadetype408 == bj_CINEFADETYPE_FADEOUT264){
        AbortCinematicFadeBJ()
        CinematicFadeCommonBJ(red629, green200, blue234, duration985, tex105, 100., trans134)
    } else {
        if (fadetype408 == bj_CINEFADETYPE_FADEIN155){
            AbortCinematicFadeBJ()
            CinematicFadeCommonBJ(red629, green200, blue234, duration985, tex105, trans134, 100.)
            FinishCinematicFadeAfterBJ(duration985)
        } else {
            if (fadetype408 == bj_CINEFADETYPE_FADEOUTIN115){
                if (duration985 > 0.){
                    AbortCinematicFadeBJ()
                    CinematicFadeCommonBJ(red629, green200, blue234, (duration985 * 0.5), tex105, 100., trans134)
                    ContinueCinematicFadeAfterBJ((duration985 * 0.5), red629, green200, blue234, trans134, tex105)
                    FinishCinematicFadeAfterBJ(duration985)
                } else {
                }
            } else {
            }
        }
    }
}


function CinematicFadeCommonBJ(real red117, real green311, real blue266, real duration209, string tex172, real startTrans110, real endTrans118) returns void{ 
    if (duration209 == 0.){
        startTrans110 = endTrans118
    } else {
    }
    EnableUserUI(false)
    SetCineFilterTexture(tex172)
    SetCineFilterBlendMode(BLEND_MODE_BLEND108)
    SetCineFilterTexMapFlags(TEXMAP_FLAG_NONE174)
    SetCineFilterStartUV(0., 0., 1., 1.)
    SetCineFilterEndUV(0., 0., 1., 1.)
    SetCineFilterStartColor(PercentTo255(red117), PercentTo255(green311), PercentTo255(blue266), PercentTo255((100. - startTrans110)))
    SetCineFilterEndColor(PercentTo255(red117), PercentTo255(green311), PercentTo255(blue266), PercentTo255((100. - endTrans118)))
    SetCineFilterDuration(duration209)
    DisplayCineFilter(true)
}


function FinishCinematicFadeAfterBJ(real duration210) returns void{ 
    bj_cineFadeFinishTimer202 = CreateTimer()
    TimerStart(bj_cineFadeFinishTimer202, duration210, false, function FinishCinematicFadeBJ)
}


function ContinueCinematicFadeAfterBJ(real duration151, real red379, real green225, real blue932, real trans998, string tex148) returns void{ 
    bj_cineFadeContinueRed218 = red379
    bj_cineFadeContinueGreen519 = green225
    bj_cineFadeContinueBlue692 = blue932
    bj_cineFadeContinueTrans484 = trans998
    bj_cineFadeContinueDuration184 = duration151
    bj_cineFadeContinueTex133 = tex148
    bj_cineFadeContinueTimer287 = CreateTimer()
    TimerStart(bj_cineFadeContinueTimer287, duration151, false, function ContinueCinematicFadeBJ)
}


function ContinueCinematicFadeBJ() returns void{ 
    DestroyTimer(bj_cineFadeContinueTimer287)
    bj_cineFadeContinueTimer287 = null
    CinematicFadeCommonBJ(bj_cineFadeContinueRed218, bj_cineFadeContinueGreen519, bj_cineFadeContinueBlue692, bj_cineFadeContinueDuration184, bj_cineFadeContinueTex133, bj_cineFadeContinueTrans484, 100.)
}


function FinishCinematicFadeBJ() returns void{ 
    DestroyTimer(bj_cineFadeFinishTimer202)
    bj_cineFadeFinishTimer202 = null
    DisplayCineFilter(false)
    EnableUserUI(true)
}


function EnableUserUI(boolean b439) returns void{ 
}


function DisplayCineFilterBJ(boolean flag146) returns void{ 
    DisplayCineFilter(flag146)
}


function CinematicModeBJ(boolean cineMode130, force forForce221) returns void{ 
    CinematicModeExBJ(cineMode130, forForce221, bj_CINEMODE_INTERFACEFADE207)
}


function CinematicModeExBJ(boolean cineMode156, force forForce287, real interfaceFadeTime231) returns void{ 
    if (not bj_gameStarted254){
        interfaceFadeTime231 = 0.
    } else {
    }
    if cineMode156{
        if (not bj_cineModeAlreadyIn191){
            bj_cineModeAlreadyIn191 = true
            bj_cineModePriorSpeed277 = GetGameSpeed()
            bj_cineModePriorFogSetting182 = IsFogEnabled()
            bj_cineModePriorMaskSetting292 = IsFogMaskEnabled()
            bj_cineModePriorDawnDusk122 = IsDawnDuskEnabled()
            bj_cineModeSavedSeed259 = GetRandomInt(0, 1000000)
        } else {
        }
        if IsPlayerInForce(GetLocalPlayer(), forForce287){
            ClearTextMessages()
            ShowInterface(false, interfaceFadeTime231)
            EnableUserControl(false)
            EnableOcclusion(false)
            SetCineModeVolumeGroupsBJ()
        } else {
        }
        SetGameSpeed(bj_CINEMODE_GAMESPEED758)
        SetMapFlag(MAP_LOCK_SPEED275, true)
        FogMaskEnable(false)
        FogEnable(false)
        EnableWorldFogBoundary(false)
        EnableDawnDusk(false)
        SetRandomSeed(0)
    } else {
        bj_cineModeAlreadyIn191 = false
        if IsPlayerInForce(GetLocalPlayer(), forForce287){
            ShowInterface(true, interfaceFadeTime231)
            EnableUserControl(true)
            EnableOcclusion(true)
            VolumeGroupReset()
            EndThematicMusic()
            CameraResetSmoothingFactorBJ()
        } else {
        }
        SetMapFlag(MAP_LOCK_SPEED275, false)
        SetGameSpeed(bj_cineModePriorSpeed277)
        FogMaskEnable(bj_cineModePriorMaskSetting292)
        FogEnable(bj_cineModePriorFogSetting182)
        EnableWorldFogBoundary(true)
        EnableDawnDusk(bj_cineModePriorDawnDusk122)
        SetRandomSeed(bj_cineModeSavedSeed259)
    }
}


function IsDawnDuskEnabled() returns boolean{ 
    return bj_useDawnDuskSounds259
}


function IsPlayerInForce(player whichPlayer878, force whichForce299) returns boolean{ 
}


function ClearTextMessages() returns void{ 
}


function ShowInterface(boolean flag174, real fadeDuration806) returns void{ 
}


function EnableUserControl(boolean b887) returns void{ 
}


function EnableOcclusion(boolean flag276) returns void{ 
}


function SetCineModeVolumeGroupsBJ() returns void{ 
    if bj_gameStarted254{
        SetCineModeVolumeGroupsImmediateBJ()
    } else {
        TimerStart(bj_volumeGroupsTimer114, bj_GAME_STARTED_THRESHOLD567, false, function SetCineModeVolumeGroupsImmediateBJ)
    }
}


function SetGameSpeed(gamespeed whichspeed236) returns void{ 
}


function FogMaskEnable(boolean enable176) returns void{ 
}


function FogEnable(boolean enable308) returns void{ 
}


function EnableWorldFogBoundary(boolean b210) returns void{ 
}


function EnableDawnDusk(boolean flag197) returns void{ 
    bj_useDawnDuskSounds259 = flag197
}


function SetRandomSeed(integer seed140) returns void{ 
}


function VolumeGroupReset() returns void{ 
}


function EndThematicMusic() returns void{ 
}


function CameraResetSmoothingFactorBJ() returns void{ 
    CameraSetSmoothingFactor(0.)
}


function ForceCinematicSubtitlesBJ(boolean flag238) returns void{ 
    ForceCinematicSubtitles(flag238)
}


function ForceCinematicSubtitles(boolean flag116) returns void{ 
}


function GetLastTransmissionDurationBJ() returns real{ 
    return bj_lastTransmissionDuration209
}


function TransmissionFromUnitTypeWithNameBJ(force toForce682, player fromPlayer290, integer unitId145, string unitName563, location loc257, sound soundHandle293, string message147, integer timeType933, real timeVal193, boolean wait213) returns void{ 
    TryInitCinematicBehaviorBJ()
    timeVal193 = RMaxBJ(timeVal193, 0.)
    bj_lastTransmissionDuration209 = GetTransmissionDuration(soundHandle293, timeType933, timeVal193)
    bj_lastPlayedSound153 = soundHandle293
    if IsPlayerInForce(GetLocalPlayer(), toForce682){
        DoTransmissionBasicsXYBJ(unitId145, GetPlayerColor(fromPlayer290), GetLocationX(loc257), GetLocationY(loc257), soundHandle293, unitName563, message147, bj_lastTransmissionDuration209)
    } else {
    }
    if (wait213 and (bj_lastTransmissionDuration209 > 0.)){
        WaitTransmissionDuration(soundHandle293, timeType933, timeVal193)
    } else {
    }
}


function TryInitCinematicBehaviorBJ() returns void{ 
    local integer index287
    null
    if (bj_cineSceneBeingSkipped173 == null){
        bj_cineSceneBeingSkipped173 = CreateTrigger()
        index287 = 0
        loop {
            TriggerRegisterPlayerEvent(bj_cineSceneBeingSkipped173, Player(index287), EVENT_PLAYER_END_CINEMATIC298)
            index287 = (index287 + 1)
            exitwhen (index287 == bj_MAX_PLAYERS803)
        }
        TriggerAddAction(bj_cineSceneBeingSkipped173, function CancelCineSceneBJ)
    } else {
    }
}


function RMaxBJ(real a331, real b103) returns real{ 
    if (a331 < b103){
        return b103
    } else {
        return a331
    }
}


function GetTransmissionDuration(sound soundHandle208, integer timeType890, real timeVal228) returns real{ 
    local real duration153
    null
    if (timeType890 == bj_TIMETYPE_ADD173){
        duration153 = (GetSoundDurationBJ(soundHandle208) + timeVal228)
    } else {
        if (timeType890 == bj_TIMETYPE_SET269){
            duration153 = timeVal228
        } else {
            if (timeType890 == bj_TIMETYPE_SUB280){
                duration153 = (GetSoundDurationBJ(soundHandle208) - timeVal228)
            } else {
                duration153 = GetSoundDurationBJ(soundHandle208)
            }
        }
    }
    if (duration153 < 0.){
        duration153 = 0.
    } else {
    }
    return duration153
}


function GetPlayerColor(player whichPlayer242) returns playercolor{ 
}


function DoTransmissionBasicsXYBJ(integer unitId573, playercolor color137, real x657, real y668, sound soundHandle108, string unitName235, string message155, real duration208) returns void{ 
    SetCinematicSceneBJ(soundHandle108, unitId573, color137, unitName235, message155, (duration208 + bj_TRANSMISSION_PORT_HANGTIME167), duration208)
    if (unitId573 != 0){
        PingMinimap(x657, y668, bj_TRANSMISSION_PING_TIME285)
    } else {
    }
}


function WaitTransmissionDuration(sound soundHandle228, integer timeType194, real timeVal236) returns void{ 
    if (timeType194 == bj_TIMETYPE_SET269){
        TriggerSleepAction(timeVal236)
    } else {
        if (soundHandle228 == null){
            TriggerSleepAction(bj_NOTHING_SOUND_DURATION203)
        } else {
            if (timeType194 == bj_TIMETYPE_SUB280){
                WaitForSoundBJ(soundHandle228, timeVal236)
            } else {
                if (timeType194 == bj_TIMETYPE_ADD173){
                    WaitForSoundBJ(soundHandle228, 0.)
                    TriggerSleepAction(timeVal236)
                } else {
                }
            }
        }
    }
}


function TransmissionFromUnitWithNameBJ(force toForce600, unit whichUnit166, string unitName198, sound soundHandle189, string message524, integer timeType115, real timeVal185, boolean wait141) returns void{ 
    TryInitCinematicBehaviorBJ()
    timeVal185 = RMaxBJ(timeVal185, 0.)
    bj_lastTransmissionDuration209 = GetTransmissionDuration(soundHandle189, timeType115, timeVal185)
    bj_lastPlayedSound153 = soundHandle189
    if IsPlayerInForce(GetLocalPlayer(), toForce600){
        if (whichUnit166 == null){
            DoTransmissionBasicsXYBJ(0, PLAYER_COLOR_RED676, 0., 0., soundHandle189, unitName198, message524, bj_lastTransmissionDuration209)
        } else {
            DoTransmissionBasicsXYBJ(GetUnitTypeId(whichUnit166), GetPlayerColor(GetOwningPlayer(whichUnit166)), GetUnitX(whichUnit166), GetUnitY(whichUnit166), soundHandle189, unitName198, message524, bj_lastTransmissionDuration209)
            if (not IsUnitHidden(whichUnit166)){
                UnitAddIndicator(whichUnit166, bj_TRANSMISSION_IND_RED147, bj_TRANSMISSION_IND_BLUE277, bj_TRANSMISSION_IND_GREEN184, bj_TRANSMISSION_IND_ALPHA301)
            } else {
            }
        }
    } else {
    }
    if (wait141 and (bj_lastTransmissionDuration209 > 0.)){
        WaitTransmissionDuration(soundHandle189, timeType115, timeVal185)
    } else {
    }
}


function IsUnitHidden(unit whichUnit599) returns boolean{ 
}


function SetCinematicSceneBJ(sound soundHandle552, integer portraitUnitId217, playercolor color243, string speakerTitle220, string text186, real sceneDuration450, real voiceoverDuration238) returns void{ 
    bj_cineSceneLastSound133 = soundHandle552
    PlaySoundBJ(soundHandle552)
    SetCinematicScene(portraitUnitId217, color243, speakerTitle220, text186, sceneDuration450, voiceoverDuration238)
}


function PingMinimap(real x160, real y332, real duration176) returns void{ 
}


function TriggerSleepAction(real timeout107) returns void{ 
}


function WaitForSoundBJ(sound soundHandle355, real offset807) returns void{ 
    TriggerWaitForSound(soundHandle355, offset807)
}


function GetSoundDurationBJ(sound soundHandle159) returns real{ 
    if (soundHandle159 == null){
        return bj_NOTHING_SOUND_DURATION203
    } else {
        return (I2R(GetSoundDuration(soundHandle159)) * 0.001)
    }
}


function PlaySoundBJ(sound soundHandle288) returns void{ 
    bj_lastPlayedSound153 = soundHandle288
    if (soundHandle288 != null){
        StartSound(soundHandle288)
    } else {
    }
}


function SetCinematicScene(integer portraitUnitId228, playercolor color132, string speakerTitle114, string text928, real sceneDuration321, real voiceoverDuration212) returns void{ 
}


function CancelCineSceneBJ() returns void{ 
    StopSoundBJ(bj_cineSceneLastSound133, true)
    EndCinematicScene()
}


function StopSoundBJ(sound soundHandle151, boolean fadeOut191) returns void{ 
    StopSound(soundHandle151, false, fadeOut191)
}


function EndCinematicScene() returns void{ 
}


function EnableOcclusionBJ(boolean enable326, force f290) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), f290){
        EnableOcclusion(enable326)
    } else {
    }
}


function EnableWorldFogBoundaryBJ(boolean enable752, force f135) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), f135){
        EnableWorldFogBoundary(enable752)
    } else {
    }
}


function PingMinimapLocForForceEx(force whichForce293, location loc128, real duration691, integer style143, real red147, real green315, real blue163) returns void{ 
    PingMinimapForForceEx(whichForce293, GetLocationX(loc128), GetLocationY(loc128), duration691, style143, red147, green315, blue163)
}


function PingMinimapForForceEx(force whichForce229, real x126, real y251, real duration165, integer style271, real red332, real green135, real blue297) returns void{ 
    local integer red255736
    local integer green255246
    local integer blue255662
    red255736 = PercentTo255(red332)
    green255246 = PercentTo255(green135)
    blue255662 = PercentTo255(blue297)
    if IsPlayerInForce(GetLocalPlayer(), whichForce229){
        if (((red255736 == 255) and (green255246 == 0)) and (blue255662 == 0)){
            red255736 = 254
        } else {
        }
        if (style271 == bj_MINIMAPPINGSTYLE_SIMPLE254){
            PingMinimapEx(x126, y251, duration165, red255736, green255246, blue255662, false)
        } else {
            if (style271 == bj_MINIMAPPINGSTYLE_FLASHY261){
                PingMinimapEx(x126, y251, duration165, red255736, green255246, blue255662, true)
            } else {
                if (style271 == bj_MINIMAPPINGSTYLE_ATTACK301){
                    PingMinimapEx(x126, y251, duration165, 255, 0, 0, false)
                } else {
                }
            }
        }
    } else {
    }
}


function PingMinimapEx(real x266, real y124, real duration488, integer red270, integer green948, integer blue136, boolean extraEffects219) returns void{ 
}


function PingMinimapLocForPlayer(player whichPlayer139, location loc100, real duration210) returns void{ 
    PingMinimapForPlayer(whichPlayer139, GetLocationX(loc100), GetLocationY(loc100), duration210)
}


function PingMinimapLocForForce(force whichForce207, location loc156, real duration190) returns void{ 
    PingMinimapForForce(whichForce207, GetLocationX(loc156), GetLocationY(loc156), duration190)
}


function PingMinimapForForce(force whichForce215, real x325, real y297, real duration177) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), whichForce215){
        PingMinimap(x325, y297, duration177)
    } else {
    }
}


function ShowInterfaceForceOff(force whichForce279, real fadeDuration425) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), whichForce279){
        ShowInterface(false, fadeDuration425)
    } else {
    }
}


function ShowInterfaceForceOn(force whichForce301, real fadeDuration235) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), whichForce301){
        ShowInterface(true, fadeDuration235)
    } else {
    }
}


function SetUserControlForceOff(force whichForce149) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), whichForce149){
        EnableUserControl(false)
    } else {
    }
}


function SetUserControlForceOn(force whichForce260) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), whichForce260){
        EnableUserControl(true)
    } else {
    }
}


function PauseGameOff() returns void{ 
    PauseGame(false)
}


function PauseGame(boolean flag329) returns void{ 
}


function PauseGameOn() returns void{ 
    PauseGame(true)
}


function GetLastCreatedTextTag() returns texttag{ 
    return bj_lastCreatedTextTag210
}


function ShowTextTagForceBJ(boolean show294, texttag tt164, force whichForce147) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), whichForce147){
        SetTextTagVisibility(tt164, show294)
    } else {
    }
}


function SetTextTagVisibility(texttag t798, boolean flag152) returns void{ 
}


function DestroyTextTagBJ(texttag tt207) returns void{ 
    DestroyTextTag(tt207)
}


function DestroyTextTag(texttag t296) returns void{ 
}


function CreateTextTagUnitBJ(string s320, unit whichUnit297, real zOffset111, real size823, real red235, real green676, real blue100, real transparency309) returns texttag{ 
    bj_lastCreatedTextTag210 = CreateTextTag()
    SetTextTagTextBJ(bj_lastCreatedTextTag210, s320, size823)
    SetTextTagPosUnitBJ(bj_lastCreatedTextTag210, whichUnit297, zOffset111)
    SetTextTagColorBJ(bj_lastCreatedTextTag210, red235, green676, blue100, transparency309)
    return bj_lastCreatedTextTag210
}


function CreateTextTag() returns texttag{ 
}


function SetTextTagTextBJ(texttag tt169, string s125, real size112) returns void{ 
    local real textHeight159
    textHeight159 = TextTagSize2Height(size112)
    SetTextTagText(tt169, s125, textHeight159)
}


function SetTextTagPosUnitBJ(texttag tt324, unit whichUnit121, real zOffset221) returns void{ 
    SetTextTagPosUnit(tt324, whichUnit121, zOffset221)
}


function SetTextTagColorBJ(texttag tt263, real red273, real green900, real blue117, real transparency164) returns void{ 
    SetTextTagColor(tt263, PercentTo255(red273), PercentTo255(green900), PercentTo255(blue117), PercentTo255((100.0 - transparency164)))
}


function CreateTextTagLocBJ(string s978, location loc100, real zOffset160, real size377, real red302, real green181, real blue177, real transparency620) returns texttag{ 
    bj_lastCreatedTextTag210 = CreateTextTag()
    SetTextTagTextBJ(bj_lastCreatedTextTag210, s978, size377)
    SetTextTagPosBJ(bj_lastCreatedTextTag210, loc100, zOffset160)
    SetTextTagColorBJ(bj_lastCreatedTextTag210, red302, green181, blue177, transparency620)
    return bj_lastCreatedTextTag210
}


function SetTextTagPosBJ(texttag tt247, location loc269, real zOffset280) returns void{ 
    SetTextTagPos(tt247, GetLocationX(loc269), GetLocationY(loc269), zOffset280)
}


function SetTextTagFadepointBJ(texttag tt188, real fadepoint250) returns void{ 
    SetTextTagFadepoint(tt188, fadepoint250)
}


function SetTextTagFadepoint(texttag t719, real fadepoint288) returns void{ 
}


function SetTextTagLifespanBJ(texttag tt890, real lifespan772) returns void{ 
    SetTextTagLifespan(tt890, lifespan772)
}


function SetTextTagLifespan(texttag t303, real lifespan792) returns void{ 
}


function SetTextTagAgeBJ(texttag tt158, real age912) returns void{ 
    SetTextTagAge(tt158, age912)
}


function SetTextTagAge(texttag t614, real age171) returns void{ 
}


function SetTextTagPermanentBJ(texttag tt110, boolean flag741) returns void{ 
    SetTextTagPermanent(tt110, flag741)
}


function SetTextTagPermanent(texttag t218, boolean flag242) returns void{ 
}


function SetTextTagSuspendedBJ(texttag tt820, boolean flag296) returns void{ 
    SetTextTagSuspended(tt820, flag296)
}


function SetTextTagSuspended(texttag t493, boolean flag612) returns void{ 
}


function SetTextTagPosUnit(texttag t318, unit whichUnit276, real heightOffset109) returns void{ 
}


function SetTextTagPos(texttag t783, real x257, real y323, real heightOffset368) returns void{ 
}


function TextTagSize2Height(real size225) returns real{ 
    return ((size225 * 0.023) / 10.)
}


function SetTextTagText(texttag t141, string s301, real height316) returns void{ 
}


function SetTextTagVelocityBJ(texttag tt199, real speed290, real angle619) returns void{ 
    local real vel872
    local real xvel313
    local real yvel307
    vel872 = TextTagSpeed2Velocity(speed290)
    xvel313 = (vel872 * Cos((angle619 * bj_DEGTORAD321)))
    yvel307 = (vel872 * Sin((angle619 * bj_DEGTORAD321)))
    SetTextTagVelocity(tt199, xvel313, yvel307)
}


function TextTagSpeed2Velocity(real speed904) returns real{ 
    return ((speed904 * 0.071) / 128.)
}


function SetTextTagVelocity(texttag t152, real xvel241, real yvel167) returns void{ 
}


function SetTextTagColor(texttag t206, integer red492, integer green242, integer blue970, integer alpha195) returns void{ 
}


function MultiboardSetItemIconBJ(multiboard mb328, integer col114, integer row222, string iconFileName324) returns void{ 
    local integer curRow179
    local integer curCol114
    local integer numRows280
    local integer numCols135
    local multiboarditem mbitem484
    curRow179 = 0
    curCol114 = 0
    numRows280 = MultiboardGetRowCount(mb328)
    numCols135 = MultiboardGetColumnCount(mb328)
    mbitem484 = null
    loop {
        curRow179 = (curRow179 + 1)
        exitwhen (curRow179 > numRows280)
        if ((row222 == 0) or (row222 == curRow179)){
            curCol114 = 0
            loop {
                curCol114 = (curCol114 + 1)
                exitwhen (curCol114 > numCols135)
                if ((col114 == 0) or (col114 == curCol114)){
                    mbitem484 = MultiboardGetItem(mb328, (curRow179 - 1), (curCol114 - 1))
                    MultiboardSetItemIcon(mbitem484, iconFileName324)
                    MultiboardReleaseItem(mbitem484)
                } else {
                }
            }
        } else {
        }
    }
}


function MultiboardGetRowCount(multiboard lb135) returns integer{ 
}


function MultiboardGetColumnCount(multiboard lb226) returns integer{ 
}


function MultiboardGetItem(multiboard lb228, integer row388, integer column136) returns multiboarditem{ 
}


function MultiboardSetItemIcon(multiboarditem mbi320, string iconFileName280) returns void{ 
}


function MultiboardReleaseItem(multiboarditem mbi109) returns void{ 
}


function MultiboardSetItemWidthBJ(multiboard mb303, integer col213, integer row950, real width300) returns void{ 
    local integer curRow150
    local integer curCol149
    local integer numRows333
    local integer numCols175
    local multiboarditem mbitem313
    curRow150 = 0
    curCol149 = 0
    numRows333 = MultiboardGetRowCount(mb303)
    numCols175 = MultiboardGetColumnCount(mb303)
    mbitem313 = null
    loop {
        curRow150 = (curRow150 + 1)
        exitwhen (curRow150 > numRows333)
        if ((row950 == 0) or (row950 == curRow150)){
            curCol149 = 0
            loop {
                curCol149 = (curCol149 + 1)
                exitwhen (curCol149 > numCols175)
                if ((col213 == 0) or (col213 == curCol149)){
                    mbitem313 = MultiboardGetItem(mb303, (curRow150 - 1), (curCol149 - 1))
                    MultiboardSetItemWidth(mbitem313, (width300 / 100.0))
                    MultiboardReleaseItem(mbitem313)
                } else {
                }
            }
        } else {
        }
    }
}


function MultiboardSetItemWidth(multiboarditem mbi233, real width124) returns void{ 
}


function MultiboardSetItemColorBJ(multiboard mb404, integer col313, integer row176, real red249, real green181, real blue130, real transparency611) returns void{ 
    local integer curRow166
    local integer curCol315
    local integer numRows306
    local integer numCols133
    local multiboarditem mbitem111
    curRow166 = 0
    curCol315 = 0
    numRows306 = MultiboardGetRowCount(mb404)
    numCols133 = MultiboardGetColumnCount(mb404)
    mbitem111 = null
    loop {
        curRow166 = (curRow166 + 1)
        exitwhen (curRow166 > numRows306)
        if ((row176 == 0) or (row176 == curRow166)){
            curCol315 = 0
            loop {
                curCol315 = (curCol315 + 1)
                exitwhen (curCol315 > numCols133)
                if ((col313 == 0) or (col313 == curCol315)){
                    mbitem111 = MultiboardGetItem(mb404, (curRow166 - 1), (curCol315 - 1))
                    MultiboardSetItemValueColor(mbitem111, PercentTo255(red249), PercentTo255(green181), PercentTo255(blue130), PercentTo255((100.0 - transparency611)))
                    MultiboardReleaseItem(mbitem111)
                } else {
                }
            }
        } else {
        }
    }
}


function MultiboardSetItemValueColor(multiboarditem mbi161, integer red119, integer green233, integer blue155, integer alpha205) returns void{ 
}


function MultiboardSetItemValueBJ(multiboard mb177, integer col285, integer row306, string val412) returns void{ 
    local integer curRow383
    local integer curCol210
    local integer numRows158
    local integer numCols244
    local multiboarditem mbitem299
    curRow383 = 0
    curCol210 = 0
    numRows158 = MultiboardGetRowCount(mb177)
    numCols244 = MultiboardGetColumnCount(mb177)
    mbitem299 = null
    loop {
        curRow383 = (curRow383 + 1)
        exitwhen (curRow383 > numRows158)
        if ((row306 == 0) or (row306 == curRow383)){
            curCol210 = 0
            loop {
                curCol210 = (curCol210 + 1)
                exitwhen (curCol210 > numCols244)
                if ((col285 == 0) or (col285 == curCol210)){
                    mbitem299 = MultiboardGetItem(mb177, (curRow383 - 1), (curCol210 - 1))
                    MultiboardSetItemValue(mbitem299, val412)
                    MultiboardReleaseItem(mbitem299)
                } else {
                }
            }
        } else {
        }
    }
}


function MultiboardSetItemValue(multiboarditem mbi529, string val269) returns void{ 
}


function MultiboardSetItemStyleBJ(multiboard mb321, integer col135, integer row261, boolean showValue179, boolean showIcon176) returns void{ 
    local integer curRow140
    local integer curCol423
    local integer numRows956
    local integer numCols288
    local multiboarditem mbitem270
    curRow140 = 0
    curCol423 = 0
    numRows956 = MultiboardGetRowCount(mb321)
    numCols288 = MultiboardGetColumnCount(mb321)
    mbitem270 = null
    loop {
        curRow140 = (curRow140 + 1)
        exitwhen (curRow140 > numRows956)
        if ((row261 == 0) or (row261 == curRow140)){
            curCol423 = 0
            loop {
                curCol423 = (curCol423 + 1)
                exitwhen (curCol423 > numCols288)
                if ((col135 == 0) or (col135 == curCol423)){
                    mbitem270 = MultiboardGetItem(mb321, (curRow140 - 1), (curCol423 - 1))
                    MultiboardSetItemStyle(mbitem270, showValue179, showIcon176)
                    MultiboardReleaseItem(mbitem270)
                } else {
                }
            }
        } else {
        }
    }
}


function MultiboardSetItemStyle(multiboarditem mbi123, boolean showValue118, boolean showIcon116) returns void{ 
}


function MultiboardAllowDisplayBJ(boolean flag224) returns void{ 
    MultiboardSuppressDisplay((not flag224))
}


function MultiboardSuppressDisplay(boolean flag174) returns void{ 
}


function MultiboardSetTitleTextColorBJ(multiboard mb290, real red224, real green280, real blue234, real transparency111) returns void{ 
    MultiboardSetTitleTextColor(mb290, PercentTo255(red224), PercentTo255(green280), PercentTo255(blue234), PercentTo255((100.0 - transparency111)))
}


function MultiboardSetTitleTextColor(multiboard lb254, integer red212, integer green228, integer blue116, integer alpha172) returns void{ 
}


function MultiboardMinimizeBJ(boolean minimize135, multiboard mb464) returns void{ 
    MultiboardMinimize(mb464, minimize135)
}


function MultiboardMinimize(multiboard lb280, boolean minimize825) returns void{ 
}


function MultiboardDisplayBJ(boolean show292, multiboard mb244) returns void{ 
    MultiboardDisplay(mb244, show292)
}


function MultiboardDisplay(multiboard lb213, boolean show289) returns void{ 
}


function GetLastCreatedMultiboard() returns multiboard{ 
    return bj_lastCreatedMultiboard183
}


function DestroyMultiboardBJ(multiboard mb100) returns void{ 
    DestroyMultiboard(mb100)
}


function DestroyMultiboard(multiboard lb545) returns void{ 
}


function CreateMultiboardBJ(integer cols125, integer rows331, string title712) returns multiboard{ 
    bj_lastCreatedMultiboard183 = CreateMultiboard()
    MultiboardSetRowCount(bj_lastCreatedMultiboard183, rows331)
    MultiboardSetColumnCount(bj_lastCreatedMultiboard183, cols125)
    MultiboardSetTitleText(bj_lastCreatedMultiboard183, title712)
    MultiboardDisplay(bj_lastCreatedMultiboard183, true)
    return bj_lastCreatedMultiboard183
}


function CreateMultiboard() returns multiboard{ 
}


function MultiboardSetRowCount(multiboard lb565, integer count105) returns void{ 
}


function MultiboardSetColumnCount(multiboard lb244, integer count937) returns void{ 
}


function MultiboardSetTitleText(multiboard lb188, string label167) returns void{ 
}


function GetLastCreatedLeaderboard() returns leaderboard{ 
    return bj_lastCreatedLeaderboard299
}


function PlayerGetLeaderboardBJ(player whichPlayer314) returns leaderboard{ 
    return PlayerGetLeaderboard(whichPlayer314)
}


function PlayerGetLeaderboard(player toPlayer341) returns leaderboard{ 
}


function LeaderboardGetIndexedPlayerBJ(integer position330, leaderboard lb299) returns player{ 
    local integer index544
    local player indexPlayer230
    null
    null
    index544 = 0
    loop {
        indexPlayer230 = Player(index544)
        if (LeaderboardGetPlayerIndex(lb299, indexPlayer230) == (position330 - 1)){
            return indexPlayer230
        } else {
        }
        index544 = (index544 + 1)
        exitwhen (index544 == bj_MAX_PLAYERS803)
    }
    return Player(PLAYER_NEUTRAL_PASSIVE270)
}


function LeaderboardGetPlayerIndex(leaderboard lb307, player p156) returns integer{ 
}


function LeaderboardGetPlayerIndexBJ(player whichPlayer273, leaderboard lb155) returns integer{ 
    return (LeaderboardGetPlayerIndex(lb155, whichPlayer273) + 1)
}


function LeaderboardSortItemsByLabelBJ(leaderboard lb284, boolean ascending285) returns void{ 
    LeaderboardSortItemsByLabel(lb284, ascending285)
}


function LeaderboardSortItemsByLabel(leaderboard lb272, boolean ascending110) returns void{ 
}


function LeaderboardSortItemsByPlayerBJ(leaderboard lb178, boolean ascending135) returns void{ 
    LeaderboardSortItemsByPlayer(lb178, ascending135)
}


function LeaderboardSortItemsByPlayer(leaderboard lb145, boolean ascending201) returns void{ 
}


function LeaderboardSortItemsBJ(leaderboard lb121, integer sortType366, boolean ascending266) returns void{ 
    if (sortType366 == bj_SORTTYPE_SORTBYVALUE231){
        LeaderboardSortItemsByValue(lb121, ascending266)
    } else {
        if (sortType366 == bj_SORTTYPE_SORTBYPLAYER143){
            LeaderboardSortItemsByPlayer(lb121, ascending266)
        } else {
            if (sortType366 == bj_SORTTYPE_SORTBYLABEL309){
                LeaderboardSortItemsByLabel(lb121, ascending266)
            } else {
            }
        }
    }
}


function LeaderboardSortItemsByValue(leaderboard lb108, boolean ascending159) returns void{ 
}


function LeaderboardRemovePlayerItemBJ(player whichPlayer168, leaderboard lb938) returns void{ 
    LeaderboardRemovePlayerItem(lb938, whichPlayer168)
    LeaderboardResizeBJ(lb938)
}


function LeaderboardRemovePlayerItem(leaderboard lb159, player p418) returns void{ 
}


function LeaderboardResizeBJ(leaderboard lb309) returns void{ 
    local integer size421
    size421 = LeaderboardGetItemCount(lb309)
    if (LeaderboardGetLabelText(lb309) == ""){
        size421 = (size421 - 1)
    } else {
    }
    LeaderboardSetSizeByItemCount(lb309, size421)
}


function LeaderboardAddItemBJ(player whichPlayer189, leaderboard lb214, string label313, integer value274) returns void{ 
    if LeaderboardHasPlayerItem(lb214, whichPlayer189){
        LeaderboardRemovePlayerItem(lb214, whichPlayer189)
    } else {
    }
    LeaderboardAddItem(lb214, label313, value274, whichPlayer189)
    LeaderboardResizeBJ(lb214)
}


function LeaderboardHasPlayerItem(leaderboard lb222, player p153) returns boolean{ 
}


function LeaderboardAddItem(leaderboard lb233, string label496, integer value180, player p248) returns void{ 
}


function LeaderboardDisplayBJ(boolean show330, leaderboard lb854) returns void{ 
    LeaderboardDisplay(lb854, show330)
}


function LeaderboardDisplay(leaderboard lb161, boolean show129) returns void{ 
}


function DestroyLeaderboardBJ(leaderboard lb107) returns void{ 
    DestroyLeaderboard(lb107)
}


function DestroyLeaderboard(leaderboard lb161) returns void{ 
}


function CreateLeaderboardBJ(force toForce263, string label230) returns leaderboard{ 
    bj_lastCreatedLeaderboard299 = CreateLeaderboard()
    LeaderboardSetLabel(bj_lastCreatedLeaderboard299, label230)
    ForceSetLeaderboardBJ(bj_lastCreatedLeaderboard299, toForce263)
    LeaderboardDisplay(bj_lastCreatedLeaderboard299, true)
    return bj_lastCreatedLeaderboard299
}


function CreateLeaderboard() returns leaderboard{ 
}


function LeaderboardSetLabel(leaderboard lb212, string label105) returns void{ 
}


function ForceSetLeaderboardBJ(leaderboard lb285, force toForce139) returns void{ 
    local integer index153
    local player indexPlayer556
    null
    null
    index153 = 0
    loop {
        indexPlayer556 = Player(index153)
        if IsPlayerInForce(indexPlayer556, toForce139){
            PlayerSetLeaderboard(indexPlayer556, lb285)
        } else {
        }
        index153 = (index153 + 1)
        exitwhen (index153 == bj_MAX_PLAYERS803)
    }
}


function PlayerSetLeaderboard(player toPlayer145, leaderboard lb202) returns void{ 
}


function LeaderboardHasPlayerItemBJ(leaderboard lb397, player whichPlayer846) returns boolean{ 
    return LeaderboardHasPlayerItem(lb397, whichPlayer846)
}


function LeaderboardGetItemCountBJ(leaderboard lb414) returns integer{ 
    return LeaderboardGetItemCount(lb414)
}


function LeaderboardGetItemCount(leaderboard lb131) returns integer{ 
}


function LeaderboardSetStyleBJ(leaderboard lb234, boolean showLabel329, boolean showNames648, boolean showValues809, boolean showIcons190) returns void{ 
    LeaderboardSetStyle(lb234, showLabel329, showNames648, showValues809, showIcons190)
}


function LeaderboardSetStyle(leaderboard lb326, boolean showLabel231, boolean showNames466, boolean showValues419, boolean showIcons292) returns void{ 
}


function LeaderboardSetLabelBJ(leaderboard lb135, string label158) returns void{ 
    LeaderboardSetLabel(lb135, label158)
    LeaderboardResizeBJ(lb135)
}


function LeaderboardSetValueColorBJ(leaderboard lb280, real red772, real green268, real blue266, real transparency136) returns void{ 
    LeaderboardSetValueColor(lb280, PercentTo255(red772), PercentTo255(green268), PercentTo255(blue266), PercentTo255((100.0 - transparency136)))
}


function LeaderboardSetValueColor(leaderboard lb545, integer red308, integer green605, integer blue200, integer alpha110) returns void{ 
}


function LeaderboardSetLabelColorBJ(leaderboard lb396, real red827, real green136, real blue785, real transparency163) returns void{ 
    LeaderboardSetLabelColor(lb396, PercentTo255(red827), PercentTo255(green136), PercentTo255(blue785), PercentTo255((100.0 - transparency163)))
}


function LeaderboardSetLabelColor(leaderboard lb441, integer red324, integer green289, integer blue776, integer alpha159) returns void{ 
}


function LeaderboardSetPlayerItemValueColorBJ(player whichPlayer159, leaderboard lb326, real red422, real green322, real blue123, real transparency244) returns void{ 
    LeaderboardSetItemValueColor(lb326, LeaderboardGetPlayerIndex(lb326, whichPlayer159), PercentTo255(red422), PercentTo255(green322), PercentTo255(blue123), PercentTo255((100.0 - transparency244)))
}


function LeaderboardSetItemValueColor(leaderboard lb674, integer whichItem247, integer red167, integer green244, integer blue974, integer alpha292) returns void{ 
}


function LeaderboardSetPlayerItemLabelColorBJ(player whichPlayer214, leaderboard lb142, real red127, real green500, real blue153, real transparency775) returns void{ 
    LeaderboardSetItemLabelColor(lb142, LeaderboardGetPlayerIndex(lb142, whichPlayer214), PercentTo255(red127), PercentTo255(green500), PercentTo255(blue153), PercentTo255((100.0 - transparency775)))
}


function LeaderboardSetItemLabelColor(leaderboard lb147, integer whichItem242, integer red157, integer green291, integer blue131, integer alpha235) returns void{ 
}


function LeaderboardSetPlayerItemStyleBJ(player whichPlayer182, leaderboard lb230, boolean showLabel260, boolean showValue179, boolean showIcon242) returns void{ 
    LeaderboardSetItemStyle(lb230, LeaderboardGetPlayerIndex(lb230, whichPlayer182), showLabel260, showValue179, showIcon242)
}


function LeaderboardSetItemStyle(leaderboard lb118, integer whichItem299, boolean showLabel144, boolean showValue253, boolean showIcon148) returns void{ 
}


function LeaderboardSetPlayerItemLabelBJ(player whichPlayer656, leaderboard lb331, string val251) returns void{ 
    LeaderboardSetItemLabel(lb331, LeaderboardGetPlayerIndex(lb331, whichPlayer656), val251)
}


function LeaderboardSetItemLabel(leaderboard lb314, integer whichItem225, string val172) returns void{ 
}


function LeaderboardSetPlayerItemValueBJ(player whichPlayer431, leaderboard lb151, integer val184) returns void{ 
    LeaderboardSetItemValue(lb151, LeaderboardGetPlayerIndex(lb151, whichPlayer431), val184)
}


function LeaderboardSetItemValue(leaderboard lb206, integer whichItem112, integer val166) returns void{ 
}


function LeaderboardGetLabelText(leaderboard lb434) returns string{ 
}


function LeaderboardSetSizeByItemCount(leaderboard lb681, integer count325) returns void{ 
}


function GetLastCreatedTimerDialogBJ() returns timerdialog{ 
    return bj_lastCreatedTimerDialog810
}


function TimerDialogDisplayBJ(boolean show446, timerdialog td925) returns void{ 
    TimerDialogDisplay(td925, show446)
}


function TimerDialogDisplayForPlayerBJ(boolean show234, timerdialog td303, player whichPlayer313) returns void{ 
    if (GetLocalPlayer() == whichPlayer313){
        TimerDialogDisplay(td303, show234)
    } else {
    }
}


function TimerDialogSetSpeedBJ(timerdialog td609, real speedMultFactor312) returns void{ 
    TimerDialogSetSpeed(td609, speedMultFactor312)
}


function TimerDialogSetSpeed(timerdialog whichDialog152, real speedMultFactor298) returns void{ 
}


function TimerDialogSetTimeColorBJ(timerdialog td118, real red240, real green330, real blue201, real transparency141) returns void{ 
    TimerDialogSetTimeColor(td118, PercentTo255(red240), PercentTo255(green330), PercentTo255(blue201), PercentTo255((100.0 - transparency141)))
}


function TimerDialogSetTimeColor(timerdialog whichDialog449, integer red243, integer green660, integer blue154, integer alpha136) returns void{ 
}


function TimerDialogSetTitleColorBJ(timerdialog td237, real red142, real green452, real blue519, real transparency148) returns void{ 
    TimerDialogSetTitleColor(td237, PercentTo255(red142), PercentTo255(green452), PercentTo255(blue519), PercentTo255((100.0 - transparency148)))
}


function TimerDialogSetTitleColor(timerdialog whichDialog180, integer red728, integer green221, integer blue150, integer alpha334) returns void{ 
}


function TimerDialogSetTitleBJ(timerdialog td309, string title318) returns void{ 
    TimerDialogSetTitle(td309, title318)
}


function DestroyTimerDialogBJ(timerdialog td199) returns void{ 
    DestroyTimerDialog(td199)
}


function DestroyTimerDialog(timerdialog whichDialog139) returns void{ 
}


function CreateTimerDialogBJ(timer t180, string title322) returns timerdialog{ 
    bj_lastCreatedTimerDialog810 = CreateTimerDialog(t180)
    TimerDialogSetTitle(bj_lastCreatedTimerDialog810, title322)
    TimerDialogDisplay(bj_lastCreatedTimerDialog810, true)
    return bj_lastCreatedTimerDialog810
}


function GetLastCreatedTimerBJ() returns timer{ 
    return bj_lastStartedTimer231
}


function PauseTimerBJ(boolean pause461, timer whichTimer331) returns void{ 
    if pause461{
        PauseTimer(whichTimer331)
    } else {
        ResumeTimer(whichTimer331)
    }
}


function ResumeTimer(timer whichTimer274) returns void{ 
}


function DestroyTimerBJ(timer whichTimer351) returns void{ 
    DestroyTimer(whichTimer351)
}


function CreateTimerBJ(boolean periodic217, real timeout286) returns timer{ 
    bj_lastStartedTimer231 = CreateTimer()
    TimerStart(bj_lastStartedTimer231, timeout286, periodic217, null)
    return bj_lastStartedTimer231
}


function StartTimerBJ(timer t160, boolean periodic295, real timeout976) returns timer{ 
    bj_lastStartedTimer231 = t160
    TimerStart(t160, timeout976, periodic295, null)
    return bj_lastStartedTimer231
}


function QuestMessageBJ(force f289, integer messageType144, string message108) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), f289){
        if (messageType144 == bj_QUESTMESSAGE_DISCOVERED965){
            DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_QUEST217, " ")
            DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_QUEST217, message108)
            StartSound(bj_questDiscoveredSound136)
            FlashQuestDialogButton()
        } else {
            if (messageType144 == bj_QUESTMESSAGE_UPDATED317){
                DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_QUESTUPDATE142, " ")
                DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_QUESTUPDATE142, message108)
                StartSound(bj_questUpdatedSound316)
                FlashQuestDialogButton()
            } else {
                if (messageType144 == bj_QUESTMESSAGE_COMPLETED189){
                    DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_QUESTDONE432, " ")
                    DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_QUESTDONE432, message108)
                    StartSound(bj_questCompletedSound268)
                    FlashQuestDialogButton()
                } else {
                    if (messageType144 == bj_QUESTMESSAGE_FAILED753){
                        DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_QUESTFAILED324, " ")
                        DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_QUESTFAILED324, message108)
                        StartSound(bj_questFailedSound194)
                        FlashQuestDialogButton()
                    } else {
                        if (messageType144 == bj_QUESTMESSAGE_REQUIREMENT186){
                            DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_QUESTREQUIREMENT112, message108)
                        } else {
                            if (messageType144 == bj_QUESTMESSAGE_MISSIONFAILED974){
                                DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_MISSIONFAILED206, " ")
                                DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_MISSIONFAILED206, message108)
                                StartSound(bj_questFailedSound194)
                            } else {
                                if (messageType144 == bj_QUESTMESSAGE_HINT241){
                                    DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_HINT284, " ")
                                    DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_HINT284, message108)
                                    StartSound(bj_questHintSound438)
                                } else {
                                    if (messageType144 == bj_QUESTMESSAGE_ALWAYSHINT110){
                                        DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_ALWAYSHINT332, " ")
                                        DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_ALWAYSHINT332, message108)
                                        StartSound(bj_questHintSound438)
                                    } else {
                                        if (messageType144 == bj_QUESTMESSAGE_SECRET231){
                                            DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_SECRET285, " ")
                                            DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_SECRET285, message108)
                                            StartSound(bj_questSecretSound191)
                                        } else {
                                            if (messageType144 == bj_QUESTMESSAGE_UNITACQUIRED249){
                                                DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_UNITACQUIRED170, " ")
                                                DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_UNITACQUIRED170, message108)
                                                StartSound(bj_questHintSound438)
                                            } else {
                                                if (messageType144 == bj_QUESTMESSAGE_UNITAVAILABLE213){
                                                    DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_UNITAVAILABLE429, " ")
                                                    DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_UNITAVAILABLE429, message108)
                                                    StartSound(bj_questHintSound438)
                                                } else {
                                                    if (messageType144 == bj_QUESTMESSAGE_ITEMACQUIRED244){
                                                        DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_ITEMACQUIRED122, " ")
                                                        DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_ITEMACQUIRED122, message108)
                                                        StartSound(bj_questItemAcquiredSound205)
                                                    } else {
                                                        if (messageType144 == bj_QUESTMESSAGE_WARNING999){
                                                            DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_WARNING267, " ")
                                                            DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., bj_TEXT_DELAY_WARNING267, message108)
                                                            StartSound(bj_questWarningSound912)
                                                        } else {
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    } else {
    }
}


function FlashQuestDialogButton() returns void{ 
}


function FlashQuestDialogButtonBJ() returns void{ 
    FlashQuestDialogButton()
}


function GetLastCreatedDefeatConditionBJ() returns defeatcondition{ 
    return bj_lastCreatedDefeatCondition416
}


function DefeatConditionSetDescriptionBJ(defeatcondition whichCondition156, string description171) returns void{ 
    DefeatConditionSetDescription(whichCondition156, description171)
}


function DefeatConditionSetDescription(defeatcondition whichCondition720, string description165) returns void{ 
}


function DestroyDefeatConditionBJ(defeatcondition whichCondition160) returns void{ 
    DestroyDefeatCondition(whichCondition160)
}


function DestroyDefeatCondition(defeatcondition whichCondition309) returns void{ 
}


function CreateDefeatConditionBJ(string description239) returns defeatcondition{ 
    bj_lastCreatedDefeatCondition416 = CreateDefeatCondition()
    DefeatConditionSetDescription(bj_lastCreatedDefeatCondition416, description239)
    return bj_lastCreatedDefeatCondition416
}


function CreateDefeatCondition() returns defeatcondition{ 
}


function GetLastCreatedQuestItemBJ() returns questitem{ 
    return bj_lastCreatedQuestItem981
}


function QuestItemSetCompletedBJ(questitem whichQuestItem305, boolean completed419) returns void{ 
    QuestItemSetCompleted(whichQuestItem305, completed419)
}


function QuestItemSetCompleted(questitem whichQuestItem108, boolean completed130) returns void{ 
}


function QuestItemSetDescriptionBJ(questitem whichQuestItem162, string description220) returns void{ 
    QuestItemSetDescription(whichQuestItem162, description220)
}


function QuestItemSetDescription(questitem whichQuestItem334, string description753) returns void{ 
}


function CreateQuestItemBJ(quest whichQuest138, string description747) returns questitem{ 
    bj_lastCreatedQuestItem981 = QuestCreateItem(whichQuest138)
    QuestItemSetDescription(bj_lastCreatedQuestItem981, description747)
    QuestItemSetCompleted(bj_lastCreatedQuestItem981, false)
    return bj_lastCreatedQuestItem981
}


function QuestCreateItem(quest whichQuest124) returns questitem{ 
}


function GetLastCreatedQuestBJ() returns quest{ 
    return bj_lastCreatedQuest205
}


function QuestSetDiscoveredBJ(quest whichQuest302, boolean discovered213) returns void{ 
    QuestSetDiscovered(whichQuest302, discovered213)
}


function QuestSetDiscovered(quest whichQuest256, boolean discovered128) returns void{ 
}


function QuestSetFailedBJ(quest whichQuest393, boolean failed181) returns void{ 
    QuestSetFailed(whichQuest393, failed181)
}


function QuestSetFailed(quest whichQuest278, boolean failed924) returns void{ 
}


function QuestSetCompletedBJ(quest whichQuest106, boolean completed123) returns void{ 
    QuestSetCompleted(whichQuest106, completed123)
}


function QuestSetCompleted(quest whichQuest243, boolean completed452) returns void{ 
}


function QuestSetDescriptionBJ(quest whichQuest672, string description237) returns void{ 
    QuestSetDescription(whichQuest672, description237)
}


function QuestSetDescription(quest whichQuest526, string description804) returns void{ 
}


function QuestSetTitleBJ(quest whichQuest321, string title571) returns void{ 
    QuestSetTitle(whichQuest321, title571)
}


function QuestSetTitle(quest whichQuest320, string title105) returns void{ 
}


function QuestSetEnabledBJ(boolean enabled228, quest whichQuest123) returns void{ 
    QuestSetEnabled(whichQuest123, enabled228)
}


function QuestSetEnabled(quest whichQuest274, boolean enabled186) returns void{ 
}


function DestroyQuestBJ(quest whichQuest701) returns void{ 
    DestroyQuest(whichQuest701)
}


function DestroyQuest(quest whichQuest187) returns void{ 
}


function CreateQuestBJ(integer questType162, string title230, string description997, string iconPath147) returns quest{ 
    local boolean required715
    local boolean discovered321
    required715 = ((questType162 == bj_QUESTTYPE_REQ_DISCOVERED225) or (questType162 == bj_QUESTTYPE_REQ_UNDISCOVERED131))
    discovered321 = ((questType162 == bj_QUESTTYPE_REQ_DISCOVERED225) or (questType162 == bj_QUESTTYPE_OPT_DISCOVERED116))
    bj_lastCreatedQuest205 = CreateQuest()
    QuestSetTitle(bj_lastCreatedQuest205, title230)
    QuestSetDescription(bj_lastCreatedQuest205, description997)
    QuestSetIconPath(bj_lastCreatedQuest205, iconPath147)
    QuestSetRequired(bj_lastCreatedQuest205, required715)
    QuestSetDiscovered(bj_lastCreatedQuest205, discovered321)
    QuestSetCompleted(bj_lastCreatedQuest205, false)
    return bj_lastCreatedQuest205
}


function CreateQuest() returns quest{ 
}


function QuestSetIconPath(quest whichQuest272, string iconPath143) returns void{ 
}


function QuestSetRequired(quest whichQuest182, boolean required879) returns void{ 
}


function SetPlayerOnScoreScreenBJ(boolean flag185, player whichPlayer298) returns void{ 
    SetPlayerOnScoreScreen(whichPlayer298, flag185)
}


function SetPlayerOnScoreScreen(player whichPlayer879, boolean flag171) returns void{ 
}


function SetNextLevelBJ(string nextLevel106) returns void{ 
    if (nextLevel106 == ""){
        bj_changeLevelMapName248 = null
    } else {
        bj_changeLevelMapName248 = nextLevel106
    }
}


function CustomDefeatBJ(player whichPlayer313, string message502) returns void{ 
    if AllowVictoryDefeat(PLAYER_GAME_RESULT_DEFEAT586){
        RemovePlayer(whichPlayer313, PLAYER_GAME_RESULT_DEFEAT586)
        if (not bj_isSinglePlayer790){
            DisplayTimedTextFromPlayer(whichPlayer313, 0., 0., 60., GetLocalizedString("PLAYER_DEFEATED"))
        } else {
        }
        if (GetPlayerController(whichPlayer313) == MAP_CONTROL_USER306){
            CustomDefeatDialogBJ(whichPlayer313, message502)
        } else {
        }
    } else {
    }
}


function AllowVictoryDefeat(playergameresult gameResult700) returns boolean{ 
    if (gameResult700 == PLAYER_GAME_RESULT_VICTORY732){
        return (not IsNoVictoryCheat())
    } else {
    }
    if (gameResult700 == PLAYER_GAME_RESULT_DEFEAT586){
        return (not IsNoDefeatCheat())
    } else {
    }
    if (gameResult700 == PLAYER_GAME_RESULT_NEUTRAL166){
        return ((not IsNoVictoryCheat()) and (not IsNoDefeatCheat()))
    } else {
    }
    return true
}


function RemovePlayer(player whichPlayer248, playergameresult gameResult335) returns void{ 
}


function DisplayTimedTextFromPlayer(player toPlayer203, real x214, real y816, real duration979, string message115) returns void{ 
}


function CustomDefeatDialogBJ(player whichPlayer233, string message290) returns void{ 
    local trigger t496
    local dialog d334
    t496 = CreateTrigger()
    d334 = DialogCreate()
    DialogSetMessage(d334, message290)
    if bj_isSinglePlayer790{
        t496 = CreateTrigger()
        TriggerRegisterDialogButtonEvent(t496, DialogAddButton(d334, GetLocalizedString("GAMEOVER_RESTART"), GetLocalizedHotkey("GAMEOVER_RESTART")))
        TriggerAddAction(t496, function CustomDefeatRestartBJ)
        if (GetGameDifficulty() != MAP_DIFFICULTY_EASY274){
            t496 = CreateTrigger()
            TriggerRegisterDialogButtonEvent(t496, DialogAddButton(d334, GetLocalizedString("GAMEOVER_REDUCE_DIFFICULTY"), GetLocalizedHotkey("GAMEOVER_REDUCE_DIFFICULTY")))
            TriggerAddAction(t496, function CustomDefeatReduceDifficultyBJ)
        } else {
        }
        t496 = CreateTrigger()
        TriggerRegisterDialogButtonEvent(t496, DialogAddButton(d334, GetLocalizedString("GAMEOVER_LOAD"), GetLocalizedHotkey("GAMEOVER_LOAD")))
        TriggerAddAction(t496, function CustomDefeatLoadBJ)
    } else {
    }
    t496 = CreateTrigger()
    TriggerRegisterDialogButtonEvent(t496, DialogAddButton(d334, GetLocalizedString("GAMEOVER_QUIT_MISSION"), GetLocalizedHotkey("GAMEOVER_QUIT_MISSION")))
    TriggerAddAction(t496, function CustomDefeatQuitBJ)
    if (GetLocalPlayer() == whichPlayer233){
        EnableUserControl(true)
        if bj_isSinglePlayer790{
            PauseGame(true)
        } else {
        }
        EnableUserUI(false)
    } else {
    }
    DialogDisplay(whichPlayer233, d334, true)
    VolumeGroupSetVolumeForPlayerBJ(whichPlayer233, SOUND_VOLUMEGROUP_UI180, 1.0)
    StartSoundForPlayerBJ(whichPlayer233, bj_defeatDialogSound203)
}


function DialogCreate() returns dialog{ 
}


function DialogSetMessage(dialog whichDialog133, string messageText226) returns void{ 
}


function GetLocalizedHotkey(string source812) returns integer{ 
}


function DialogAddButton(dialog whichDialog146, string buttonText159, integer hotkey197) returns button{ 
}


function TriggerRegisterDialogButtonEvent(trigger whichTrigger229, button whichButton260) returns event{ 
}


function CustomDefeatRestartBJ() returns void{ 
    PauseGame(false)
    RestartGame(true)
}


function GetGameDifficulty() returns gamedifficulty{ 
}


function CustomDefeatReduceDifficultyBJ() returns void{ 
    local gamedifficulty diff319
    diff319 = GetGameDifficulty()
    PauseGame(false)
    if (diff319 == MAP_DIFFICULTY_EASY274){
    } else {
        if (diff319 == MAP_DIFFICULTY_NORMAL203){
            SetGameDifficulty(MAP_DIFFICULTY_EASY274)
        } else {
            if (diff319 == MAP_DIFFICULTY_HARD326){
                SetGameDifficulty(MAP_DIFFICULTY_NORMAL203)
            } else {
            }
        }
    }
    RestartGame(true)
}


function CustomDefeatLoadBJ() returns void{ 
    PauseGame(false)
    DisplayLoadDialog()
}


function CustomDefeatQuitBJ() returns void{ 
    if bj_isSinglePlayer790{
        PauseGame(false)
    } else {
    }
    SetGameDifficulty(GetDefaultDifficulty())
    EndGame(true)
}


function DialogDisplay(player whichPlayer138, dialog whichDialog334, boolean flag594) returns void{ 
}


function VolumeGroupSetVolumeForPlayerBJ(player whichPlayer898, volumegroup vgroup273, real scale104) returns void{ 
    if (GetLocalPlayer() == whichPlayer898){
        VolumeGroupSetVolume(vgroup273, scale104)
    } else {
    }
}


function StartSoundForPlayerBJ(player whichPlayer634, sound soundHandle619) returns void{ 
    if (whichPlayer634 == GetLocalPlayer()){
        StartSound(soundHandle619)
    } else {
    }
}


function GetDefaultDifficulty() returns gamedifficulty{ 
}


function SetGameDifficulty(gamedifficulty whichdifficulty185) returns void{ 
}


function EndGame(boolean doScoreScreen881) returns void{ 
}


function DisplayLoadDialog() returns void{ 
}


function RestartGame(boolean doScoreScreen183) returns void{ 
}


function CustomVictoryBJ(player whichPlayer215, boolean showDialog308, boolean showScores258) returns void{ 
    if AllowVictoryDefeat(PLAYER_GAME_RESULT_VICTORY732){
        RemovePlayer(whichPlayer215, PLAYER_GAME_RESULT_VICTORY732)
        if (not bj_isSinglePlayer790){
            DisplayTimedTextFromPlayer(whichPlayer215, 0., 0., 60., GetLocalizedString("PLAYER_VICTORIOUS"))
        } else {
        }
        if (GetPlayerController(whichPlayer215) == MAP_CONTROL_USER306){
            bj_changeLevelShowScores860 = showScores258
            if showDialog308{
                CustomVictoryDialogBJ(whichPlayer215)
            } else {
                CustomVictorySkipBJ(whichPlayer215)
            }
        } else {
        }
    } else {
    }
}


function CustomVictoryDialogBJ(player whichPlayer187) returns void{ 
    local trigger t290
    local dialog d363
    t290 = CreateTrigger()
    d363 = DialogCreate()
    DialogSetMessage(d363, GetLocalizedString("GAMEOVER_VICTORY_MSG"))
    t290 = CreateTrigger()
    TriggerRegisterDialogButtonEvent(t290, DialogAddButton(d363, GetLocalizedString("GAMEOVER_CONTINUE"), GetLocalizedHotkey("GAMEOVER_CONTINUE")))
    TriggerAddAction(t290, function CustomVictoryOkBJ)
    t290 = CreateTrigger()
    TriggerRegisterDialogButtonEvent(t290, DialogAddButton(d363, GetLocalizedString("GAMEOVER_QUIT_MISSION"), GetLocalizedHotkey("GAMEOVER_QUIT_MISSION")))
    TriggerAddAction(t290, function CustomVictoryQuitBJ)
    if (GetLocalPlayer() == whichPlayer187){
        EnableUserControl(true)
        if bj_isSinglePlayer790{
            PauseGame(true)
        } else {
        }
        EnableUserUI(false)
    } else {
    }
    DialogDisplay(whichPlayer187, d363, true)
    VolumeGroupSetVolumeForPlayerBJ(whichPlayer187, SOUND_VOLUMEGROUP_UI180, 1.0)
    StartSoundForPlayerBJ(whichPlayer187, bj_victoryDialogSound107)
}


function CustomVictorySkipBJ(player whichPlayer231) returns void{ 
    if (GetLocalPlayer() == whichPlayer231){
        if bj_isSinglePlayer790{
            SetGameDifficulty(GetDefaultDifficulty())
        } else {
        }
        if (bj_changeLevelMapName248 == null){
            EndGame(bj_changeLevelShowScores860)
        } else {
            ChangeLevel(bj_changeLevelMapName248, bj_changeLevelShowScores860)
        }
    } else {
    }
}


function CustomVictoryOkBJ() returns void{ 
    if bj_isSinglePlayer790{
        PauseGame(false)
        SetGameDifficulty(GetDefaultDifficulty())
    } else {
    }
    if (bj_changeLevelMapName248 == null){
        EndGame(bj_changeLevelShowScores860)
    } else {
        ChangeLevel(bj_changeLevelMapName248, bj_changeLevelShowScores860)
    }
}


function CustomVictoryQuitBJ() returns void{ 
    if bj_isSinglePlayer790{
        PauseGame(false)
        SetGameDifficulty(GetDefaultDifficulty())
    } else {
    }
    EndGame(bj_changeLevelShowScores860)
}


function MeleeVictoryDialogBJ(player whichPlayer297, boolean leftGame273) returns void{ 
    local trigger t244
    local dialog d411
    local string formatString316
    t244 = CreateTrigger()
    d411 = DialogCreate()
    null
    if leftGame273{
        formatString316 = GetLocalizedString("PLAYER_LEFT_GAME")
    } else {
        formatString316 = GetLocalizedString("PLAYER_VICTORIOUS")
    }
    DisplayTimedTextFromPlayer(whichPlayer297, 0., 0., 60., formatString316)
    DialogSetMessage(d411, GetLocalizedString("GAMEOVER_VICTORY_MSG"))
    DialogAddButton(d411, GetLocalizedString("GAMEOVER_CONTINUE_GAME"), GetLocalizedHotkey("GAMEOVER_CONTINUE_GAME"))
    t244 = CreateTrigger()
    TriggerRegisterDialogButtonEvent(t244, DialogAddQuitButton(d411, true, GetLocalizedString("GAMEOVER_QUIT_GAME"), GetLocalizedHotkey("GAMEOVER_QUIT_GAME")))
    DialogDisplay(whichPlayer297, d411, true)
    StartSoundForPlayerBJ(whichPlayer297, bj_victoryDialogSound107)
}


function MeleeDefeatDialogBJ(player whichPlayer234, boolean leftGame224) returns void{ 
    local trigger t933
    local dialog d141
    local string formatString313
    t933 = CreateTrigger()
    d141 = DialogCreate()
    null
    if leftGame224{
        formatString313 = GetLocalizedString("PLAYER_LEFT_GAME")
    } else {
        formatString313 = GetLocalizedString("PLAYER_DEFEATED")
    }
    DisplayTimedTextFromPlayer(whichPlayer234, 0., 0., 60., formatString313)
    DialogSetMessage(d141, GetLocalizedString("GAMEOVER_DEFEAT_MSG"))
    if ((not bj_meleeGameOver436) and IsMapFlagSet(MAP_OBSERVERS_ON_DEATH204)){
        DialogAddButton(d141, GetLocalizedString("GAMEOVER_CONTINUE_OBSERVING"), GetLocalizedHotkey("GAMEOVER_CONTINUE_OBSERVING"))
    } else {
    }
    t933 = CreateTrigger()
    TriggerRegisterDialogButtonEvent(t933, DialogAddQuitButton(d141, true, GetLocalizedString("GAMEOVER_QUIT_GAME"), GetLocalizedHotkey("GAMEOVER_QUIT_GAME")))
    DialogDisplay(whichPlayer234, d141, true)
    StartSoundForPlayerBJ(whichPlayer234, bj_defeatDialogSound203)
}


function DialogAddQuitButton(dialog whichDialog267, boolean doScoreScreen256, string buttonText760, integer hotkey638) returns button{ 
}


function EndGameBJ() returns void{ 
    EndGame(true)
}


function IsNoVictoryCheat() returns boolean{ 
}


function IsNoDefeatCheat() returns boolean{ 
}


function MakeUnitsPassiveForPlayer(player whichPlayer251) returns void{ 
    local group playerUnits274
    playerUnits274 = CreateGroup()
    CachePlayerHeroData(whichPlayer251)
    GroupEnumUnitsOfPlayer(playerUnits274, whichPlayer251, null)
    ForGroup(playerUnits274, function MakeUnitsPassiveForPlayerEnum)
    DestroyGroup(playerUnits274)
}


function MakeUnitsPassiveForPlayerEnum() returns void{ 
    SetUnitOwner(GetEnumUnit(), Player(bj_PLAYER_NEUTRAL_VICTIM262), false)
}


function SetPlayerAlliance(player sourcePlayer323, player otherPlayer115, alliancetype whichAllianceSetting661, boolean value801) returns void{ 
}


function SetForceAllianceStateBJ(force sourceForce180, force targetForce112, integer allianceState173) returns void{ 
    local integer sourceIndex101
    local integer targetIndex283
    null
    null
    sourceIndex101 = 0
    loop {
        if ((sourceForce180 == bj_FORCE_ALL_PLAYERS266) or IsPlayerInForce(Player(sourceIndex101), sourceForce180)){
            targetIndex283 = 0
            loop {
                if ((targetForce112 == bj_FORCE_ALL_PLAYERS266) or IsPlayerInForce(Player(targetIndex283), targetForce112)){
                    SetPlayerAllianceStateBJ(Player(sourceIndex101), Player(targetIndex283), allianceState173)
                } else {
                }
                targetIndex283 = (targetIndex283 + 1)
                exitwhen (targetIndex283 == bj_MAX_PLAYER_SLOTS561)
            }
        } else {
        }
        sourceIndex101 = (sourceIndex101 + 1)
        exitwhen (sourceIndex101 == bj_MAX_PLAYER_SLOTS561)
    }
}


function SetPlayerAllianceStateBJ(player sourcePlayer241, player otherPlayer146, integer allianceState906) returns void{ 
    if (sourcePlayer241 == otherPlayer146){
        return %nothing%
    } else {
    }
    if (allianceState906 == bj_ALLIANCE_UNALLIED328){
        SetPlayerAllianceStateAllyBJ(sourcePlayer241, otherPlayer146, false)
        SetPlayerAllianceStateVisionBJ(sourcePlayer241, otherPlayer146, false)
        SetPlayerAllianceStateControlBJ(sourcePlayer241, otherPlayer146, false)
        SetPlayerAllianceStateFullControlBJ(sourcePlayer241, otherPlayer146, false)
    } else {
        if (allianceState906 == bj_ALLIANCE_UNALLIED_VISION153){
            SetPlayerAllianceStateAllyBJ(sourcePlayer241, otherPlayer146, false)
            SetPlayerAllianceStateVisionBJ(sourcePlayer241, otherPlayer146, true)
            SetPlayerAllianceStateControlBJ(sourcePlayer241, otherPlayer146, false)
            SetPlayerAllianceStateFullControlBJ(sourcePlayer241, otherPlayer146, false)
        } else {
            if (allianceState906 == bj_ALLIANCE_ALLIED285){
                SetPlayerAllianceStateAllyBJ(sourcePlayer241, otherPlayer146, true)
                SetPlayerAllianceStateVisionBJ(sourcePlayer241, otherPlayer146, false)
                SetPlayerAllianceStateControlBJ(sourcePlayer241, otherPlayer146, false)
                SetPlayerAllianceStateFullControlBJ(sourcePlayer241, otherPlayer146, false)
            } else {
                if (allianceState906 == bj_ALLIANCE_ALLIED_VISION122){
                    SetPlayerAllianceStateAllyBJ(sourcePlayer241, otherPlayer146, true)
                    SetPlayerAllianceStateVisionBJ(sourcePlayer241, otherPlayer146, true)
                    SetPlayerAllianceStateControlBJ(sourcePlayer241, otherPlayer146, false)
                    SetPlayerAllianceStateFullControlBJ(sourcePlayer241, otherPlayer146, false)
                } else {
                    if (allianceState906 == bj_ALLIANCE_ALLIED_UNITS354){
                        SetPlayerAllianceStateAllyBJ(sourcePlayer241, otherPlayer146, true)
                        SetPlayerAllianceStateVisionBJ(sourcePlayer241, otherPlayer146, true)
                        SetPlayerAllianceStateControlBJ(sourcePlayer241, otherPlayer146, true)
                        SetPlayerAllianceStateFullControlBJ(sourcePlayer241, otherPlayer146, false)
                    } else {
                        if (allianceState906 == bj_ALLIANCE_ALLIED_ADVUNITS354){
                            SetPlayerAllianceStateAllyBJ(sourcePlayer241, otherPlayer146, true)
                            SetPlayerAllianceStateVisionBJ(sourcePlayer241, otherPlayer146, true)
                            SetPlayerAllianceStateControlBJ(sourcePlayer241, otherPlayer146, true)
                            SetPlayerAllianceStateFullControlBJ(sourcePlayer241, otherPlayer146, true)
                        } else {
                            if (allianceState906 == bj_ALLIANCE_NEUTRAL251){
                                SetPlayerAllianceStateAllyBJ(sourcePlayer241, otherPlayer146, false)
                                SetPlayerAllianceStateVisionBJ(sourcePlayer241, otherPlayer146, false)
                                SetPlayerAllianceStateControlBJ(sourcePlayer241, otherPlayer146, false)
                                SetPlayerAllianceStateFullControlBJ(sourcePlayer241, otherPlayer146, false)
                                SetPlayerAlliance(sourcePlayer241, otherPlayer146, ALLIANCE_PASSIVE306, true)
                            } else {
                                if (allianceState906 == bj_ALLIANCE_NEUTRAL_VISION131){
                                    SetPlayerAllianceStateAllyBJ(sourcePlayer241, otherPlayer146, false)
                                    SetPlayerAllianceStateVisionBJ(sourcePlayer241, otherPlayer146, true)
                                    SetPlayerAllianceStateControlBJ(sourcePlayer241, otherPlayer146, false)
                                    SetPlayerAllianceStateFullControlBJ(sourcePlayer241, otherPlayer146, false)
                                    SetPlayerAlliance(sourcePlayer241, otherPlayer146, ALLIANCE_PASSIVE306, true)
                                } else {
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}


function SetPlayerAllianceStateAllyBJ(player sourcePlayer109, player otherPlayer734, boolean flag226) returns void{ 
    SetPlayerAlliance(sourcePlayer109, otherPlayer734, ALLIANCE_PASSIVE306, flag226)
    SetPlayerAlliance(sourcePlayer109, otherPlayer734, ALLIANCE_HELP_REQUEST124, flag226)
    SetPlayerAlliance(sourcePlayer109, otherPlayer734, ALLIANCE_HELP_RESPONSE143, flag226)
    SetPlayerAlliance(sourcePlayer109, otherPlayer734, ALLIANCE_SHARED_XP240, flag226)
    SetPlayerAlliance(sourcePlayer109, otherPlayer734, ALLIANCE_SHARED_SPELLS102, flag226)
}


function SetPlayerAllianceStateVisionBJ(player sourcePlayer102, player otherPlayer334, boolean flag267) returns void{ 
    SetPlayerAlliance(sourcePlayer102, otherPlayer334, ALLIANCE_SHARED_VISION266, flag267)
}


function SetPlayerAllianceStateControlBJ(player sourcePlayer262, player otherPlayer135, boolean flag256) returns void{ 
    SetPlayerAlliance(sourcePlayer262, otherPlayer135, ALLIANCE_SHARED_CONTROL252, flag256)
}


function SetPlayerAllianceStateFullControlBJ(player sourcePlayer327, player otherPlayer102, boolean flag263) returns void{ 
    SetPlayerAlliance(sourcePlayer327, otherPlayer102, ALLIANCE_SHARED_ADVANCED_CONTROL902, flag263)
}


function SetPlayerAllianceBJ(player sourcePlayer376, alliancetype whichAllianceSetting250, boolean value271, player otherPlayer320) returns void{ 
    if (sourcePlayer376 == otherPlayer320){
        return %nothing%
    } else {
    }
    SetPlayerAlliance(sourcePlayer376, otherPlayer320, whichAllianceSetting250, value271)
}


function GetClickedDialogBJ() returns dialog{ 
    return GetClickedDialog()
}


function GetClickedDialog() returns dialog{ 
}


function GetClickedButtonBJ() returns button{ 
    return GetClickedButton()
}


function GetClickedButton() returns button{ 
}


function GetLastCreatedButtonBJ() returns button{ 
    return bj_lastCreatedButton262
}


function DialogClearBJ(dialog whichDialog166) returns void{ 
    DialogClear(whichDialog166)
}


function DialogClear(dialog whichDialog106) returns void{ 
}


function DialogAddButtonWithHotkeyBJ(dialog whichDialog579, string buttonText226, integer hotkey173) returns button{ 
    bj_lastCreatedButton262 = DialogAddButton(whichDialog579, buttonText226, hotkey173)
    return bj_lastCreatedButton262
}


function DialogAddButtonBJ(dialog whichDialog322, string buttonText273) returns button{ 
    bj_lastCreatedButton262 = DialogAddButton(whichDialog322, buttonText273, 0)
    return bj_lastCreatedButton262
}


function DialogSetMessageBJ(dialog whichDialog321, string message235) returns void{ 
    DialogSetMessage(whichDialog321, message235)
}


function DialogDisplayBJ(boolean flag183, dialog whichDialog252, player whichPlayer925) returns void{ 
    DialogDisplay(whichPlayer925, whichDialog252, flag183)
}


function SetDestAnimationSpeedPercent(destructable d868, real percentScale742) returns void{ 
    SetDestructableAnimationSpeed(d868, (percentScale742 * 0.01))
}


function SetDestructableAnimationSpeed(destructable d291, real speedFactor214) returns void{ 
}


function QueueDestructableAnimationBJ(destructable d330, string whichAnimation121) returns void{ 
    QueueDestructableAnimation(d330, whichAnimation121)
}


function QueueDestructableAnimation(destructable d147, string whichAnimation138) returns void{ 
}


function SetDestructableAnimationBJ(destructable d318, string whichAnimation311) returns void{ 
    SetDestructableAnimation(d318, whichAnimation311)
}


function SetDestructableAnimation(destructable d502, string whichAnimation733) returns void{ 
}


function QueueUnitAnimationBJ(unit whichUnit202, string whichAnimation629) returns void{ 
    QueueUnitAnimation(whichUnit202, whichAnimation629)
}


function QueueUnitAnimation(unit whichUnit779, string whichAnimation316) returns void{ 
}


function SetUnitFacingToFaceUnitTimed(unit whichUnit246, unit target267, real duration331) returns void{ 
    local location unitLoc188
    unitLoc188 = GetUnitLoc(target267)
    SetUnitFacingToFaceLocTimed(whichUnit246, unitLoc188, duration331)
    RemoveLocation(unitLoc188)
}


function SetUnitFacingToFaceLocTimed(unit whichUnit360, location target201, real duration902) returns void{ 
    local location unitLoc387
    unitLoc387 = GetUnitLoc(whichUnit360)
    SetUnitFacingTimed(whichUnit360, AngleBetweenPoints(unitLoc387, target201), duration902)
    RemoveLocation(unitLoc387)
}


function SetUnitFacingTimed(unit whichUnit268, real facingAngle233, real duration163) returns void{ 
}


function ItemAddIndicatorBJ(item whichItem198, real red100, real green290, real blue205, real transparency118) returns void{ 
    AddIndicator(whichItem198, PercentTo255(red100), PercentTo255(green290), PercentTo255(blue205), PercentTo255((100.0 - transparency118)))
}


function AddIndicator(widget whichWidget229, integer red117, integer green632, integer blue234, integer alpha211) returns void{ 
}


function DestructableAddIndicatorBJ(destructable whichDestructable264, real red290, real green442, real blue161, real transparency212) returns void{ 
    AddIndicator(whichDestructable264, PercentTo255(red290), PercentTo255(green442), PercentTo255(blue161), PercentTo255((100.0 - transparency212)))
}


function UnitAddIndicatorBJ(unit whichUnit286, real red182, real green112, real blue254, real transparency119) returns void{ 
    AddIndicator(whichUnit286, PercentTo255(red182), PercentTo255(green112), PercentTo255(blue254), PercentTo255((100.0 - transparency119)))
}


function SetUnitVertexColorBJ(unit whichUnit280, real red424, real green990, real blue304, real transparency103) returns void{ 
    SetUnitVertexColor(whichUnit280, PercentTo255(red424), PercentTo255(green990), PercentTo255(blue304), PercentTo255((100.0 - transparency103)))
}


function SetUnitVertexColor(unit whichUnit237, integer red279, integer green967, integer blue109, integer alpha150) returns void{ 
}


function SetUnitScalePercent(unit whichUnit120, real percentScaleX875, real percentScaleY250, real percentScaleZ204) returns void{ 
    SetUnitScale(whichUnit120, (percentScaleX875 * 0.01), (percentScaleY250 * 0.01), (percentScaleZ204 * 0.01))
}


function SetUnitScale(unit whichUnit211, real scaleX430, real scaleY515, real scaleZ264) returns void{ 
}


function SetUnitTimeScalePercent(unit whichUnit999, real percentScale173) returns void{ 
    SetUnitTimeScale(whichUnit999, (percentScale173 * 0.01))
}


function SetUnitTimeScale(unit whichUnit106, real timeScale885) returns void{ 
}


function ResetUnitAnimation(unit whichUnit495) returns void{ 
    SetUnitAnimation(whichUnit495, "stand")
}


function SetUnitAnimation(unit whichUnit162, string whichAnimation288) returns void{ 
}


function CountLivingPlayerUnitsOfTypeId(integer unitId195, player whichPlayer730) returns integer{ 
    local group g284
    local integer matchedCount240
    null
    null
    g284 = CreateGroup()
    bj_livingPlayerUnitsTypeId120 = unitId195
    GroupEnumUnitsOfPlayer(g284, whichPlayer730, filterLivingPlayerUnitsOfTypeId938)
    matchedCount240 = CountUnitsInGroup(g284)
    DestroyGroup(g284)
    return matchedCount240
}


function CountUnitsInGroup(group g134) returns integer{ 
    local boolean wantDestroy260
    wantDestroy260 = bj_wantDestroyGroup103
    bj_wantDestroyGroup103 = false
    bj_groupCountUnits746 = 0
    ForGroup(g134, function CountUnitsInGroupEnum)
    if wantDestroy260{
        DestroyGroup(g134)
    } else {
    }
    return bj_groupCountUnits746
}


function IsUnitAliveBJ(unit whichUnit284) returns boolean{ 
    return (not IsUnitDeadBJ(whichUnit284))
}


function GetRandomSubGroup(integer count758, group sourceGroup197) returns group{ 
    local group g289
    g289 = CreateGroup()
    bj_randomSubGroupGroup133 = g289
    bj_randomSubGroupWant265 = count758
    bj_randomSubGroupTotal126 = CountUnitsInGroup(sourceGroup197)
    if ((bj_randomSubGroupWant265 <= 0) or (bj_randomSubGroupTotal126 <= 0)){
        return g289
    } else {
    }
    bj_randomSubGroupChance182 = (I2R(bj_randomSubGroupWant265) / I2R(bj_randomSubGroupTotal126))
    ForGroup(sourceGroup197, function GetRandomSubGroupEnum)
    return g289
}


function I2R(integer i619) returns real{ 
}


function GetRandomSubGroupEnum() returns void{ 
    if (bj_randomSubGroupWant265 > 0){
        if ((bj_randomSubGroupWant265 >= bj_randomSubGroupTotal126) or (GetRandomReal(0., 1.) < bj_randomSubGroupChance182)){
            GroupAddUnit(bj_randomSubGroupGroup133, GetEnumUnit())
            bj_randomSubGroupWant265 = (bj_randomSubGroupWant265 - 1)
        } else {
        }
    } else {
    }
    bj_randomSubGroupTotal126 = (bj_randomSubGroupTotal126 - 1)
}


function GroupAddUnit(group whichGroup195, unit whichUnit101) returns void{ 
}


function CountPlayersInForceBJ(force f238) returns integer{ 
    bj_forceCountPlayers292 = 0
    ForForce(f238, function CountPlayersInForceEnum)
    return bj_forceCountPlayers292
}


function CountPlayersInForceEnum() returns void{ 
    bj_forceCountPlayers292 = (bj_forceCountPlayers292 + 1)
}


function CountUnitsInGroupEnum() returns void{ 
    bj_groupCountUnits746 = (bj_groupCountUnits746 + 1)
}


function GetPlayersMatching(boolexpr filter290) returns force{ 
    local force f226
    f226 = CreateForce()
    ForceEnumPlayers(f226, filter290)
    DestroyBoolExpr(filter290)
    return f226
}


function DestroyBoolExpr(boolexpr e465) returns void{ 
}


function GetPlayersEnemies(player whichPlayer275) returns force{ 
    local force f238
    f238 = CreateForce()
    ForceEnumEnemies(f238, whichPlayer275, null)
    return f238
}


function ForceEnumEnemies(force whichForce156, player whichPlayer136, boolexpr filter245) returns void{ 
}


function GetPlayersAllies(player whichPlayer253) returns force{ 
    local force f198
    f198 = CreateForce()
    ForceEnumAllies(f198, whichPlayer253, null)
    return f198
}


function ForceEnumAllies(force whichForce267, player whichPlayer137, boolexpr filter366) returns void{ 
}


function GetPlayersByMapControl(mapcontrol whichControl244) returns force{ 
    local force f388
    local integer playerIndex317
    local player indexPlayer108
    f388 = CreateForce()
    null
    null
    playerIndex317 = 0
    loop {
        indexPlayer108 = Player(playerIndex317)
        if (GetPlayerController(indexPlayer108) == whichControl244){
            ForceAddPlayer(f388, indexPlayer108)
        } else {
        }
        playerIndex317 = (playerIndex317 + 1)
        exitwhen (playerIndex317 == bj_MAX_PLAYER_SLOTS561)
    }
    return f388
}


function GetPlayersAll() returns force{ 
    return bj_FORCE_ALL_PLAYERS266
}


function GetForceOfPlayer(player whichPlayer146) returns force{ 
    local force f383
    f383 = CreateForce()
    ForceAddPlayer(f383, whichPlayer146)
    return f383
}


function GetUnitsSelectedAll(player whichPlayer234) returns group{ 
    local group g217
    g217 = CreateGroup()
    SyncSelections()
    GroupEnumUnitsSelected(g217, whichPlayer234, null)
    return g217
}


function SyncSelections() returns void{ 
}


function GroupEnumUnitsSelected(group whichGroup267, player whichPlayer264, boolexpr filter281) returns void{ 
}


function GetUnitsOfPlayerAndTypeId(player whichPlayer386, integer unitid975) returns group{ 
    local group g127
    g127 = CreateGroup()
    bj_groupEnumTypeId293 = unitid975
    GroupEnumUnitsOfPlayer(g127, whichPlayer386, filterGetUnitsOfPlayerAndTypeId113)
    return g127
}


function GetUnitsOfPlayerAll(player whichPlayer316) returns group{ 
    return GetUnitsOfPlayerMatching(whichPlayer316, null)
}


function GetUnitsOfPlayerMatching(player whichPlayer266, boolexpr filter244) returns group{ 
    local group g132
    g132 = CreateGroup()
    GroupEnumUnitsOfPlayer(g132, whichPlayer266, filter244)
    DestroyBoolExpr(filter244)
    return g132
}


function GetUnitsOfTypeIdAll(integer unitid556) returns group{ 
    local group result121
    local group g271
    local integer index146
    result121 = CreateGroup()
    g271 = CreateGroup()
    null
    index146 = 0
    loop {
        bj_groupEnumTypeId293 = unitid556
        GroupClear(g271)
        GroupEnumUnitsOfPlayer(g271, Player(index146), filterGetUnitsOfTypeIdAll241)
        GroupAddGroup(g271, result121)
        index146 = (index146 + 1)
        exitwhen (index146 == bj_MAX_PLAYER_SLOTS561)
    }
    DestroyGroup(g271)
    return result121
}


function GroupClear(group whichGroup297) returns void{ 
}


function GroupAddGroup(group sourceGroup997, group destGroup126) returns void{ 
    local boolean wantDestroy669
    wantDestroy669 = bj_wantDestroyGroup103
    bj_wantDestroyGroup103 = false
    bj_groupAddGroupDest242 = destGroup126
    ForGroup(sourceGroup997, function GroupAddGroupEnum)
    if wantDestroy669{
        DestroyGroup(sourceGroup997)
    } else {
    }
}


function GetUnitsInRangeOfLocAll(real radius812, location whichLocation190) returns group{ 
    return GetUnitsInRangeOfLocMatching(radius812, whichLocation190, null)
}


function GetUnitsInRangeOfLocMatching(real radius200, location whichLocation200, boolexpr filter131) returns group{ 
    local group g274
    g274 = CreateGroup()
    GroupEnumUnitsInRangeOfLoc(g274, whichLocation200, radius200, filter131)
    DestroyBoolExpr(filter131)
    return g274
}


function GetUnitsInRectOfPlayer(rect r171, player whichPlayer121) returns group{ 
    local group g303
    g303 = CreateGroup()
    bj_groupEnumOwningPlayer771 = whichPlayer121
    GroupEnumUnitsInRect(g303, r171, filterGetUnitsInRectOfPlayer138)
    return g303
}


function GroupEnumUnitsInRect(group whichGroup545, rect r316, boolexpr filter212) returns void{ 
}


function GetUnitsInRectAll(rect r140) returns group{ 
    return GetUnitsInRectMatching(r140, null)
}


function GetUnitsInRectMatching(rect r186, boolexpr filter123) returns group{ 
    local group g278
    g278 = CreateGroup()
    GroupEnumUnitsInRect(g278, r186, filter123)
    DestroyBoolExpr(filter123)
    return g278
}


function EnumUnitsSelected(player whichPlayer259, boolexpr enumFilter310, code enumAction250) returns void{ 
    local group g111
    g111 = CreateGroup()
    SyncSelections()
    GroupEnumUnitsSelected(g111, whichPlayer259, enumFilter310)
    DestroyBoolExpr(enumFilter310)
    ForGroup(g111, enumAction250)
    DestroyGroup(g111)
}


function ForcePickRandomPlayer(force whichForce331) returns player{ 
    bj_forceRandomConsidered125 = 0
    bj_forceRandomCurrentPick906 = null
    ForForce(whichForce331, function ForcePickRandomPlayerEnum)
    return bj_forceRandomCurrentPick906
}


function ForcePickRandomPlayerEnum() returns void{ 
    bj_forceRandomConsidered125 = (bj_forceRandomConsidered125 + 1)
    if (GetRandomInt(1, bj_forceRandomConsidered125) == 1){
        bj_forceRandomCurrentPick906 = GetEnumPlayer()
    } else {
    }
}


function GroupPickRandomUnit(group whichGroup287) returns unit{ 
    local boolean wantDestroy306
    wantDestroy306 = bj_wantDestroyGroup103
    bj_wantDestroyGroup103 = false
    bj_groupRandomConsidered126 = 0
    bj_groupRandomCurrentPick233 = null
    ForGroup(whichGroup287, function GroupPickRandomUnitEnum)
    if wantDestroy306{
        DestroyGroup(whichGroup287)
    } else {
    }
    return bj_groupRandomCurrentPick233
}


function GroupPickRandomUnitEnum() returns void{ 
    bj_groupRandomConsidered126 = (bj_groupRandomConsidered126 + 1)
    if (GetRandomInt(1, bj_groupRandomConsidered126) == 1){
        bj_groupRandomCurrentPick233 = GetEnumUnit()
    } else {
    }
}


function ForceRemovePlayerSimple(player whichPlayer101, force whichForce819) returns void{ 
    ForceRemovePlayer(whichForce819, whichPlayer101)
}


function ForceRemovePlayer(force whichForce250, player whichPlayer328) returns void{ 
}


function ForceAddPlayerSimple(player whichPlayer267, force whichForce409) returns void{ 
    ForceAddPlayer(whichForce409, whichPlayer267)
}


function GroupRemoveGroup(group sourceGroup907, group destGroup781) returns void{ 
    local boolean wantDestroy290
    wantDestroy290 = bj_wantDestroyGroup103
    bj_wantDestroyGroup103 = false
    bj_groupRemoveGroupDest962 = destGroup781
    ForGroup(sourceGroup907, function GroupRemoveGroupEnum)
    if wantDestroy290{
        DestroyGroup(sourceGroup907)
    } else {
    }
}


function GroupRemoveGroupEnum() returns void{ 
    GroupRemoveUnit(bj_groupRemoveGroupDest962, GetEnumUnit())
}


function GroupRemoveUnit(group whichGroup146, unit whichUnit260) returns void{ 
}


function GroupAddGroupEnum() returns void{ 
    GroupAddUnit(bj_groupAddGroupDest242, GetEnumUnit())
}


function GroupRemoveUnitSimple(unit whichUnit317, group whichGroup274) returns void{ 
    GroupRemoveUnit(whichGroup274, whichUnit317)
}


function GroupAddUnitSimple(unit whichUnit272, group whichGroup218) returns void{ 
    GroupAddUnit(whichGroup218, whichUnit272)
}


function ForGroupBJ(group whichGroup274, code callback228) returns void{ 
    local boolean wantDestroy314
    wantDestroy314 = bj_wantDestroyGroup103
    bj_wantDestroyGroup103 = false
    ForGroup(whichGroup274, callback228)
    if wantDestroy314{
        DestroyGroup(whichGroup274)
    } else {
    }
}


function ForceUICancelBJ(player whichPlayer141) returns void{ 
    if (GetLocalPlayer() == whichPlayer141){
        ForceUICancel()
    } else {
    }
}


function ForceUICancel() returns void{ 
}


function ForceUIKeyBJ(player whichPlayer140, string key130) returns void{ 
    if (GetLocalPlayer() == whichPlayer140){
        ForceUIKey(key130)
    } else {
    }
}


function ForceUIKey(string key322) returns void{ 
}


function UnitSetUsesAltIconBJ(boolean flag373, unit whichUnit826) returns void{ 
    UnitSetUsesAltIcon(whichUnit826, flag373)
}


function UnitSetUsesAltIcon(unit whichUnit126, boolean flag285) returns void{ 
}


function WaygateGetDestinationLocBJ(unit waygate195) returns location{ 
    return Location(WaygateGetDestinationX(waygate195), WaygateGetDestinationY(waygate195))
}


function WaygateGetDestinationX(unit waygate420) returns real{ 
}


function WaygateGetDestinationY(unit waygate206) returns real{ 
}


function WaygateSetDestinationLocBJ(unit waygate249, location loc751) returns void{ 
    WaygateSetDestination(waygate249, GetLocationX(loc751), GetLocationY(loc751))
}


function WaygateSetDestination(unit waygate286, real x989, real y169) returns void{ 
}


function WaygateIsActiveBJ(unit waygate630) returns boolean{ 
    return WaygateIsActive(waygate630)
}


function WaygateIsActive(unit waygate291) returns boolean{ 
}


function WaygateActivateBJ(boolean activate167, unit waygate737) returns void{ 
    WaygateActivate(waygate737, activate167)
}


function WaygateActivate(unit waygate429, boolean activate132) returns void{ 
}


function ChangeElevatorWalls(boolean open327, integer walls863, destructable d321) returns void{ 
    local real x297
    local real y124
    local real distToBlocker264
    local real distToNeighbor214
    x297 = GetDestructableX(d321)
    y124 = GetDestructableY(d321)
    distToBlocker264 = 192.
    distToNeighbor214 = 256.
    if ((walls863 == bj_ELEVATOR_WALL_TYPE_ALL185) or (walls863 == bj_ELEVATOR_WALL_TYPE_EAST116)){
        if (not NearbyElevatorExists((x297 + distToNeighbor214), y124)){
            ChangeElevatorWallBlocker((x297 + distToBlocker264), y124, 0., open327)
        } else {
        }
    } else {
    }
    if ((walls863 == bj_ELEVATOR_WALL_TYPE_ALL185) or (walls863 == bj_ELEVATOR_WALL_TYPE_NORTH234)){
        if (not NearbyElevatorExists(x297, (y124 + distToNeighbor214))){
            ChangeElevatorWallBlocker(x297, (y124 + distToBlocker264), 90., open327)
        } else {
        }
    } else {
    }
    if ((walls863 == bj_ELEVATOR_WALL_TYPE_ALL185) or (walls863 == bj_ELEVATOR_WALL_TYPE_SOUTH111)){
        if (not NearbyElevatorExists(x297, (y124 - distToNeighbor214))){
            ChangeElevatorWallBlocker(x297, (y124 - distToBlocker264), 90., open327)
        } else {
        }
    } else {
    }
    if ((walls863 == bj_ELEVATOR_WALL_TYPE_ALL185) or (walls863 == bj_ELEVATOR_WALL_TYPE_WEST934)){
        if (not NearbyElevatorExists((x297 - distToNeighbor214), y124)){
            ChangeElevatorWallBlocker((x297 - distToBlocker264), y124, 0., open327)
        } else {
        }
    } else {
    }
}


function GetDestructableX(destructable d170) returns real{ 
}


function GetDestructableY(destructable d600) returns real{ 
}


function NearbyElevatorExists(real x147, real y317) returns boolean{ 
    local real findThreshold216
    local rect r286
    findThreshold216 = 32.
    null
    r286 = Rect((x147 - findThreshold216), (y317 - findThreshold216), (x147 + findThreshold216), (y317 + findThreshold216))
    bj_elevatorNeighbor183 = null
    EnumDestructablesInRect(r286, null, function NearbyElevatorExistsEnum)
    RemoveRect(r286)
    return (bj_elevatorNeighbor183 != null)
}


function ChangeElevatorWallBlocker(real x977, real y153, real facing259, boolean open273) returns void{ 
    local destructable blocker214
    local real findThreshold296
    local real nudgeLength179
    local real nudgeWidth138
    local rect r303
    blocker214 = null
    findThreshold296 = 32.
    nudgeLength179 = (4.25 * bj_CELLWIDTH174)
    nudgeWidth138 = (1.25 * bj_CELLWIDTH174)
    null
    r303 = Rect((x977 - findThreshold296), (y153 - findThreshold296), (x977 + findThreshold296), (y153 + findThreshold296))
    bj_elevatorWallBlocker323 = null
    EnumDestructablesInRect(r303, null, function FindElevatorWallBlockerEnum)
    RemoveRect(r303)
    blocker214 = bj_elevatorWallBlocker323
    if (blocker214 == null){
        blocker214 = CreateDeadDestructable(bj_ELEVATOR_BLOCKER_CODE171, x977, y153, facing259, 1., 0)
    } else {
        if (GetDestructableTypeId(blocker214) != bj_ELEVATOR_BLOCKER_CODE171){
            return %nothing%
        } else {
        }
    }
    if open273{
        if (GetDestructableLife(blocker214) > 0.){
            KillDestructable(blocker214)
        } else {
        }
    } else {
        if (GetDestructableLife(blocker214) <= 0.){
            DestructableRestoreLife(blocker214, GetDestructableMaxLife(blocker214), false)
        } else {
        }
        if (facing259 == 0.){
            r303 = Rect((x977 - (nudgeWidth138 / 2.)), (y153 - (nudgeLength179 / 2.)), (x977 + (nudgeWidth138 / 2.)), (y153 + (nudgeLength179 / 2.)))
            NudgeObjectsInRect(r303)
            RemoveRect(r303)
        } else {
            if (facing259 == 90.){
                r303 = Rect((x977 - (nudgeLength179 / 2.)), (y153 - (nudgeWidth138 / 2.)), (x977 + (nudgeLength179 / 2.)), (y153 + (nudgeWidth138 / 2.)))
                NudgeObjectsInRect(r303)
                RemoveRect(r303)
            } else {
            }
        }
    }
}


function FindElevatorWallBlockerEnum() returns void{ 
    bj_elevatorWallBlocker323 = GetEnumDestructable()
}


function EnumDestructablesInRect(rect r247, boolexpr filter170, code actionFunc299) returns void{ 
}


function RemoveRect(rect whichRect509) returns void{ 
}


function CreateDeadDestructable(integer objectid432, real x139, real y140, real face247, real scale251, integer variation615) returns destructable{ 
}


function GetDestructableTypeId(destructable d102) returns integer{ 
}


function GetDestructableLife(destructable d125) returns real{ 
}


function KillDestructable(destructable d202) returns void{ 
}


function GetDestructableMaxLife(destructable d181) returns real{ 
}


function DestructableRestoreLife(destructable d116, real life719, boolean birth177) returns void{ 
}


function NudgeObjectsInRect(rect nudgeArea187) returns void{ 
    local group g371
    null
    g371 = CreateGroup()
    GroupEnumUnitsInRect(g371, nudgeArea187, null)
    ForGroup(g371, function NudgeUnitsInRectEnum)
    DestroyGroup(g371)
    EnumItemsInRect(nudgeArea187, null, function NudgeItemsInRectEnum)
}


function GetEnumDestructable() returns destructable{ 
}


function NearbyElevatorExistsEnum() returns void{ 
    local destructable d454
    local integer dType167
    d454 = GetEnumDestructable()
    dType167 = GetDestructableTypeId(d454)
    if ((dType167 == bj_ELEVATOR_CODE01469) or (dType167 == bj_ELEVATOR_CODE02126)){
        bj_elevatorNeighbor183 = d454
    } else {
    }
}


function NudgeUnitsInRectEnum() returns void{ 
    local unit nudgee291
    nudgee291 = GetEnumUnit()
    SetUnitPosition(nudgee291, GetUnitX(nudgee291), GetUnitY(nudgee291))
}


function NudgeItemsInRectEnum() returns void{ 
    local item nudgee772
    nudgee772 = GetEnumItem()
    SetItemPosition(nudgee772, GetItemX(nudgee772), GetItemY(nudgee772))
}


function EnumItemsInRect(rect r110, boolexpr filter187, code actionFunc292) returns void{ 
}


function GetEnumItem() returns item{ 
}


function GetItemX(item i325) returns real{ 
}


function GetItemY(item i450) returns real{ 
}


function SetItemPosition(item i297, real x158, real y984) returns void{ 
}


function SetUnitPosition(unit whichUnit243, real newX334, real newY152) returns void{ 
}


function ChangeElevatorHeight(destructable d210, integer newHeight178) returns void{ 
    local integer oldHeight246
    null
    newHeight178 = IMaxBJ(1, newHeight178)
    newHeight178 = IMinBJ(3, newHeight178)
    oldHeight246 = GetElevatorHeight(d210)
    SetDestructableOccluderHeight(d210, (bj_CLIFFHEIGHT299 * (newHeight178 - 1)))
    if (newHeight178 == 1){
        if (oldHeight246 == 2){
            SetDestructableAnimation(d210, "birth")
            QueueDestructableAnimation(d210, "stand")
        } else {
            if (oldHeight246 == 3){
                SetDestructableAnimation(d210, "birth third")
                QueueDestructableAnimation(d210, "stand")
            } else {
                SetDestructableAnimation(d210, "stand")
            }
        }
    } else {
        if (newHeight178 == 2){
            if (oldHeight246 == 1){
                SetDestructableAnimation(d210, "death")
                QueueDestructableAnimation(d210, "stand second")
            } else {
                if (oldHeight246 == 3){
                    SetDestructableAnimation(d210, "birth second")
                    QueueDestructableAnimation(d210, "stand second")
                } else {
                    SetDestructableAnimation(d210, "stand second")
                }
            }
        } else {
            if (newHeight178 == 3){
                if (oldHeight246 == 1){
                    SetDestructableAnimation(d210, "death third")
                    QueueDestructableAnimation(d210, "stand third")
                } else {
                    if (oldHeight246 == 2){
                        SetDestructableAnimation(d210, "death second")
                        QueueDestructableAnimation(d210, "stand third")
                    } else {
                        SetDestructableAnimation(d210, "stand third")
                    }
                }
            } else {
            }
        }
    }
}


function IMaxBJ(integer a294, integer b292) returns integer{ 
    if (a294 < b292){
        return b292
    } else {
        return a294
    }
}


function IMinBJ(integer a879, integer b277) returns integer{ 
    if (a879 < b277){
        return a879
    } else {
        return b277
    }
}


function GetElevatorHeight(destructable d132) returns integer{ 
    local integer height105
    null
    height105 = (1 + R2I((GetDestructableOccluderHeight(d132) / bj_CLIFFHEIGHT299)))
    if ((height105 < 1) or (height105 > 3)){
        height105 = 1
    } else {
    }
    return height105
}


function SetDestructableOccluderHeight(destructable d194, real height176) returns void{ 
}


function GetDestructableOccluderHeight(destructable d184) returns real{ 
}


function ModifyGateBJ(integer gateOperation322, destructable d311) returns void{ 
    if (gateOperation322 == bj_GATEOPERATION_CLOSE123){
        if (GetDestructableLife(d311) <= 0.){
            DestructableRestoreLife(d311, GetDestructableMaxLife(d311), true)
        } else {
        }
        SetDestructableAnimation(d311, "stand")
    } else {
        if (gateOperation322 == bj_GATEOPERATION_OPEN273){
            if (GetDestructableLife(d311) > 0.){
                KillDestructable(d311)
            } else {
            }
            SetDestructableAnimation(d311, "death alternate")
        } else {
            if (gateOperation322 == bj_GATEOPERATION_DESTROY179){
                if (GetDestructableLife(d311) > 0.){
                    KillDestructable(d311)
                } else {
                }
                SetDestructableAnimation(d311, "death")
            } else {
            }
        }
    }
}


function SetDestructableMaxLifeBJ(destructable d549, real max913) returns void{ 
    SetDestructableMaxLife(d549, max913)
}


function SetDestructableMaxLife(destructable d128, real max109) returns void{ 
}


function SetDestructableLifePercentBJ(destructable d233, real percent291) returns void{ 
    SetDestructableLife(d233, ((GetDestructableMaxLife(d233) * percent291) * 0.01))
}


function SetDestructableLife(destructable d875, real life189) returns void{ 
}


function EnumDestructablesInCircleBJ(real radius815, location loc218, code actionFunc302) returns void{ 
    local rect r334
    null
    if (radius815 >= 0.){
        bj_enumDestructableCenter320 = loc218
        bj_enumDestructableRadius252 = radius815
        r334 = GetRectFromCircleBJ(loc218, radius815)
        EnumDestructablesInRect(r334, filterEnumDestructablesInCircleBJ212, actionFunc302)
        RemoveRect(r334)
    } else {
    }
}


function RandomDestructableInRectSimpleBJ(rect r248) returns destructable{ 
    return RandomDestructableInRectBJ(r248, null)
}


function RandomDestructableInRectBJ(rect r173, boolexpr filter824) returns destructable{ 
    bj_destRandomConsidered281 = 0
    bj_destRandomCurrentPick261 = null
    EnumDestructablesInRect(r173, filter824, function RandomDestructableInRectBJEnum)
    DestroyBoolExpr(filter824)
    return bj_destRandomCurrentPick261
}


function RandomDestructableInRectBJEnum() returns void{ 
    bj_destRandomConsidered281 = (bj_destRandomConsidered281 + 1)
    if (GetRandomInt(1, bj_destRandomConsidered281) == 1){
        bj_destRandomCurrentPick261 = GetEnumDestructable()
    } else {
    }
}


function IsDestructableAliveBJ(destructable d160) returns boolean{ 
    return (not IsDestructableDeadBJ(d160))
}


function IsDestructableDeadBJ(destructable d323) returns boolean{ 
    return (GetDestructableLife(d323) <= 0.)
}


function GetFilterDestructable() returns destructable{ 
}


function GetDestructableLoc(destructable whichDestructable213) returns location{ 
    return Location(GetDestructableX(whichDestructable213), GetDestructableY(whichDestructable213))
}


function EnumDestructablesInRectAll(rect r308, code actionFunc217) returns void{ 
    EnumDestructablesInRect(r308, null, actionFunc217)
}


function IsDestructableInvulnerableBJ(destructable d945) returns boolean{ 
    return IsDestructableInvulnerable(d945)
}


function IsDestructableInvulnerable(destructable d124) returns boolean{ 
}


function SetDestructableInvulnerableBJ(destructable d870, boolean flag595) returns void{ 
    SetDestructableInvulnerable(d870, flag595)
}


function SetDestructableInvulnerable(destructable d285, boolean flag251) returns void{ 
}


function ShowDestructableBJ(boolean flag294, destructable d225) returns void{ 
    ShowDestructable(d225, flag294)
}


function ShowDestructable(destructable d114, boolean flag216) returns void{ 
}


function GetLastCreatedDestructable() returns destructable{ 
    return bj_lastCreatedDestructable368
}


function CreateDeadDestructableLocBJ(integer objectid271, location loc324, real facing434, real scale281, integer variation273) returns destructable{ 
    bj_lastCreatedDestructable368 = CreateDeadDestructable(objectid271, GetLocationX(loc324), GetLocationY(loc324), facing434, scale281, variation273)
    return bj_lastCreatedDestructable368
}


function CreateDestructableLoc(integer objectid209, location loc152, real facing215, real scale202, integer variation176) returns destructable{ 
    bj_lastCreatedDestructable368 = CreateDestructable(objectid209, GetLocationX(loc152), GetLocationY(loc152), facing215, scale202, variation176)
    return bj_lastCreatedDestructable368
}


function CreateDestructable(integer objectid102, real x782, real y206, real face466, real scale119, integer variation176) returns destructable{ 
}


function UnitDamageTargetBJ(unit whichUnit322, unit target175, real amount226, attacktype whichAttack186, damagetype whichDamage647) returns boolean{ 
    return UnitDamageTarget(whichUnit322, target175, amount226, true, false, whichAttack186, whichDamage647, WEAPON_TYPE_WHOKNOWS179)
}


function UnitDamageTarget(unit whichUnit645, widget target180, real amount639, boolean attack261, boolean ranged968, attacktype attackType200, damagetype damageType300, weapontype weaponType253) returns boolean{ 
}


function UnitDamagePointLoc(unit whichUnit213, real delay914, real radius876, location loc120, real amount126, attacktype whichAttack149, damagetype whichDamage159) returns boolean{ 
    return UnitDamagePoint(whichUnit213, delay914, radius876, GetLocationX(loc120), GetLocationY(loc120), amount126, true, false, whichAttack149, whichDamage159, WEAPON_TYPE_WHOKNOWS179)
}


function UnitDamagePoint(unit whichUnit248, real delay328, real radius119, real x210, real y880, real amount246, boolean attack202, boolean ranged181, attacktype attackType158, damagetype damageType241, weapontype weaponType167) returns boolean{ 
}


function SetUnitUseFoodBJ(boolean enable169, unit whichUnit272) returns void{ 
    SetUnitUseFood(whichUnit272, enable169)
}


function SetUnitUseFood(unit whichUnit277, boolean useFood263) returns void{ 
}


function RemoveUnitFromStockBJ(integer unitId115, unit whichUnit215) returns void{ 
    RemoveUnitFromStock(whichUnit215, unitId115)
}


function RemoveUnitFromStock(unit whichUnit685, integer unitId157) returns void{ 
}


function RemoveItemFromStockBJ(integer itemId208, unit whichUnit139) returns void{ 
    RemoveItemFromStock(whichUnit139, itemId208)
}


function AddUnitToStockBJ(integer unitId315, unit whichUnit134, integer currentStock149, integer stockMax312) returns void{ 
    AddUnitToStock(whichUnit134, unitId315, currentStock149, stockMax312)
}


function AddUnitToStock(unit whichUnit324, integer unitId115, integer currentStock300, integer stockMax158) returns void{ 
}


function AddItemToStockBJ(integer itemId108, unit whichUnit311, integer currentStock212, integer stockMax327) returns void{ 
    AddItemToStock(whichUnit311, itemId108, currentStock212, stockMax327)
}


function SetUnitPositionLocFacingLocBJ(unit whichUnit299, location loc214, location lookAt753) returns void{ 
    SetUnitPositionLoc(whichUnit299, loc214)
    SetUnitFacing(whichUnit299, AngleBetweenPoints(loc214, lookAt753))
}


function SetUnitPositionLoc(unit whichUnit218, location whichLocation305) returns void{ 
}


function SetUnitFacing(unit whichUnit293, real facingAngle275) returns void{ 
}


function SetUnitPositionLocFacingBJ(unit whichUnit213, location loc383, real facing641) returns void{ 
    SetUnitPositionLoc(whichUnit213, loc383)
    SetUnitFacing(whichUnit213, facing641)
}


function GetLastReplacedUnitBJ() returns unit{ 
    return bj_lastReplacedUnit242
}


function ReplaceUnitBJ(unit whichUnit106, integer newUnitId139, integer unitStateMethod140) returns unit{ 
    local unit oldUnit284
    local unit newUnit143
    local boolean wasHidden161
    local integer index315
    local item indexItem173
    local real oldRatio175
    oldUnit284 = whichUnit106
    null
    null
    null
    null
    null
    if (oldUnit284 == null){
        bj_lastReplacedUnit242 = oldUnit284
        return oldUnit284
    } else {
    }
    wasHidden161 = IsUnitHidden(oldUnit284)
    ShowUnit(oldUnit284, false)
    if (newUnitId139 == 1969713004){
        newUnit143 = CreateBlightedGoldmine(GetOwningPlayer(oldUnit284), GetUnitX(oldUnit284), GetUnitY(oldUnit284), GetUnitFacing(oldUnit284))
    } else {
        newUnit143 = CreateUnit(GetOwningPlayer(oldUnit284), newUnitId139, GetUnitX(oldUnit284), GetUnitY(oldUnit284), GetUnitFacing(oldUnit284))
    }
    if (unitStateMethod140 == bj_UNIT_STATE_METHOD_RELATIVE162){
        if (GetUnitState(oldUnit284, UNIT_STATE_MAX_LIFE244) > 0.){
            oldRatio175 = (GetUnitState(oldUnit284, UNIT_STATE_LIFE243) / GetUnitState(oldUnit284, UNIT_STATE_MAX_LIFE244))
            SetUnitState(newUnit143, UNIT_STATE_LIFE243, (oldRatio175 * GetUnitState(newUnit143, UNIT_STATE_MAX_LIFE244)))
        } else {
        }
        if ((GetUnitState(oldUnit284, UNIT_STATE_MAX_MANA256) > 0.) and (GetUnitState(newUnit143, UNIT_STATE_MAX_MANA256) > 0.)){
            oldRatio175 = (GetUnitState(oldUnit284, UNIT_STATE_MANA132) / GetUnitState(oldUnit284, UNIT_STATE_MAX_MANA256))
            SetUnitState(newUnit143, UNIT_STATE_MANA132, (oldRatio175 * GetUnitState(newUnit143, UNIT_STATE_MAX_MANA256)))
        } else {
        }
    } else {
        if (unitStateMethod140 == bj_UNIT_STATE_METHOD_ABSOLUTE324){
            SetUnitState(newUnit143, UNIT_STATE_LIFE243, GetUnitState(oldUnit284, UNIT_STATE_LIFE243))
            if (GetUnitState(newUnit143, UNIT_STATE_MAX_MANA256) > 0.){
                SetUnitState(newUnit143, UNIT_STATE_MANA132, GetUnitState(oldUnit284, UNIT_STATE_MANA132))
            } else {
            }
        } else {
            if (unitStateMethod140 == bj_UNIT_STATE_METHOD_DEFAULTS144){
            } else {
                if (unitStateMethod140 == bj_UNIT_STATE_METHOD_MAXIMUM138){
                    SetUnitState(newUnit143, UNIT_STATE_LIFE243, GetUnitState(newUnit143, UNIT_STATE_MAX_LIFE244))
                    SetUnitState(newUnit143, UNIT_STATE_MANA132, GetUnitState(newUnit143, UNIT_STATE_MAX_MANA256))
                } else {
                }
            }
        }
    }
    SetResourceAmount(newUnit143, GetResourceAmount(oldUnit284))
    if (IsUnitType(oldUnit284, UNIT_TYPE_HERO219) and IsUnitType(newUnit143, UNIT_TYPE_HERO219)){
        SetHeroXP(newUnit143, GetHeroXP(oldUnit284), false)
        index315 = 0
        loop {
            indexItem173 = UnitItemInSlot(oldUnit284, index315)
            if (indexItem173 != null){
                UnitRemoveItem(oldUnit284, indexItem173)
                UnitAddItem(newUnit143, indexItem173)
            } else {
            }
            index315 = (index315 + 1)
            exitwhen (index315 >= bj_MAX_INVENTORY971)
        }
    } else {
    }
    if wasHidden161{
        KillUnit(oldUnit284)
        RemoveUnit(oldUnit284)
    } else {
        RemoveUnit(oldUnit284)
    }
    bj_lastReplacedUnit242 = newUnit143
    return newUnit143
}


function ShowUnit(unit whichUnit188, boolean show224) returns void{ 
}


function GetUnitFacing(unit whichUnit115) returns real{ 
}


function GetUnitState(unit whichUnit403, unitstate whichUnitState335) returns real{ 
}


function SetUnitState(unit whichUnit112, unitstate whichUnitState206, real newVal803) returns void{ 
}


function GetHeroXP(unit whichHero103) returns integer{ 
}


function SetHeroXP(unit whichHero319, integer newXpVal154, boolean showEyeCandy156) returns void{ 
}


function UnitItemInSlot(unit whichUnit140, integer itemSlot869) returns item{ 
}


function UnitRemoveItem(unit whichUnit285, item whichItem268) returns void{ 
}


function UnitAddItem(unit whichUnit205, item whichItem260) returns boolean{ 
}


function KillUnit(unit whichUnit167) returns void{ 
}


function IsUnitIllusionBJ(unit whichUnit127) returns boolean{ 
    return IsUnitIllusion(whichUnit127)
}


function IsUnitIllusion(unit whichUnit223) returns boolean{ 
}


function IsUnitLoadedBJ(unit whichUnit287) returns boolean{ 
    return IsUnitLoaded(whichUnit287)
}


function IsUnitLoaded(unit whichUnit387) returns boolean{ 
}


function IsUnitInTransportBJ(unit whichUnit177, unit whichTransport218) returns boolean{ 
    return IsUnitInTransport(whichUnit177, whichTransport218)
}


function IsUnitInTransport(unit whichUnit208, unit whichTransport271) returns boolean{ 
}


function GetLoadedUnitBJ() returns unit{ 
    return GetLoadedUnit()
}


function GetLoadedUnit() returns unit{ 
}


function GetTransportUnitBJ() returns unit{ 
    return GetTransportUnit()
}


function GetTransportUnit() returns unit{ 
}


function ExplodeUnitBJ(unit whichUnit116) returns void{ 
    SetUnitExploded(whichUnit116, true)
    KillUnit(whichUnit116)
}


function SetUnitExploded(unit whichUnit345, boolean exploded528) returns void{ 
}


function SetUnitExplodedBJ(unit whichUnit318, boolean exploded295) returns void{ 
    SetUnitExploded(whichUnit318, exploded295)
}


function UnitMakeAbilityPermanent(unit whichUnit959, boolean permanent251, integer abilityId200) returns boolean{ 
}


function UnitAddTypeBJ(unittype whichType223, unit whichUnit121) returns boolean{ 
    return UnitAddType(whichUnit121, whichType223)
}


function UnitAddType(unit whichUnit109, unittype whichUnitType295) returns boolean{ 
}


function UnitRemoveTypeBJ(unittype whichType198, unit whichUnit305) returns boolean{ 
    return UnitRemoveType(whichUnit305, whichType198)
}


function UnitRemoveType(unit whichUnit157, unittype whichUnitType333) returns boolean{ 
}


function UnitAddAbility(unit whichUnit390, integer abilityId173) returns boolean{ 
}


function UnitRemoveAbilityBJ(integer abilityId252, unit whichUnit289) returns boolean{ 
    return UnitRemoveAbility(whichUnit289, abilityId252)
}


function UnitRemoveAbility(unit whichUnit130, integer abilityId226) returns boolean{ 
}


function UnitCountBuffsExBJ(integer polarity139, integer resist289, unit whichUnit714, boolean bTLife816, boolean bAura407) returns integer{ 
    local boolean bPos310
    local boolean bNeg198
    local boolean bMagic211
    local boolean bPhys116
    bPos310 = ((polarity139 == bj_BUFF_POLARITY_EITHER450) or (polarity139 == bj_BUFF_POLARITY_POSITIVE181))
    bNeg198 = ((polarity139 == bj_BUFF_POLARITY_EITHER450) or (polarity139 == bj_BUFF_POLARITY_NEGATIVE239))
    bMagic211 = ((resist289 == bj_BUFF_RESIST_BOTH110) or (resist289 == bj_BUFF_RESIST_MAGIC678))
    bPhys116 = ((resist289 == bj_BUFF_RESIST_BOTH110) or (resist289 == bj_BUFF_RESIST_PHYSICAL316))
    return UnitCountBuffsEx(whichUnit714, bPos310, bNeg198, bMagic211, bPhys116, bTLife816, bAura407, false)
}


function UnitCountBuffsEx(unit whichUnit635, boolean removePositive194, boolean removeNegative959, boolean magic150, boolean physical287, boolean timedLife895, boolean aura208, boolean autoDispel313) returns integer{ 
}


function UnitRemoveBuffsExBJ(integer polarity220, integer resist115, unit whichUnit141, boolean bTLife227, boolean bAura161) returns void{ 
    local boolean bPos315
    local boolean bNeg242
    local boolean bMagic266
    local boolean bPhys178
    bPos315 = ((polarity220 == bj_BUFF_POLARITY_EITHER450) or (polarity220 == bj_BUFF_POLARITY_POSITIVE181))
    bNeg242 = ((polarity220 == bj_BUFF_POLARITY_EITHER450) or (polarity220 == bj_BUFF_POLARITY_NEGATIVE239))
    bMagic266 = ((resist115 == bj_BUFF_RESIST_BOTH110) or (resist115 == bj_BUFF_RESIST_MAGIC678))
    bPhys178 = ((resist115 == bj_BUFF_RESIST_BOTH110) or (resist115 == bj_BUFF_RESIST_PHYSICAL316))
    UnitRemoveBuffsEx(whichUnit141, bPos315, bNeg242, bMagic266, bPhys178, bTLife227, bAura161, false)
}


function UnitRemoveBuffsEx(unit whichUnit307, boolean removePositive310, boolean removeNegative121, boolean magic312, boolean physical937, boolean timedLife318, boolean aura317, boolean autoDispel276) returns void{ 
}


function UnitRemoveBuffsBJ(integer buffType146, unit whichUnit968) returns void{ 
    if (buffType146 == bj_REMOVEBUFFS_POSITIVE128){
        UnitRemoveBuffs(whichUnit968, true, false)
    } else {
        if (buffType146 == bj_REMOVEBUFFS_NEGATIVE930){
            UnitRemoveBuffs(whichUnit968, false, true)
        } else {
            if (buffType146 == bj_REMOVEBUFFS_ALL166){
                UnitRemoveBuffs(whichUnit968, true, true)
            } else {
                if (buffType146 == bj_REMOVEBUFFS_NONTLIFE142){
                    UnitRemoveBuffsEx(whichUnit968, true, true, false, false, false, true, false)
                } else {
                }
            }
        }
    }
}


function UnitRemoveBuffs(unit whichUnit266, boolean removePositive308, boolean removeNegative216) returns void{ 
}


function UnitShareVisionBJ(boolean share158, unit whichUnit205, player whichPlayer996) returns void{ 
    UnitShareVision(whichUnit205, whichPlayer996, share158)
}


function UnitShareVision(unit whichUnit315, player whichPlayer444, boolean share262) returns void{ 
}


function UnitApplyTimedLifeBJ(real duration183, integer buffId167, unit whichUnit232) returns void{ 
    UnitApplyTimedLife(whichUnit232, buffId167, duration183)
}


function UnitApplyTimedLife(unit whichUnit284, integer buffId280, real duration221) returns void{ 
}


function UnitPauseTimedLifeBJ(boolean flag971, unit whichUnit347) returns void{ 
    UnitPauseTimedLife(whichUnit347, flag971)
}


function UnitPauseTimedLife(unit whichUnit592, boolean flag715) returns void{ 
}


function IsUnitPausedBJ(unit whichUnit967) returns boolean{ 
    return IsUnitPaused(whichUnit967)
}


function IsUnitPaused(unit whichHero188) returns boolean{ 
}


function PauseUnitBJ(boolean pause324, unit whichUnit270) returns void{ 
    PauseUnit(whichUnit270, pause324)
}


function PauseUnit(unit whichUnit108, boolean flag308) returns void{ 
}


function PauseAllUnitsBJ(boolean pause100) returns void{ 
    local integer index177
    local player indexPlayer342
    local group g103
    null
    null
    null
    bj_pauseAllUnitsFlag257 = pause100
    g103 = CreateGroup()
    index177 = 0
    loop {
        indexPlayer342 = Player(index177)
        if (GetPlayerController(indexPlayer342) == MAP_CONTROL_COMPUTER169){
            PauseCompAI(indexPlayer342, pause100)
        } else {
        }
        GroupEnumUnitsOfPlayer(g103, indexPlayer342, null)
        ForGroup(g103, function PauseAllUnitsBJEnum)
        GroupClear(g103)
        index177 = (index177 + 1)
        exitwhen (index177 == bj_MAX_PLAYER_SLOTS561)
    }
    DestroyGroup(g103)
}


function PauseCompAI(player p268, boolean pause105) returns void{ 
}


function PauseAllUnitsBJEnum() returns void{ 
    PauseUnit(GetEnumUnit(), bj_pauseAllUnitsFlag257)
}


function DoesUnitGenerateAlarms(unit whichUnit289) returns boolean{ 
    return (not UnitIgnoreAlarmToggled(whichUnit289))
}


function UnitIgnoreAlarmToggled(unit whichUnit981) returns boolean{ 
}


function UnitGenerateAlarms(unit whichUnit698, boolean generate350) returns boolean{ 
    return UnitIgnoreAlarm(whichUnit698, (not generate350))
}


function UnitIgnoreAlarm(unit whichUnit860, boolean flag103) returns boolean{ 
}


function EnableCreepSleepBJ(boolean enable715) returns void{ 
    SetPlayerState(Player(PLAYER_NEUTRAL_AGGRESSIVE113), PLAYER_STATE_NO_CREEP_SLEEP559, IntegerTertiaryOp(enable715, 0, 1))
    if (not enable715){
        WakePlayerUnits(Player(PLAYER_NEUTRAL_AGGRESSIVE113))
    } else {
    }
}


function WakePlayerUnits(player whichPlayer192) returns void{ 
    local group g294
    g294 = CreateGroup()
    GroupEnumUnitsOfPlayer(g294, whichPlayer192, null)
    ForGroup(g294, function WakePlayerUnitsEnum)
    DestroyGroup(g294)
}


function WakePlayerUnitsEnum() returns void{ 
    UnitWakeUp(GetEnumUnit())
}


function UnitWakeUp(unit whichUnit280) returns void{ 
}


function UnitIsSleepingBJ(unit whichUnit172) returns boolean{ 
    return UnitIsSleeping(whichUnit172)
}


function UnitIsSleeping(unit whichUnit244) returns boolean{ 
}


function UnitWakeUpBJ(unit whichUnit107) returns void{ 
    UnitWakeUp(whichUnit107)
}


function UnitCanSleepBJ(unit whichUnit217) returns boolean{ 
    return UnitCanSleep(whichUnit217)
}


function UnitCanSleep(unit whichUnit325) returns boolean{ 
}


function UnitSetCanSleepBJ(unit whichUnit165, boolean canSleep123) returns void{ 
    UnitAddSleep(whichUnit165, canSleep123)
}


function UnitAddSleep(unit whichUnit168, boolean add187) returns void{ 
}


function SetUnitAcquireRangeBJ(unit whichUnit100, real acquireRange169) returns void{ 
    SetUnitAcquireRange(whichUnit100, acquireRange169)
}


function SetUnitAcquireRange(unit whichUnit208, real newAcquireRange244) returns void{ 
}


function SetUnitBlendTimeBJ(unit whichUnit211, real blendTime126) returns void{ 
    SetUnitBlendTime(whichUnit211, blendTime126)
}


function SetUnitBlendTime(unit whichUnit286, real blendTime201) returns void{ 
}


function GetUnitDefaultPropWindowBJ(unit whichUnit101) returns real{ 
    return GetUnitDefaultPropWindow(whichUnit101)
}


function GetUnitDefaultPropWindow(unit whichUnit320) returns real{ 
}


function GetUnitPropWindowBJ(unit whichUnit412) returns real{ 
    return (GetUnitPropWindow(whichUnit412) * bj_RADTODEG169)
}


function GetUnitPropWindow(unit whichUnit278) returns real{ 
}


function SetUnitPropWindowBJ(unit whichUnit730, real propWindow194) returns void{ 
    local real angle216
    angle216 = propWindow194
    if (angle216 <= 0.){
        angle216 = 1.
    } else {
        if (angle216 >= 360.){
            angle216 = 359.
        } else {
        }
    }
    angle216 = (angle216 * bj_DEGTORAD321)
    SetUnitPropWindow(whichUnit730, angle216)
}


function SetUnitPropWindow(unit whichUnit161, real newPropWindowAngle410) returns void{ 
}


function SetUnitTurnSpeedBJ(unit whichUnit649, real turnSpeed197) returns void{ 
    SetUnitTurnSpeed(whichUnit649, turnSpeed197)
}


function SetUnitTurnSpeed(unit whichUnit164, real newTurnSpeed129) returns void{ 
}


function SetUnitFlyHeightBJ(unit whichUnit181, real newHeight102, real rate270) returns void{ 
    SetUnitFlyHeight(whichUnit181, newHeight102, rate270)
}


function SetUnitFlyHeight(unit whichUnit637, real newHeight317, real rate359) returns void{ 
}


function GetAttackedUnitBJ() returns unit{ 
    return GetTriggerUnit()
}


function IssueUpgradeOrderByIdBJ(unit whichUnit726, integer techId685) returns boolean{ 
    return IssueImmediateOrderById(whichUnit726, techId685)
}


function IssueImmediateOrderById(unit whichUnit154, integer order204) returns boolean{ 
}


function GroupTrainOrderByIdBJ(group g327, integer unitId328) returns boolean{ 
    return GroupImmediateOrderById(g327, unitId328)
}


function GroupImmediateOrderById(group whichGroup166, integer order726) returns boolean{ 
}


function IssueTrainOrderByIdBJ(unit whichUnit241, integer unitId209) returns boolean{ 
    return IssueImmediateOrderById(whichUnit241, unitId209)
}


function IssueBuildOrderByIdLocBJ(unit whichPeon129, integer unitId737, location loc186) returns boolean{ 
    if (unitId737 == 1969713004){
        return IssueHauntOrderAtLocBJ(whichPeon129, loc186)
    } else {
        return IssueBuildOrderById(whichPeon129, unitId737, GetLocationX(loc186), GetLocationY(loc186))
    }
}


function IssueHauntOrderAtLocBJ(unit whichPeon248, location loc751) returns boolean{ 
    local group g761
    local unit goldMine308
    g761 = null
    goldMine308 = null
    g761 = CreateGroup()
    GroupEnumUnitsInRangeOfLoc(g761, loc751, (2. * bj_CELLWIDTH174), filterIssueHauntOrderAtLocBJ298)
    goldMine308 = FirstOfGroup(g761)
    DestroyGroup(g761)
    if (goldMine308 == null){
        return false
    } else {
    }
    return IssueTargetOrderById(whichPeon248, 1969713004, goldMine308)
}


function IssueBuildOrderById(unit whichPeon212, integer unitId217, real x166, real y672) returns boolean{ 
}


function FirstOfGroup(group whichGroup144) returns unit{ 
}


function IssueTargetOrderById(unit whichUnit137, integer order216, widget targetWidget298) returns boolean{ 
}


function ShowUnitShow(unit whichUnit575) returns void{ 
    if (IsUnitType(whichUnit575, UNIT_TYPE_HERO219) and IsUnitDeadBJ(whichUnit575)){
        return %nothing%
    } else {
    }
    ShowUnit(whichUnit575, true)
}


function ShowUnitHide(unit whichUnit491) returns void{ 
    ShowUnit(whichUnit491, false)
}


function IsUnitHiddenBJ(unit whichUnit160) returns boolean{ 
    return IsUnitHidden(whichUnit160)
}


function IsUnitGroupInRectBJ(group g898, rect r728) returns boolean{ 
    bj_isUnitGroupInRectResult251 = true
    bj_isUnitGroupInRectRect131 = r728
    ForGroup(g898, function IsUnitGroupInRectBJEnum)
    return bj_isUnitGroupInRectResult251
}


function IsUnitGroupInRectBJEnum() returns void{ 
    if (not RectContainsUnit(bj_isUnitGroupInRectRect131, GetEnumUnit())){
        bj_isUnitGroupInRectResult251 = false
    } else {
    }
}


function RectContainsUnit(rect r297, unit whichUnit128) returns boolean{ 
    return RectContainsCoords(r297, GetUnitX(whichUnit128), GetUnitY(whichUnit128))
}


function IsUnitGroupEmptyBJ(group g276) returns boolean{ 
    local boolean wantDestroy250
    wantDestroy250 = bj_wantDestroyGroup103
    bj_wantDestroyGroup103 = false
    bj_isUnitGroupEmptyResult333 = true
    ForGroup(g276, function IsUnitGroupEmptyBJEnum)
    if wantDestroy250{
        DestroyGroup(g276)
    } else {
    }
    return bj_isUnitGroupEmptyResult333
}


function IsUnitGroupEmptyBJEnum() returns void{ 
    bj_isUnitGroupEmptyResult333 = false
}


function IsUnitGroupDeadBJ(group g320) returns boolean{ 
    local boolean wantDestroy309
    wantDestroy309 = bj_wantDestroyGroup103
    bj_wantDestroyGroup103 = false
    bj_isUnitGroupDeadResult577 = true
    ForGroup(g320, function IsUnitGroupDeadBJEnum)
    if wantDestroy309{
        DestroyGroup(g320)
    } else {
    }
    return bj_isUnitGroupDeadResult577
}


function IsUnitGroupDeadBJEnum() returns void{ 
    if (not IsUnitDeadBJ(GetEnumUnit())){
        bj_isUnitGroupDeadResult577 = false
    } else {
    }
}


function SetUnitManaPercentBJ(unit whichUnit293, real percent321) returns void{ 
    SetUnitState(whichUnit293, UNIT_STATE_MANA132, ((GetUnitState(whichUnit293, UNIT_STATE_MAX_MANA256) * RMaxBJ(0., percent321)) * 0.01))
}


function SetUnitLifePercentBJ(unit whichUnit170, real percent252) returns void{ 
    SetUnitState(whichUnit170, UNIT_STATE_LIFE243, ((GetUnitState(whichUnit170, UNIT_STATE_MAX_LIFE244) * RMaxBJ(0., percent252)) * 0.01))
}


function SetUnitManaBJ(unit whichUnit271, real newValue637) returns void{ 
    SetUnitState(whichUnit271, UNIT_STATE_MANA132, RMaxBJ(0., newValue637))
}


function SetUnitLifeBJ(unit whichUnit211, real newValue234) returns void{ 
    SetUnitState(whichUnit211, UNIT_STATE_LIFE243, RMaxBJ(0., newValue234))
}


function SelectUnitRemoveForPlayer(unit whichUnit935, player whichPlayer255) returns void{ 
    if (GetLocalPlayer() == whichPlayer255){
        SelectUnit(whichUnit935, false)
    } else {
    }
}


function SelectUnit(unit whichUnit173, boolean flag643) returns void{ 
}


function SelectUnitAddForPlayer(unit whichUnit118, player whichPlayer158) returns void{ 
    if (GetLocalPlayer() == whichPlayer158){
        SelectUnit(whichUnit118, true)
    } else {
    }
}


function SelectGroupForPlayerBJ(group g114, player whichPlayer293) returns void{ 
    if (GetLocalPlayer() == whichPlayer293){
        ClearSelection()
        ForGroup(g114, function SelectGroupBJEnum)
    } else {
    }
}


function ClearSelection() returns void{ 
}


function SelectGroupBJEnum() returns void{ 
    SelectUnit(GetEnumUnit(), true)
}


function SelectUnitForPlayerSingle(unit whichUnit332, player whichPlayer133) returns void{ 
    if (GetLocalPlayer() == whichPlayer133){
        ClearSelection()
        SelectUnit(whichUnit332, true)
    } else {
    }
}


function ClearSelectionForPlayer(player whichPlayer809) returns void{ 
    if (GetLocalPlayer() == whichPlayer809){
        ClearSelection()
    } else {
    }
}


function SelectUnitRemove(unit whichUnit198) returns void{ 
    SelectUnit(whichUnit198, false)
}


function SelectUnitAdd(unit whichUnit330) returns void{ 
    SelectUnit(whichUnit330, true)
}


function SelectGroupBJ(group g321) returns void{ 
    ClearSelection()
    ForGroup(g321, function SelectGroupBJEnum)
}


function SelectUnitSingle(unit whichUnit210) returns void{ 
    ClearSelection()
    SelectUnit(whichUnit210, true)
}


function GetUnitManaPercent(unit whichUnit318) returns real{ 
    return GetUnitStatePercent(whichUnit318, UNIT_STATE_MANA132, UNIT_STATE_MAX_MANA256)
}


function GetUnitStatePercent(unit whichUnit250, unitstate whichState171, unitstate whichMaxState739) returns real{ 
    local real value225
    local real maxValue233
    value225 = GetUnitState(whichUnit250, whichState171)
    maxValue233 = GetUnitState(whichUnit250, whichMaxState739)
    if ((whichUnit250 == null) or (maxValue233 == 0.)){
        return 0.0
    } else {
    }
    return ((value225 / maxValue233) * 100.0)
}


function GetUnitLifePercent(unit whichUnit222) returns real{ 
    return GetUnitStatePercent(whichUnit222, UNIT_STATE_LIFE243, UNIT_STATE_MAX_LIFE244)
}


function GetUnitStateSwap(unitstate whichState107, unit whichUnit247) returns real{ 
    return GetUnitState(whichUnit247, whichState107)
}


function CreatePermanentCorpseLocBJ(integer style265, integer unitid293, player whichPlayer995, location loc144, real facing168) returns unit{ 
    bj_lastCreatedUnit179 = CreateCorpse(whichPlayer995, unitid293, GetLocationX(loc144), GetLocationY(loc144), facing168)
    SetUnitBlendTime(bj_lastCreatedUnit179, 0.)
    if (style265 == bj_CORPSETYPE_FLESH293){
        SetUnitAnimation(bj_lastCreatedUnit179, "decay flesh")
        GroupAddUnit(bj_suspendDecayFleshGroup189, bj_lastCreatedUnit179)
    } else {
        if (style265 == bj_CORPSETYPE_BONE265){
            SetUnitAnimation(bj_lastCreatedUnit179, "decay bone")
            GroupAddUnit(bj_suspendDecayBoneGroup160, bj_lastCreatedUnit179)
        } else {
            SetUnitAnimation(bj_lastCreatedUnit179, "decay bone")
            GroupAddUnit(bj_suspendDecayBoneGroup160, bj_lastCreatedUnit179)
        }
    }
    TimerStart(bj_delayedSuspendDecayTimer199, 0.05, false, null)
    return bj_lastCreatedUnit179
}


function CreateCorpse(player whichPlayer229, integer unitid542, real x201, real y100, real face564) returns unit{ 
}


function DelayedSuspendDecay() returns void{ 
    local group boneGroup189
    local group fleshGroup333
    null
    null
    boneGroup189 = bj_suspendDecayBoneGroup160
    fleshGroup333 = bj_suspendDecayFleshGroup189
    bj_suspendDecayBoneGroup160 = CreateGroup()
    bj_suspendDecayFleshGroup189 = CreateGroup()
    ForGroup(fleshGroup333, function DelayedSuspendDecayStopAnimEnum)
    ForGroup(boneGroup189, function DelayedSuspendDecayStopAnimEnum)
    TriggerSleepAction(bj_CORPSE_MAX_DEATH_TIME729)
    ForGroup(fleshGroup333, function DelayedSuspendDecayFleshEnum)
    ForGroup(boneGroup189, function DelayedSuspendDecayBoneEnum)
    TriggerSleepAction(0.05)
    ForGroup(fleshGroup333, function DelayedSuspendDecayStopAnimEnum)
    DestroyGroup(boneGroup189)
    DestroyGroup(fleshGroup333)
}


function DelayedSuspendDecayStopAnimEnum() returns void{ 
    local unit enumUnit988
    enumUnit988 = GetEnumUnit()
    if (GetUnitState(enumUnit988, UNIT_STATE_LIFE243) <= 0.){
        SetUnitTimeScale(enumUnit988, 0.0001)
    } else {
    }
}


function DelayedSuspendDecayFleshEnum() returns void{ 
    local unit enumUnit324
    enumUnit324 = GetEnumUnit()
    if (GetUnitState(enumUnit324, UNIT_STATE_LIFE243) <= 0.){
        UnitSuspendDecay(enumUnit324, true)
        SetUnitTimeScale(enumUnit324, 10.0)
        SetUnitAnimation(enumUnit324, "decay flesh")
    } else {
    }
}


function DelayedSuspendDecayBoneEnum() returns void{ 
    local unit enumUnit194
    enumUnit194 = GetEnumUnit()
    if (GetUnitState(enumUnit194, UNIT_STATE_LIFE243) <= 0.){
        UnitSuspendDecay(enumUnit194, true)
        SetUnitTimeScale(enumUnit194, 0.0001)
    } else {
    }
}


function UnitSuspendDecay(unit whichUnit153, boolean suspend119) returns void{ 
}


function UnitSuspendDecayBJ(boolean suspend135, unit whichUnit349) returns void{ 
    UnitSuspendDecay(whichUnit349, suspend135)
}


function CreateCorpseLocBJ(integer unitid703, player whichPlayer701, location loc238) returns unit{ 
    bj_lastCreatedUnit179 = CreateCorpse(whichPlayer701, unitid703, GetLocationX(loc238), GetLocationY(loc238), GetRandomReal(0., 360.))
    return bj_lastCreatedUnit179
}


function GetLastCreatedGroup() returns group{ 
    bj_groupLastCreatedDest109 = CreateGroup()
    ForGroup(bj_lastCreatedGroup263, function GetLastCreatedGroupEnum)
    return bj_groupLastCreatedDest109
}


function GetLastCreatedGroupEnum() returns void{ 
    GroupAddUnit(bj_groupLastCreatedDest109, GetEnumUnit())
}


function CreateNUnitsAtLocFacingLocBJ(integer count304, integer unitId178, player whichPlayer171, location loc324, location lookAt275) returns group{ 
    return CreateNUnitsAtLoc(count304, unitId178, whichPlayer171, loc324, AngleBetweenPoints(loc324, lookAt275))
}


function CreateNUnitsAtLoc(integer count224, integer unitId311, player whichPlayer296, location loc307, real face203) returns group{ 
    GroupClear(bj_lastCreatedGroup263)
    loop {
        count224 = (count224 - 1)
        exitwhen (count224 < 0)
        CreateUnitAtLocSaveLast(whichPlayer296, unitId311, loc307, face203)
        GroupAddUnit(bj_lastCreatedGroup263, bj_lastCreatedUnit179)
    }
    return bj_lastCreatedGroup263
}


function CreateUnitAtLocSaveLast(player id809, integer unitid231, location loc636, real face193) returns unit{ 
    if (unitid231 == 1969713004){
        bj_lastCreatedUnit179 = CreateBlightedGoldmine(id809, GetLocationX(loc636), GetLocationY(loc636), face193)
    } else {
        bj_lastCreatedUnit179 = CreateUnitAtLoc(id809, unitid231, loc636, face193)
    }
    return bj_lastCreatedUnit179
}


function GetLastCreatedUnit() returns unit{ 
    return bj_lastCreatedUnit179
}


function GetKillingUnitBJ() returns unit{ 
    return GetKillingUnit()
}


function GetKillingUnit() returns unit{ 
}


function GetIssuedOrderIdBJ() returns integer{ 
    return GetIssuedOrderId()
}


function GetIssuedOrderId() returns integer{ 
}


function OrderId2StringBJ(integer orderId126) returns string{ 
    local string orderString674
    null
    orderString674 = OrderId2String(orderId126)
    if (orderString674 != null){
        return orderString674
    } else {
    }
    orderString674 = UnitId2String(orderId126)
    if (orderString674 != null){
        return orderString674
    } else {
    }
    return ""
}


function OrderId2String(integer orderId478) returns string{ 
}


function UnitId2String(integer unitId236) returns string{ 
}


function String2OrderIdBJ(string orderIdString143) returns integer{ 
    local integer orderId286
    null
    orderId286 = OrderId(orderIdString143)
    if (orderId286 != 0){
        return orderId286
    } else {
    }
    orderId286 = UnitId(orderIdString143)
    if (orderId286 != 0){
        return orderId286
    } else {
    }
    return 0
}


function OrderId(string orderIdString305) returns integer{ 
}


function UnitId(string unitIdString703) returns integer{ 
}


function UnitId2StringBJ(integer unitId238) returns string{ 
    local string unitString295
    unitString295 = UnitId2String(unitId238)
    if (unitString295 != null){
        return unitString295
    } else {
    }
    return ""
}


function String2UnitIdBJ(string unitIdString328) returns integer{ 
    return UnitId(unitIdString328)
}


function UnitId2OrderIdBJ(integer unitId252) returns integer{ 
    return unitId252
}


function CheckItemcodeStatus(integer itemId165, integer status234) returns boolean{ 
    if (status234 == bj_ITEMCODE_STATUS_POWERUP268){
        return IsItemIdPowerup(itemId165)
    } else {
        if (status234 == bj_ITEMCODE_STATUS_SELLABLE153){
            return IsItemIdSellable(itemId165)
        } else {
            if (status234 == bj_ITEMCODE_STATUS_PAWNABLE103){
                return IsItemIdPawnable(itemId165)
            } else {
                return false
            }
        }
    }
}


function IsItemIdPowerup(integer itemId268) returns boolean{ 
}


function IsItemIdPawnable(integer itemId900) returns boolean{ 
}


function CheckItemStatus(item whichItem294, integer status129) returns boolean{ 
    if (status129 == bj_ITEM_STATUS_HIDDEN257){
        return (not IsItemVisible(whichItem294))
    } else {
        if (status129 == bj_ITEM_STATUS_OWNED293){
            return IsItemOwned(whichItem294)
        } else {
            if (status129 == bj_ITEM_STATUS_INVULNERABLE279){
                return IsItemInvulnerable(whichItem294)
            } else {
                if (status129 == bj_ITEM_STATUS_POWERUP136){
                    return IsItemPowerup(whichItem294)
                } else {
                    if (status129 == bj_ITEM_STATUS_SELLABLE105){
                        return IsItemSellable(whichItem294)
                    } else {
                        if (status129 == bj_ITEM_STATUS_PAWNABLE184){
                            return IsItemPawnable(whichItem294)
                        } else {
                            return false
                        }
                    }
                }
            }
        }
    }
}


function IsItemVisible(item whichItem254) returns boolean{ 
}


function IsItemOwned(item whichItem236) returns boolean{ 
}


function IsItemInvulnerable(item whichItem365) returns boolean{ 
}


function IsItemPowerup(item whichItem207) returns boolean{ 
}


function IsItemSellable(item whichItem196) returns boolean{ 
}


function IsItemPawnable(item whichItem256) returns boolean{ 
}


function RandomItemInRectSimpleBJ(rect r430) returns item{ 
    return RandomItemInRectBJ(r430, null)
}


function RandomItemInRectBJ(rect r110, boolexpr filter135) returns item{ 
    bj_itemRandomConsidered246 = 0
    bj_itemRandomCurrentPick164 = null
    EnumItemsInRect(r110, filter135, function RandomItemInRectBJEnum)
    DestroyBoolExpr(filter135)
    return bj_itemRandomCurrentPick164
}


function RandomItemInRectBJEnum() returns void{ 
    bj_itemRandomConsidered246 = (bj_itemRandomConsidered246 + 1)
    if (GetRandomInt(1, bj_itemRandomConsidered246) == 1){
        bj_itemRandomCurrentPick164 = GetEnumItem()
    } else {
    }
}


function EnumItemsInRectBJ(rect r979, code actionFunc273) returns void{ 
    EnumItemsInRect(r979, null, actionFunc273)
}


function ChooseRandomCreepBJ(integer level137) returns integer{ 
    return ChooseRandomCreep(level137)
}


function ChooseRandomCreep(integer level700) returns integer{ 
}


function ChooseRandomNPBuildingBJ() returns integer{ 
    return ChooseRandomNPBuilding()
}


function ChooseRandomNPBuilding() returns integer{ 
}


function ChooseRandomItemExBJ(integer level211, itemtype whichType456) returns integer{ 
    return ChooseRandomItemEx(whichType456, level211)
}


function ChooseRandomItemBJ(integer level227) returns integer{ 
    return ChooseRandomItem(level227)
}


function ChooseRandomItem(integer level220) returns integer{ 
}


function IsItemHiddenBJ(item whichItem130) returns boolean{ 
    return (not IsItemVisible(whichItem130))
}


function SetItemVisibleBJ(boolean show169, item whichItem285) returns void{ 
    SetItemVisible(whichItem285, show169)
}


function SetItemVisible(item whichItem169, boolean show397) returns void{ 
}


function SetItemPlayerBJ(item whichItem139, player whichPlayer326, boolean changeColor244) returns void{ 
    SetItemPlayer(whichItem139, whichPlayer326, changeColor244)
}


function SetItemPlayer(item whichItem323, player whichPlayer891, boolean changeColor179) returns void{ 
}


function SetItemDroppableBJ(item whichItem181, boolean flag401) returns void{ 
    SetItemDroppable(whichItem181, flag401)
}


function SetItemDroppable(item i269, boolean flag668) returns void{ 
}


function SetItemDropOnDeathBJ(item whichItem391, boolean flag146) returns void{ 
    SetItemDropOnDeath(whichItem391, flag146)
}


function SetItemDropOnDeath(item whichItem790, boolean flag633) returns void{ 
}


function SetItemInvulnerableBJ(item whichItem107, boolean flag862) returns void{ 
    SetItemInvulnerable(whichItem107, flag862)
}


function SetItemInvulnerable(item whichItem303, boolean flag221) returns void{ 
}


function UnitInventorySizeBJ(unit whichUnit290) returns integer{ 
    return UnitInventorySize(whichUnit290)
}


function UnitInventorySize(unit whichUnit100) returns integer{ 
}


function UnitInventoryCount(unit whichUnit310) returns integer{ 
    local integer index362
    local integer count237
    index362 = 0
    count237 = 0
    loop {
        if (UnitItemInSlot(whichUnit310, index362) != null){
            count237 = (count237 + 1)
        } else {
        }
        index362 = (index362 + 1)
        exitwhen (index362 >= bj_MAX_INVENTORY971)
    }
    return count237
}


function UnitHasItemOfTypeBJ(unit whichUnit500, integer itemId860) returns boolean{ 
    return (GetInventoryIndexOfItemTypeBJ(whichUnit500, itemId860) > 0)
}


function GetInventoryIndexOfItemTypeBJ(unit whichUnit131, integer itemId159) returns integer{ 
    local integer index167
    local item indexItem288
    null
    null
    index167 = 0
    loop {
        indexItem288 = UnitItemInSlot(whichUnit131, index167)
        if ((indexItem288 != null) and (GetItemTypeId(indexItem288) == itemId159)){
            return (index167 + 1)
        } else {
        }
        index167 = (index167 + 1)
        exitwhen (index167 >= bj_MAX_INVENTORY971)
    }
    return 0
}


function GetItemOfTypeFromUnitBJ(unit whichUnit323, integer itemId278) returns item{ 
    local integer index100
    index100 = GetInventoryIndexOfItemTypeBJ(whichUnit323, itemId278)
    if (index100 == 0){
        return null
    } else {
        return UnitItemInSlot(whichUnit323, (index100 - 1))
    }
}


function UnitItemInSlotBJ(unit whichUnit891, integer itemSlot303) returns item{ 
    return UnitItemInSlot(whichUnit891, (itemSlot303 - 1))
}


function UnitUseItemPointLoc(unit whichUnit262, item whichItem199, location loc309) returns boolean{ 
    return UnitUseItemPoint(whichUnit262, whichItem199, GetLocationX(loc309), GetLocationY(loc309))
}


function UnitUseItemPoint(unit whichUnit138, item whichItem148, real x185, real y219) returns boolean{ 
}


function UnitUseItemDestructable(unit whichUnit306, item whichItem658, widget target300) returns boolean{ 
    return UnitUseItemTarget(whichUnit306, whichItem658, target300)
}


function UnitUseItemTarget(unit whichUnit243, item whichItem273, widget target158) returns boolean{ 
}


function UnitDropItemTargetBJ(unit whichUnit326, item whichItem281, widget target105) returns boolean{ 
    return UnitDropItemTarget(whichUnit326, whichItem281, target105)
}


function UnitDropItemTarget(unit whichUnit164, item whichItem306, widget target291) returns boolean{ 
}


function UnitDropItemSlotBJ(unit whichUnit202, item whichItem165, integer slot276) returns boolean{ 
    return UnitDropItemSlot(whichUnit202, whichItem165, (slot276 - 1))
}


function UnitDropItemSlot(unit whichUnit196, item whichItem179, integer slot332) returns boolean{ 
}


function UnitDropItemPointLoc(unit whichUnit459, item whichItem200, location loc190) returns boolean{ 
    return UnitDropItemPoint(whichUnit459, whichItem200, GetLocationX(loc190), GetLocationY(loc190))
}


function UnitDropItemPoint(unit whichUnit204, item whichItem155, real x303, real y272) returns boolean{ 
}


function UnitDropItemPointBJ(unit whichUnit114, item whichItem230, real x401, real y869) returns boolean{ 
    return UnitDropItemPoint(whichUnit114, whichItem230, x401, y869)
}


function ModifyHeroSkillPoints(unit whichHero219, integer modifyMethod341, integer value247) returns boolean{ 
    if (modifyMethod341 == bj_MODIFYMETHOD_ADD299){
        return UnitModifySkillPoints(whichHero219, value247)
    } else {
        if (modifyMethod341 == bj_MODIFYMETHOD_SUB263){
            return UnitModifySkillPoints(whichHero219, (- value247))
        } else {
            if (modifyMethod341 == bj_MODIFYMETHOD_SET275){
                return UnitModifySkillPoints(whichHero219, (value247 - GetHeroSkillPoints(whichHero219)))
            } else {
                return false
            }
        }
    }
}


function UnitModifySkillPoints(unit whichHero335, integer skillPointDelta100) returns boolean{ 
}


function GetHeroSkillPoints(unit whichHero181) returns integer{ 
}


function ModifyHeroStat(integer whichStat236, unit whichHero315, integer modifyMethod331, integer value321) returns void{ 
    if (modifyMethod331 == bj_MODIFYMETHOD_ADD299){
        SetHeroStat(whichHero315, whichStat236, (GetHeroStatBJ(whichStat236, whichHero315, false) + value321))
    } else {
        if (modifyMethod331 == bj_MODIFYMETHOD_SUB263){
            SetHeroStat(whichHero315, whichStat236, (GetHeroStatBJ(whichStat236, whichHero315, false) - value321))
        } else {
            if (modifyMethod331 == bj_MODIFYMETHOD_SET275){
                SetHeroStat(whichHero315, whichStat236, value321)
            } else {
            }
        }
    }
}


function GetHeroStatBJ(integer whichStat330, unit whichHero204, boolean includeBonuses738) returns integer{ 
    if (whichStat330 == bj_HEROSTAT_STR680){
        return GetHeroStr(whichHero204, includeBonuses738)
    } else {
        if (whichStat330 == bj_HEROSTAT_AGI136){
            return GetHeroAgi(whichHero204, includeBonuses738)
        } else {
            if (whichStat330 == bj_HEROSTAT_INT149){
                return GetHeroInt(whichHero204, includeBonuses738)
            } else {
                return 0
            }
        }
    }
}


function SetHeroStat(unit whichHero254, integer whichStat331, integer value269) returns void{ 
    if (value269 <= 0){
        return %nothing%
    } else {
    }
    if (whichStat331 == bj_HEROSTAT_STR680){
        SetHeroStr(whichHero254, value269, true)
    } else {
        if (whichStat331 == bj_HEROSTAT_AGI136){
            SetHeroAgi(whichHero254, value269, true)
        } else {
            if (whichStat331 == bj_HEROSTAT_INT149){
                SetHeroInt(whichHero254, value269, true)
            } else {
            }
        }
    }
}


function SetHeroStr(unit whichHero128, integer newStr838, boolean permanent566) returns void{ 
}


function SetHeroAgi(unit whichHero331, integer newAgi161, boolean permanent114) returns void{ 
}


function SetHeroInt(unit whichHero156, integer newInt322, boolean permanent218) returns void{ 
}


function GetHeroStr(unit whichHero136, boolean includeBonuses959) returns integer{ 
}


function GetHeroAgi(unit whichHero279, boolean includeBonuses244) returns integer{ 
}


function GetHeroInt(unit whichHero114, boolean includeBonuses188) returns integer{ 
}


function GetPlayerHandicapBJ(player whichPlayer198) returns real{ 
    return (GetPlayerHandicap(whichPlayer198) * 100.)
}


function GetPlayerHandicap(player whichPlayer210) returns real{ 
}


function SetPlayerHandicapBJ(player whichPlayer768, real handicapPercent603) returns void{ 
    SetPlayerHandicap(whichPlayer768, (handicapPercent603 * 0.01))
}


function SetPlayerHandicap(player whichPlayer128, real handicap774) returns void{ 
}


function GetPlayerHandicapXPBJ(player whichPlayer127) returns real{ 
    return (GetPlayerHandicapXP(whichPlayer127) * 100.)
}


function GetPlayerHandicapXP(player whichPlayer188) returns real{ 
}


function SetPlayerHandicapXPBJ(player whichPlayer316, real handicapPercent104) returns void{ 
    SetPlayerHandicapXP(whichPlayer316, (handicapPercent104 * 0.01))
}


function SetPlayerHandicapXP(player whichPlayer200, real handicap176) returns void{ 
}


function SuspendHeroXPBJ(boolean flag249, unit whichHero221) returns void{ 
    SuspendHeroXP(whichHero221, (not flag249))
}


function SuspendHeroXP(unit whichHero179, boolean flag335) returns void{ 
}


function GetLearnedSkillBJ() returns integer{ 
    return GetLearnedSkill()
}


function GetLearnedSkill() returns integer{ 
}


function SetItemPositionLoc(item whichItem189, location loc254) returns void{ 
    SetItemPosition(whichItem189, GetLocationX(loc254), GetLocationY(loc254))
}


function GetLastRemovedItem() returns item{ 
    return bj_lastRemovedItem243
}


function GetLastCreatedItem() returns item{ 
    return bj_lastCreatedItem120
}


function CreateItemLoc(integer itemId498, location loc270) returns item{ 
    bj_lastCreatedItem120 = CreateItem(itemId498, GetLocationX(loc270), GetLocationY(loc270))
    return bj_lastCreatedItem120
}


function UnitRemoveItemFromSlotSwapped(integer itemSlot307, unit whichHero477) returns item{ 
    bj_lastRemovedItem243 = UnitRemoveItemFromSlot(whichHero477, (itemSlot307 - 1))
    return bj_lastRemovedItem243
}


function UnitRemoveItemFromSlot(unit whichUnit119, integer itemSlot254) returns item{ 
}


function UnitRemoveItemSwapped(item whichItem169, unit whichHero294) returns void{ 
    bj_lastRemovedItem243 = whichItem169
    UnitRemoveItem(whichHero294, whichItem169)
}


function UnitAddItemByIdSwapped(integer itemId947, unit whichHero470) returns item{ 
    bj_lastCreatedItem120 = CreateItem(itemId947, GetUnitX(whichHero470), GetUnitY(whichHero470))
    UnitAddItem(whichHero470, bj_lastCreatedItem120)
    return bj_lastCreatedItem120
}


function UnitAddItemSwapped(item whichItem599, unit whichHero103) returns boolean{ 
    return UnitAddItem(whichHero103, whichItem599)
}


function UnitRemoveBuffBJ(integer buffcode228, unit whichUnit313) returns boolean{ 
    return UnitRemoveAbility(whichUnit313, buffcode228)
}


function UnitHasBuffBJ(unit whichUnit131, integer buffcode132) returns boolean{ 
    return (GetUnitAbilityLevel(whichUnit131, buffcode132) > 0)
}


function GetUnitAbilityLevel(unit whichUnit226, integer abilcode184) returns integer{ 
}


function GetUnitAbilityLevelSwapped(integer abilcode148, unit whichUnit234) returns integer{ 
    return GetUnitAbilityLevel(whichUnit234, abilcode148)
}


function SetUnitAbilityLevelSwapped(integer abilcode320, unit whichUnit272, integer level173) returns integer{ 
    return SetUnitAbilityLevel(whichUnit272, abilcode320, level173)
}


function SetUnitAbilityLevel(unit whichUnit471, integer abilcode100, integer level678) returns integer{ 
}


function IncUnitAbilityLevelSwapped(integer abilcode951, unit whichUnit330) returns integer{ 
    return IncUnitAbilityLevel(whichUnit330, abilcode951)
}


function IncUnitAbilityLevel(unit whichUnit197, integer abilcode777) returns integer{ 
}


function DecUnitAbilityLevelSwapped(integer abilcode158, unit whichUnit259) returns integer{ 
    return DecUnitAbilityLevel(whichUnit259, abilcode158)
}


function DecUnitAbilityLevel(unit whichUnit233, integer abilcode315) returns integer{ 
}


function SetHeroLevelBJ(unit whichHero123, integer newLevel198, boolean showEyeCandy748) returns void{ 
    local integer oldLevel214
    oldLevel214 = GetHeroLevel(whichHero123)
    if (newLevel198 > oldLevel214){
        SetHeroLevel(whichHero123, newLevel198, showEyeCandy748)
    } else {
        if (newLevel198 < oldLevel214){
            UnitStripHeroLevel(whichHero123, (oldLevel214 - newLevel198))
        } else {
        }
    }
}


function GetHeroLevel(unit whichHero251) returns integer{ 
}


function SetHeroLevel(unit whichHero310, integer level295, boolean showEyeCandy323) returns void{ 
}


function UnitStripHeroLevel(unit whichHero192, integer howManyLevels544) returns boolean{ 
}


function AddHeroXPSwapped(integer xpToAdd308, unit whichHero287, boolean showEyeCandy887) returns void{ 
    AddHeroXP(whichHero287, xpToAdd308, showEyeCandy887)
}


function AddHeroXP(unit whichHero923, integer xpToAdd714, boolean showEyeCandy330) returns void{ 
}


function SetItemLifeBJ(widget whichWidget303, real life235) returns void{ 
    SetWidgetLife(whichWidget303, life235)
}


function SetWidgetLife(widget whichWidget588, real newLife233) returns void{ 
}


function GetItemLifeBJ(widget whichWidget288) returns real{ 
    return GetWidgetLife(whichWidget288)
}


function GetWidgetLife(widget whichWidget286) returns real{ 
}


function GetItemLoc(item whichItem194) returns location{ 
    return Location(GetItemX(whichItem194), GetItemY(whichItem194))
}


function GetLastCreatedEffectBJ() returns effect{ 
    return bj_lastCreatedEffect331
}


function DestroyEffectBJ(effect whichEffect265) returns void{ 
    DestroyEffect(whichEffect265)
}


function DestroyEffect(effect whichEffect240) returns void{ 
}


function AddSpecialEffectTargetUnitBJ(string attachPointName517, widget targetWidget194, string modelName529) returns effect{ 
    bj_lastCreatedEffect331 = AddSpecialEffectTarget(modelName529, targetWidget194, attachPointName517)
    return bj_lastCreatedEffect331
}


function AddSpecialEffectTarget(string modelName150, widget targetWidget997, string attachPointName493) returns effect{ 
}


function AddSpecialEffectLocBJ(location where151, string modelName137) returns effect{ 
    bj_lastCreatedEffect331 = AddSpecialEffectLoc(modelName137, where151)
    return bj_lastCreatedEffect331
}


function AddSpecialEffectLoc(string modelName154, location where182) returns effect{ 
}


function SetAmbientNightSound(string inLabel334) returns void{ 
    local real ToD251
    null
    if (bj_nightAmbientSound584 != null){
        StopSound(bj_nightAmbientSound584, true, true)
    } else {
    }
    bj_nightAmbientSound584 = CreateMIDISound(inLabel334, 20, 20)
    ToD251 = GetTimeOfDay()
    if ((ToD251 < bj_TOD_DAWN461) or (ToD251 >= bj_TOD_DUSK626)){
        StartSound(bj_nightAmbientSound584)
    } else {
    }
}


function CreateMIDISound(string soundLabel300, integer fadeInRate130, integer fadeOutRate960) returns sound{ 
}


function SetAmbientDaySound(string inLabel105) returns void{ 
    local real ToD803
    null
    if (bj_dayAmbientSound283 != null){
        StopSound(bj_dayAmbientSound283, true, true)
    } else {
    }
    bj_dayAmbientSound283 = CreateMIDISound(inLabel105, 20, 20)
    ToD803 = GetTimeOfDay()
    if ((ToD803 >= bj_TOD_DAWN461) and (ToD803 < bj_TOD_DUSK626)){
        StartSound(bj_dayAmbientSound283)
    } else {
    }
}


function VolumeGroupSetVolume(volumegroup vgroup325, real scale181) returns void{ 
}


function SetStackedSoundBJ(boolean add296, sound soundHandle186, rect r914) returns void{ 
    local real width271
    local real height288
    width271 = (GetRectMaxX(r914) - GetRectMinX(r914))
    height288 = (GetRectMaxY(r914) - GetRectMinY(r914))
    SetSoundPosition(soundHandle186, GetRectCenterX(r914), GetRectCenterY(r914), 0.)
    if add296{
        RegisterStackedSound(soundHandle186, true, width271, height288)
    } else {
        UnregisterStackedSound(soundHandle186, true, width271, height288)
    }
}


function SetSoundPosition(sound soundHandle330, real x685, real y171, real z472) returns void{ 
}


function RegisterStackedSound(sound soundHandle391, boolean byPosition332, real rectwidth106, real rectheight292) returns void{ 
}


function UnregisterStackedSound(sound soundHandle769, boolean byPosition258, real rectwidth311, real rectheight324) returns void{ 
}


function ClearMapMusicBJ() returns void{ 
    ClearMapMusic()
}


function ClearMapMusic() returns void{ 
}


function SetMapMusicRandomBJ(string musicName578) returns void{ 
    SetMapMusic(musicName578, true, 0)
}


function SetMapMusic(string musicName247, boolean random299, integer index242) returns void{ 
}


function SetMapMusicIndexedBJ(string musicName105, integer index270) returns void{ 
    SetMapMusic(musicName105, false, index270)
}


function TriggerWaitForSound(sound s296, real offset170) returns void{ 
}


function GetSoundIsPlayingBJ(sound soundHandle258) returns boolean{ 
    return (GetSoundIsLoading(soundHandle258) or GetSoundIsPlaying(soundHandle258))
}


function GetSoundIsLoading(sound soundHandle479) returns boolean{ 
}


function GetSoundIsPlaying(sound soundHandle262) returns boolean{ 
}


function VolumeGroupResetBJ() returns void{ 
    if bj_gameStarted254{
        VolumeGroupResetImmediateBJ()
    } else {
        TimerStart(bj_volumeGroupsTimer114, bj_GAME_STARTED_THRESHOLD567, false, function VolumeGroupResetImmediateBJ)
    }
}


function VolumeGroupResetImmediateBJ() returns void{ 
    VolumeGroupReset()
}


function SetSpeechVolumeGroupsBJ() returns void{ 
    if bj_gameStarted254{
        SetSpeechVolumeGroupsImmediateBJ()
    } else {
        TimerStart(bj_volumeGroupsTimer114, bj_GAME_STARTED_THRESHOLD567, false, function SetSpeechVolumeGroupsImmediateBJ)
    }
}


function SetSpeechVolumeGroupsImmediateBJ() returns void{ 
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_UNITMOVEMENT321, bj_SPEECH_VOLUME_UNITMOVEMENT318)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_UNITSOUNDS114, bj_SPEECH_VOLUME_UNITSOUNDS133)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_COMBAT203, bj_SPEECH_VOLUME_COMBAT174)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_SPELLS203, bj_SPEECH_VOLUME_SPELLS851)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_UI180, bj_SPEECH_VOLUME_UI666)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_MUSIC144, bj_SPEECH_VOLUME_MUSIC298)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_AMBIENTSOUNDS160, bj_SPEECH_VOLUME_AMBIENTSOUNDS969)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_FIRE160, bj_SPEECH_VOLUME_FIRE215)
}


function SetCineModeVolumeGroupsImmediateBJ() returns void{ 
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_UNITMOVEMENT321, bj_CINEMODE_VOLUME_UNITMOVEMENT298)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_UNITSOUNDS114, bj_CINEMODE_VOLUME_UNITSOUNDS222)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_COMBAT203, bj_CINEMODE_VOLUME_COMBAT446)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_SPELLS203, bj_CINEMODE_VOLUME_SPELLS205)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_UI180, bj_CINEMODE_VOLUME_UI193)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_MUSIC144, bj_CINEMODE_VOLUME_MUSIC105)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_AMBIENTSOUNDS160, bj_CINEMODE_VOLUME_AMBIENTSOUNDS249)
    VolumeGroupSetVolume(SOUND_VOLUMEGROUP_FIRE160, bj_CINEMODE_VOLUME_FIRE275)
}


function VolumeGroupSetVolumeBJ(volumegroup vgroup169, real percent541) returns void{ 
    VolumeGroupSetVolume(vgroup169, (percent541 * 0.01))
}


function GetLastPlayedMusic() returns string{ 
    return bj_lastPlayedMusic108
}


function GetLastPlayedSound() returns sound{ 
    return bj_lastPlayedSound153
}


function GetSoundFileDurationBJ(string musicFileName256) returns real{ 
    return (I2R(GetSoundFileDuration(musicFileName256)) * 0.001)
}


function GetSoundFileDuration(string musicFileName798) returns integer{ 
}


function GetSoundDuration(sound soundHandle679) returns integer{ 
}


function SetMusicVolumeBJ(real volumePercent289) returns void{ 
    SetMusicVolume(PercentToInt(volumePercent289, 127))
}


function PercentToInt(real percentage252, integer max810) returns integer{ 
    local integer result314
    result314 = R2I(((percentage252 * I2R(max810)) * 0.01))
    if (result314 < 0){
        result314 = 0
    } else {
        if (result314 > max810){
            result314 = max810
        } else {
        }
    }
    return result314
}


function SetMusicVolume(integer volume245) returns void{ 
}


function ResumeMusicBJ() returns void{ 
    ResumeMusic()
}


function ResumeMusic() returns void{ 
}


function StopMusicBJ(boolean fadeOut248) returns void{ 
    StopMusic(fadeOut248)
}


function StopMusic(boolean fadeOut912) returns void{ 
}


function EndThematicMusicBJ() returns void{ 
    EndThematicMusic()
}


function SetThematicMusicOffsetBJ(real newOffset118) returns void{ 
    SetThematicMusicPlayPosition(R2I((newOffset118 * 1000.)))
}


function SetThematicMusicPlayPosition(integer millisecs128) returns void{ 
}


function PlayThematicMusicExBJ(string musicName201, real startingOffset233) returns void{ 
    PlayThematicMusicEx(musicName201, R2I((startingOffset233 * 1000.)))
}


function PlayThematicMusicEx(string musicFileName226, integer frommsecs240) returns void{ 
}


function PlayThematicMusicBJ(string musicName104) returns void{ 
    PlayThematicMusic(musicName104)
}


function PlayThematicMusic(string musicFileName162) returns void{ 
}


function SetMusicOffsetBJ(real newOffset926) returns void{ 
    SetMusicPlayPosition(R2I((newOffset926 * 1000.)))
}


function SetMusicPlayPosition(integer millisecs295) returns void{ 
}


function PlayMusicExBJ(string musicFileName142, real startingOffset118, real fadeInTime313) returns void{ 
    bj_lastPlayedMusic108 = musicFileName142
    PlayMusicEx(musicFileName142, R2I((startingOffset118 * 1000.)), R2I((fadeInTime313 * 1000.)))
}


function PlayMusicEx(string musicName486, integer frommsecs129, integer fadeinmsecs115) returns void{ 
}


function PlayMusicBJ(string musicFileName303) returns void{ 
    bj_lastPlayedMusic108 = musicFileName303
    PlayMusic(musicFileName303)
}


function PlayMusic(string musicName279) returns void{ 
}


function PlaySoundFromOffsetBJ(sound soundHandle119, real volumePercent217, real startingOffset319) returns void{ 
    SetSoundVolumeBJ(soundHandle119, volumePercent217)
    PlaySoundBJ(soundHandle119)
    SetSoundOffsetBJ(startingOffset319, soundHandle119)
}


function SetSoundVolumeBJ(sound soundHandle142, real volumePercent994) returns void{ 
    SetSoundVolume(soundHandle142, PercentToInt(volumePercent994, 127))
}


function SetSoundOffsetBJ(real newOffset274, sound soundHandle992) returns void{ 
    SetSoundPlayPosition(soundHandle992, R2I((newOffset274 * 1000.)))
}


function PlaySoundOnUnitBJ(sound soundHandle613, real volumePercent139, unit whichUnit332) returns void{ 
    AttachSoundToUnitBJ(soundHandle613, whichUnit332)
    SetSoundVolumeBJ(soundHandle613, volumePercent139)
    PlaySoundBJ(soundHandle613)
}


function AttachSoundToUnitBJ(sound soundHandle194, unit whichUnit830) returns void{ 
    AttachSoundToUnit(soundHandle194, whichUnit830)
}


function PlaySoundAtPointBJ(sound soundHandle222, real volumePercent310, location loc105, real z157) returns void{ 
    SetSoundPositionLocBJ(soundHandle222, loc105, z157)
    SetSoundVolumeBJ(soundHandle222, volumePercent310)
    PlaySoundBJ(soundHandle222)
}


function SetSoundPositionLocBJ(sound soundHandle279, location loc131, real z575) returns void{ 
    SetSoundPosition(soundHandle279, GetLocationX(loc131), GetLocationY(loc131), z575)
}


function KillSoundWhenDoneBJ(sound soundHandle311) returns void{ 
    KillSoundWhenDone(soundHandle311)
}


function KillSoundWhenDone(sound soundHandle438) returns void{ 
}


function SetSoundConeAnglesBJ(sound soundHandle474, real inside261, real outside110, real outsideVolumePercent125) returns void{ 
    SetSoundConeAngles(soundHandle474, inside261, outside110, PercentToInt(outsideVolumePercent125, 127))
}


function SetSoundConeAngles(sound soundHandle149, real inside120, real outside163, integer outsideVolume254) returns void{ 
}


function AttachSoundToUnit(sound soundHandle268, unit whichUnit175) returns void{ 
}


function SetSoundPitchBJ(sound soundHandle942, real pitch615) returns void{ 
    SetSoundPitch(soundHandle942, pitch615)
}


function SetSoundPitch(sound soundHandle193, real pitch157) returns void{ 
}


function SetSoundDistanceCutoffBJ(sound soundHandle583, real cutoff836) returns void{ 
    SetSoundDistanceCutoff(soundHandle583, cutoff836)
}


function SetSoundDistanceCutoff(sound soundHandle209, real cutoff165) returns void{ 
}


function SetSoundPlayPosition(sound soundHandle113, integer millisecs104) returns void{ 
}


function SetSoundVolume(sound soundHandle222, integer volume116) returns void{ 
}


function GetLastCreatedUbersplat() returns ubersplat{ 
    return bj_lastCreatedUbersplat172
}


function ShowUbersplatBJ(boolean flag224, ubersplat whichSplat241) returns void{ 
    ShowUbersplat(whichSplat241, flag224)
}


function ShowUbersplat(ubersplat whichSplat570, boolean flag562) returns void{ 
}


function CreateUbersplatBJ(location where223, string name124, real red280, real green107, real blue265, real alpha188, boolean forcePaused772, boolean noBirthTime254) returns ubersplat{ 
    bj_lastCreatedUbersplat172 = CreateUbersplat(GetLocationX(where223), GetLocationY(where223), name124, PercentTo255(red280), PercentTo255(green107), PercentTo255(blue265), PercentTo255((100.0 - alpha188)), forcePaused772, noBirthTime254)
    return bj_lastCreatedUbersplat172
}


function CreateUbersplat(real x189, real y396, string name179, integer red311, integer green148, integer blue147, integer alpha233, boolean forcePaused236, boolean noBirthTime826) returns ubersplat{ 
}


function GetLastCreatedImage() returns image{ 
    return bj_lastCreatedImage127
}


function SetImageColorBJ(image whichImage576, real red315, real green129, real blue277, real alpha253) returns void{ 
    SetImageColor(whichImage576, PercentTo255(red315), PercentTo255(green129), PercentTo255(blue277), PercentTo255((100.0 - alpha253)))
}


function SetImageColor(image whichImage471, integer red298, integer green155, integer blue586, integer alpha941) returns void{ 
}


function SetImagePositionBJ(image whichImage311, location where140, real zOffset252) returns void{ 
    SetImagePosition(whichImage311, GetLocationX(where140), GetLocationY(where140), zOffset252)
}


function SetImagePosition(image whichImage116, real x130, real y193, real z427) returns void{ 
}


function ShowImageBJ(boolean flag250, image whichImage314) returns void{ 
    ShowImage(whichImage314, flag250)
}


function ShowImage(image whichImage253, boolean flag203) returns void{ 
}


function CreateImageBJ(string file310, real size209, location where248, real zOffset219, integer imageType214) returns image{ 
    bj_lastCreatedImage127 = CreateImage(file310, size209, size209, size209, GetLocationX(where248), GetLocationY(where248), zOffset219, 0., 0., 0., imageType214)
    return bj_lastCreatedImage127
}


function CreateImage(string file301, real sizeX764, real sizeY200, real sizeZ673, real posX825, real posY330, real posZ293, real originX294, real originY163, real originZ299, integer imageType353) returns image{ 
}


function AddUnitAnimationPropertiesBJ(boolean add113, string animProperties182, unit whichUnit930) returns void{ 
    AddUnitAnimationProperties(whichUnit930, animProperties182, add113)
}


function AddUnitAnimationProperties(unit whichUnit597, string animProperties333, boolean add260) returns void{ 
}


function SetDoodadAnimationRectBJ(string animName508, integer doodadID945, rect r232) returns void{ 
    SetDoodadAnimationRect(r232, doodadID945, animName508, false)
}


function SetDoodadAnimationRect(rect r224, integer doodadID313, string animName930, boolean animRandom128) returns void{ 
}


function SetDoodadAnimationBJ(string animName301, integer doodadID286, real radius116, location center243) returns void{ 
    SetDoodadAnimation(GetLocationX(center243), GetLocationY(center243), radius116, doodadID286, false, animName301, false)
}


function SetDoodadAnimation(real x325, real y198, real radius544, integer doodadID307, boolean nearestOnly158, string animName815, boolean animRandom130) returns void{ 
}


function ResetTerrainFogBJ() returns void{ 
    ResetTerrainFog()
}


function ResetTerrainFog() returns void{ 
}


function SetTerrainFogExBJ(integer style297, real zstart112, real zend188, real density223, real red152, real green712, real blue174) returns void{ 
    SetTerrainFogEx(style297, zstart112, zend188, density223, (red152 * 0.01), (green712 * 0.01), (blue174 * 0.01))
}


function SetTerrainFogEx(integer style107, real zstart284, real zend230, real density302, real red282, real green277, real blue236) returns void{ 
}


function UseTimeOfDayBJ(boolean flag614) returns void{ 
    SuspendTimeOfDay((not flag614))
}


function SuspendTimeOfDay(boolean b221) returns void{ 
}


function FogMaskEnableOff() returns void{ 
    FogMaskEnable(false)
}


function FogMaskEnableOn() returns void{ 
    FogMaskEnable(true)
}


function FogEnableOff() returns void{ 
    FogEnable(false)
}


function FogEnableOn() returns void{ 
    FogEnable(true)
}


function GetLastCreatedFogModifier() returns fogmodifier{ 
    return bj_lastCreatedFogModifier211
}


function CreateFogModifierRadiusLocBJ(boolean enabled257, player whichPlayer238, fogstate whichFogState118, location center133, real radius292) returns fogmodifier{ 
    bj_lastCreatedFogModifier211 = CreateFogModifierRadiusLoc(whichPlayer238, whichFogState118, center133, radius292, true, false)
    if enabled257{
        FogModifierStart(bj_lastCreatedFogModifier211)
    } else {
    }
    return bj_lastCreatedFogModifier211
}


function CreateFogModifierRadiusLoc(player forWhichPlayer273, fogstate whichState932, location center217, real radius273, boolean useSharedVision748, boolean afterUnits299) returns fogmodifier{ 
}


function FogModifierStart(fogmodifier whichFogModifier141) returns void{ 
}


function CreateFogModifierRectBJ(boolean enabled362, player whichPlayer131, fogstate whichFogState206, rect r982) returns fogmodifier{ 
    bj_lastCreatedFogModifier211 = CreateFogModifierRect(whichPlayer131, whichFogState206, r982, true, false)
    if enabled362{
        FogModifierStart(bj_lastCreatedFogModifier211)
    } else {
    }
    return bj_lastCreatedFogModifier211
}


function CreateFogModifierRect(player forWhichPlayer111, fogstate whichState296, rect where113, boolean useSharedVision410, boolean afterUnits132) returns fogmodifier{ 
}


function CreateFogModifierRadiusLocSimple(player whichPlayer251, fogstate whichFogState239, location center116, real radius251, boolean afterUnits929) returns fogmodifier{ 
    bj_lastCreatedFogModifier211 = CreateFogModifierRadiusLoc(whichPlayer251, whichFogState239, center116, radius251, true, afterUnits929)
    return bj_lastCreatedFogModifier211
}


function CreateFogModifierRectSimple(player whichPlayer190, fogstate whichFogState326, rect r148, boolean afterUnits246) returns fogmodifier{ 
    bj_lastCreatedFogModifier211 = CreateFogModifierRect(whichPlayer190, whichFogState326, r148, true, afterUnits246)
    return bj_lastCreatedFogModifier211
}


function SetWaterBaseColorBJ(real red187, real green332, real blue278, real transparency188) returns void{ 
    SetWaterBaseColor(PercentTo255(red187), PercentTo255(green332), PercentTo255(blue278), PercentTo255((100.0 - transparency188)))
}


function SetWaterBaseColor(integer red499, integer green307, integer blue329, integer alpha104) returns void{ 
}


function SetTerrainPathableBJ(location where225, pathingtype t334, boolean flag332) returns void{ 
    SetTerrainPathable(GetLocationX(where225), GetLocationY(where225), t334, flag332)
}


function SetTerrainPathable(real x239, real y112, pathingtype t322, boolean flag153) returns void{ 
}


function IsTerrainPathableBJ(location where191, pathingtype t601) returns boolean{ 
    return IsTerrainPathable(GetLocationX(where191), GetLocationY(where191), t601)
}


function IsTerrainPathable(real x161, real y989, pathingtype t322) returns boolean{ 
}


function SetTerrainTypeBJ(location where278, integer terrainType125, integer variation679, integer area265, integer shape226) returns void{ 
    SetTerrainType(GetLocationX(where278), GetLocationY(where278), terrainType125, variation679, area265, shape226)
}


function SetTerrainType(real x278, real y164, integer terrainType296, integer variation159, integer area314, integer shape326) returns void{ 
}


function GetTerrainVarianceBJ(location where135) returns integer{ 
    return GetTerrainVariance(GetLocationX(where135), GetLocationY(where135))
}


function GetTerrainVariance(real x243, real y178) returns integer{ 
}


function GetTerrainTypeBJ(location where123) returns integer{ 
    return GetTerrainType(GetLocationX(where123), GetLocationY(where123))
}


function GetTerrainType(real x977, real y130) returns integer{ 
}


function GetTerrainCliffLevelBJ(location where422) returns integer{ 
    return GetTerrainCliffLevel(GetLocationX(where422), GetLocationY(where422))
}


function GetTerrainCliffLevel(real x286, real y272) returns integer{ 
}


function GetAbilitySoundBJ(integer abilcode264, soundtype t150) returns string{ 
    return GetAbilitySoundById(abilcode264, t150)
}


function GetAbilitySoundById(integer abilityId306, soundtype t818) returns string{ 
}


function GetAbilityEffectBJ(integer abilcode226, effecttype t168, integer index188) returns string{ 
    return GetAbilityEffectById(abilcode226, t168, index188)
}


function GetAbilityEffectById(integer abilityId269, effecttype t238, integer index340) returns string{ 
}


function GetLastCreatedLightningBJ() returns lightning{ 
    return bj_lastCreatedLightning304
}


function SetLightningColorBJ(lightning whichBolt250, real r198, real g301, real b527, real a787) returns boolean{ 
    return SetLightningColor(whichBolt250, r198, g301, b527, a787)
}


function SetLightningColor(lightning whichBolt169, real r814, real g311, real b300, real a218) returns boolean{ 
}


function GetLightningColorBBJ(lightning whichBolt967) returns real{ 
    return GetLightningColorB(whichBolt967)
}


function GetLightningColorB(lightning whichBolt321) returns real{ 
}


function GetLightningColorGBJ(lightning whichBolt676) returns real{ 
    return GetLightningColorG(whichBolt676)
}


function GetLightningColorG(lightning whichBolt502) returns real{ 
}


function GetLightningColorRBJ(lightning whichBolt324) returns real{ 
    return GetLightningColorR(whichBolt324)
}


function GetLightningColorR(lightning whichBolt178) returns real{ 
}


function GetLightningColorABJ(lightning whichBolt202) returns real{ 
    return GetLightningColorA(whichBolt202)
}


function GetLightningColorA(lightning whichBolt848) returns real{ 
}


function MoveLightningLoc(lightning whichBolt238, location where1136, location where2558) returns boolean{ 
    return MoveLightningEx(whichBolt238, true, GetLocationX(where1136), GetLocationY(where1136), GetLocationZ(where1136), GetLocationX(where2558), GetLocationY(where2558), GetLocationZ(where2558))
}


function GetLocationZ(location whichLocation268) returns real{ 
}


function MoveLightningEx(lightning whichBolt228, boolean checkVisibility109, real x1766, real y1196, real z1125, real x2256, real y2223, real z2265) returns boolean{ 
}


function DestroyLightningBJ(lightning whichBolt599) returns boolean{ 
    return DestroyLightning(whichBolt599)
}


function DestroyLightning(lightning whichBolt297) returns boolean{ 
}


function AddLightningLoc(string codeName759, location where1932, location where2222) returns lightning{ 
    bj_lastCreatedLightning304 = AddLightningEx(codeName759, true, GetLocationX(where1932), GetLocationY(where1932), GetLocationZ(where1932), GetLocationX(where2222), GetLocationY(where2222), GetLocationZ(where2222))
    return bj_lastCreatedLightning304
}


function AddLightningEx(string codeName527, boolean checkVisibility135, real x1481, real y1163, real z1253, real x2885, real y2266, real z2665) returns lightning{ 
}


function GetLastCreatedTerrainDeformation() returns terraindeformation{ 
    return bj_lastCreatedTerrainDeformation265
}


function TerrainDeformationStopBJ(terraindeformation deformation168, real duration289) returns void{ 
    TerrainDeformStop(deformation168, R2I((duration289 * 1000.)))
}


function TerrainDeformStop(terraindeformation deformation839, integer duration279) returns void{ 
}


function TerrainDeformationRandomBJ(real duration296, location where946, real radius265, real minDelta199, real maxDelta252, real updateInterval243) returns terraindeformation{ 
    bj_lastCreatedTerrainDeformation265 = TerrainDeformRandom(GetLocationX(where946), GetLocationY(where946), radius265, minDelta199, maxDelta252, R2I((duration296 * 1000.)), R2I((updateInterval243 * 1000.)))
    return bj_lastCreatedTerrainDeformation265
}


function TerrainDeformRandom(real x203, real y245, real radius226, real minDelta500, real maxDelta212, integer duration194, integer updateInterval842) returns terraindeformation{ 
}


function TerrainDeformationWaveBJ(real duration217, location source232, location target262, real radius255, real depth505, real trailDelay314) returns terraindeformation{ 
    local real distance418
    local real dirX235
    local real dirY284
    local real speed142
    null
    null
    null
    null
    distance418 = DistanceBetweenPoints(source232, target262)
    if ((distance418 == 0.) or (duration217 <= 0.)){
        return null
    } else {
    }
    dirX235 = ((GetLocationX(target262) - GetLocationX(source232)) / distance418)
    dirY284 = ((GetLocationY(target262) - GetLocationY(source232)) / distance418)
    speed142 = (distance418 / duration217)
    bj_lastCreatedTerrainDeformation265 = TerrainDeformWave(GetLocationX(source232), GetLocationY(source232), dirX235, dirY284, distance418, speed142, radius255, depth505, R2I((trailDelay314 * 1000.)), 1)
    return bj_lastCreatedTerrainDeformation265
}


function TerrainDeformWave(real x254, real y238, real dirX304, real dirY154, real distance262, real speed283, real radius195, real depth293, integer trailTime199, integer count709) returns terraindeformation{ 
}


function TerrainDeformationRippleBJ(real duration945, boolean limitNeg149, location where311, real startRadius180, real endRadius642, real depth193, real wavePeriod201, real waveWidth276) returns terraindeformation{ 
    local real spaceWave178
    local real timeWave146
    local real radiusRatio154
    null
    null
    null
    if (((endRadius642 <= 0.) or (waveWidth276 <= 0.)) or (wavePeriod201 <= 0.)){
        return null
    } else {
    }
    timeWave146 = ((2.0 * duration945) / wavePeriod201)
    spaceWave178 = ((2.0 * endRadius642) / waveWidth276)
    radiusRatio154 = (startRadius180 / endRadius642)
    bj_lastCreatedTerrainDeformation265 = TerrainDeformRipple(GetLocationX(where311), GetLocationY(where311), endRadius642, depth193, R2I((duration945 * 1000.)), 1, spaceWave178, timeWave146, radiusRatio154, limitNeg149)
    return bj_lastCreatedTerrainDeformation265
}


function TerrainDeformRipple(real x670, real y172, real radius644, real depth170, integer duration249, integer count503, real spaceWaves755, real timeWaves184, real radiusStartPct202, boolean limitNeg194) returns terraindeformation{ 
}


function TerrainDeformationCraterBJ(real duration203, boolean permanent287, location where856, real radius245, real depth383) returns terraindeformation{ 
    bj_lastCreatedTerrainDeformation265 = TerrainDeformCrater(GetLocationX(where856), GetLocationY(where856), radius245, depth383, R2I((duration203 * 1000.)), permanent287)
    return bj_lastCreatedTerrainDeformation265
}


function TerrainDeformCrater(real x210, real y228, real radius736, real depth235, integer duration309, boolean permanent172) returns terraindeformation{ 
}


function RemoveWeatherEffectBJ(weathereffect whichWeatherEffect564) returns void{ 
    RemoveWeatherEffect(whichWeatherEffect564)
}


function RemoveWeatherEffect(weathereffect whichEffect106) returns void{ 
}


function GetLastCreatedWeatherEffect() returns weathereffect{ 
    return bj_lastCreatedWeatherEffect313
}


function AddWeatherEffectSaveLast(rect where493, integer effectID397) returns weathereffect{ 
    bj_lastCreatedWeatherEffect313 = AddWeatherEffect(where493, effectID397)
    return bj_lastCreatedWeatherEffect313
}


function AddWeatherEffect(rect where957, integer effectID242) returns weathereffect{ 
}


function TriggerRegisterDestDeathInRegionEvent(trigger trig394, rect r138) returns void{ 
    bj_destInRegionDiesTrig303 = trig394
    bj_destInRegionDiesCount159 = 0
    EnumDestructablesInRect(r138, null, function RegisterDestDeathInRegionEnum)
}


function RegisterDestDeathInRegionEnum() returns void{ 
    bj_destInRegionDiesCount159 = (bj_destInRegionDiesCount159 + 1)
    if (bj_destInRegionDiesCount159 <= bj_MAX_DEST_IN_REGION_EVENTS100){
        TriggerRegisterDeathEvent(bj_destInRegionDiesTrig303, GetEnumDestructable())
    } else {
    }
}


function TriggerRegisterDeathEvent(trigger whichTrigger252, widget whichWidget145) returns event{ 
}


function TriggerRegisterGameSavedEventBJ(trigger trig192) returns event{ 
    return TriggerRegisterGameEvent(trig192, EVENT_GAME_SAVE221)
}


function TriggerRegisterGameLoadedEventBJ(trigger trig171) returns event{ 
    return TriggerRegisterGameEvent(trig171, EVENT_GAME_LOADED229)
}


function TriggerRegisterBuildSubmenuEventBJ(trigger trig224) returns event{ 
    return TriggerRegisterGameEvent(trig224, EVENT_GAME_BUILD_SUBMENU612)
}


function TriggerRegisterShowSkillEventBJ(trigger trig614) returns event{ 
    return TriggerRegisterGameEvent(trig614, EVENT_GAME_SHOW_SKILL194)
}


function TriggerRegisterDialogEventBJ(trigger trig209, dialog whichDialog212) returns event{ 
    return TriggerRegisterDialogEvent(trig209, whichDialog212)
}


function TriggerRegisterDialogEvent(trigger whichTrigger233, dialog whichDialog148) returns event{ 
}


function TriggerRegisterUnitManaEvent(trigger trig212, unit whichUnit100, limitop opcode330, real limitval164) returns event{ 
    return TriggerRegisterUnitStateEvent(trig212, whichUnit100, UNIT_STATE_MANA132, opcode330, limitval164)
}


function TriggerRegisterUnitStateEvent(trigger whichTrigger248, unit whichUnit152, unitstate whichState307, limitop opcode330, real limitval183) returns event{ 
}


function TriggerRegisterUnitLifeEvent(trigger trig100, unit whichUnit823, limitop opcode316, real limitval108) returns event{ 
    return TriggerRegisterUnitStateEvent(trig100, whichUnit823, UNIT_STATE_LIFE243, opcode316, limitval108)
}


function TriggerRegisterUnitInRangeSimple(trigger trig324, real range235, unit whichUnit287) returns event{ 
    return TriggerRegisterUnitInRange(trig324, whichUnit287, range235, null)
}


function TriggerRegisterUnitInRange(trigger whichTrigger196, unit whichUnit195, real range300, boolexpr filter195) returns event{ 
}


function TriggerRegisterDistanceBetweenUnits(trigger trig213, unit whichUnit235, boolexpr condition730, real range322) returns event{ 
    return TriggerRegisterUnitInRange(trig213, whichUnit235, range322, condition730)
}


function TriggerRegisterLeaveRectSimple(trigger trig113, rect r603) returns event{ 
    local region rectRegion286
    rectRegion286 = CreateRegion()
    RegionAddRect(rectRegion286, r603)
    return TriggerRegisterLeaveRegion(trig113, rectRegion286, null)
}


function CreateRegion() returns region{ 
}


function RegionAddRect(region whichRegion287, rect r273) returns void{ 
}


function TriggerRegisterLeaveRegion(trigger whichTrigger298, region whichRegion594, boolexpr filter328) returns event{ 
}


function TriggerRegisterEnterRectSimple(trigger trig526, rect r207) returns event{ 
    local region rectRegion216
    rectRegion216 = CreateRegion()
    RegionAddRect(rectRegion216, r207)
    return TriggerRegisterEnterRegion(trig526, rectRegion216, null)
}


function TriggerRegisterEnterRegion(trigger whichTrigger396, region whichRegion276, boolexpr filter162) returns event{ 
}


function TriggerRegisterLeaveRegionSimple(trigger trig236, region whichRegion263) returns event{ 
    return TriggerRegisterLeaveRegion(trig236, whichRegion263, null)
}


function TriggerRegisterEnterRegionSimple(trigger trig207, region whichRegion100) returns event{ 
    return TriggerRegisterEnterRegion(trig207, whichRegion100, null)
}


function TriggerRegisterGameStateEventTimeOfDay(trigger trig258, limitop opcode182, real limitval164) returns event{ 
    return TriggerRegisterGameStateEvent(trig258, GAME_STATE_TIME_OF_DAY129, opcode182, limitval164)
}


function TriggerRegisterPlayerEventEndCinematic(trigger trig269, player whichPlayer200) returns event{ 
    return TriggerRegisterPlayerEvent(trig269, whichPlayer200, EVENT_PLAYER_END_CINEMATIC298)
}


function TriggerRegisterPlayerEventAllianceChanged(trigger trig622, player whichPlayer496) returns event{ 
    return TriggerRegisterPlayerEvent(trig622, whichPlayer496, EVENT_PLAYER_ALLIANCE_CHANGED187)
}


function TriggerRegisterPlayerEventLeave(trigger trig148, player whichPlayer995) returns event{ 
    return TriggerRegisterPlayerEvent(trig148, whichPlayer995, EVENT_PLAYER_LEAVE205)
}


function TriggerRegisterPlayerEventDefeat(trigger trig745, player whichPlayer155) returns event{ 
    return TriggerRegisterPlayerEvent(trig745, whichPlayer155, EVENT_PLAYER_DEFEAT143)
}


function TriggerRegisterPlayerEventVictory(trigger trig391, player whichPlayer630) returns event{ 
    return TriggerRegisterPlayerEvent(trig391, whichPlayer630, EVENT_PLAYER_VICTORY194)
}


function TriggerRegisterPlayerKeyEventBJ(trigger trig228, player whichPlayer107, integer keType482, integer keKey266) returns event{ 
    if (keType482 == bj_KEYEVENTTYPE_DEPRESS235){
        if (keKey266 == bj_KEYEVENTKEY_LEFT193){
            return TriggerRegisterPlayerEvent(trig228, whichPlayer107, EVENT_PLAYER_ARROW_LEFT_DOWN219)
        } else {
            if (keKey266 == bj_KEYEVENTKEY_RIGHT182){
                return TriggerRegisterPlayerEvent(trig228, whichPlayer107, EVENT_PLAYER_ARROW_RIGHT_DOWN160)
            } else {
                if (keKey266 == bj_KEYEVENTKEY_DOWN165){
                    return TriggerRegisterPlayerEvent(trig228, whichPlayer107, EVENT_PLAYER_ARROW_DOWN_DOWN823)
                } else {
                    if (keKey266 == bj_KEYEVENTKEY_UP536){
                        return TriggerRegisterPlayerEvent(trig228, whichPlayer107, EVENT_PLAYER_ARROW_UP_DOWN489)
                    } else {
                        return null
                    }
                }
            }
        }
    } else {
        if (keType482 == bj_KEYEVENTTYPE_RELEASE324){
            if (keKey266 == bj_KEYEVENTKEY_LEFT193){
                return TriggerRegisterPlayerEvent(trig228, whichPlayer107, EVENT_PLAYER_ARROW_LEFT_UP821)
            } else {
                if (keKey266 == bj_KEYEVENTKEY_RIGHT182){
                    return TriggerRegisterPlayerEvent(trig228, whichPlayer107, EVENT_PLAYER_ARROW_RIGHT_UP143)
                } else {
                    if (keKey266 == bj_KEYEVENTKEY_DOWN165){
                        return TriggerRegisterPlayerEvent(trig228, whichPlayer107, EVENT_PLAYER_ARROW_DOWN_UP107)
                    } else {
                        if (keKey266 == bj_KEYEVENTKEY_UP536){
                            return TriggerRegisterPlayerEvent(trig228, whichPlayer107, EVENT_PLAYER_ARROW_UP_UP139)
                        } else {
                            return null
                        }
                    }
                }
            }
        } else {
            return null
        }
    }
}


function TriggerRegisterPlayerSelectionEventBJ(trigger trig289, player whichPlayer228, boolean selected216) returns event{ 
    if selected216{
        return TriggerRegisterPlayerUnitEvent(trig289, whichPlayer228, EVENT_PLAYER_UNIT_SELECTED785, null)
    } else {
        return TriggerRegisterPlayerUnitEvent(trig289, whichPlayer228, EVENT_PLAYER_UNIT_DESELECTED285, null)
    }
}


function TriggerRegisterAnyUnitEventBJ(trigger trig235, playerunitevent whichEvent418) returns void{ 
    local integer index136
    null
    index136 = 0
    loop {
        TriggerRegisterPlayerUnitEvent(trig235, Player(index136), whichEvent418, null)
        index136 = (index136 + 1)
        exitwhen (index136 == bj_MAX_PLAYER_SLOTS561)
    }
}


function TriggerRegisterPlayerUnitEventSimple(trigger trig271, player whichPlayer106, playerunitevent whichEvent135) returns event{ 
    return TriggerRegisterPlayerUnitEvent(trig271, whichPlayer106, whichEvent135, null)
}


function TriggerRegisterTimerExpireEventBJ(trigger trig321, timer t265) returns event{ 
    return TriggerRegisterTimerExpireEvent(trig321, t265)
}


function TriggerRegisterTimerEventSingle(trigger trig293, real timeout106) returns event{ 
    return TriggerRegisterTimerEvent(trig293, timeout106, false)
}


function TriggerRegisterTimerEvent(trigger whichTrigger257, real timeout247, boolean periodic283) returns event{ 
}


function TriggerRegisterTimerEventPeriodic(trigger trig279, real timeout830) returns event{ 
    return TriggerRegisterTimerEvent(trig279, timeout830, true)
}


function StringHashBJ(string s184) returns integer{ 
    return StringHash(s184)
}


function StringHash(string s531) returns integer{ 
}


function GetHandleIdBJ(handle h250) returns integer{ 
    return GetHandleId(h250)
}


function GetHandleId(handle h764) returns integer{ 
}


function SubStringBJ(string source251, integer start116, integer end866) returns string{ 
    return SubString(source251, (start116 - 1), end866)
}


function SubString(string source272, integer start443, integer end652) returns string{ 
}


function ClearTextMessagesBJ(force toForce137) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), toForce137){
        ClearTextMessages()
    } else {
    }
}


function DisplayTimedTextToForce(force toForce151, real duration207, string message824) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), toForce151){
        DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., duration207, message824)
    } else {
    }
}


function DisplayTextToForce(force toForce135, string message297) returns void{ 
    if IsPlayerInForce(GetLocalPlayer(), toForce135){
        DisplayTextToPlayer(GetLocalPlayer(), 0., 0., message297)
    } else {
    }
}


function DisplayTextToPlayer(player toPlayer265, real x118, real y167, string message255) returns void{ 
}


function CameraSetSmoothingFactor(real factor266) returns void{ 
}


function CameraSetSmoothingFactorBJ(real factor262) returns void{ 
    CameraSetSmoothingFactor(factor262)
}


function SetCameraOrientControllerForPlayerBJ(player whichPlayer112, unit whichUnit296, real xoffset182, real yoffset247) returns void{ 
    if (GetLocalPlayer() == whichPlayer112){
        SetCameraOrientController(whichUnit296, xoffset182, yoffset247)
    } else {
    }
}


function SetCameraOrientController(unit whichUnit106, real xoffset330, real yoffset201) returns void{ 
}


function StopCameraForPlayerBJ(player whichPlayer146) returns void{ 
    if (GetLocalPlayer() == whichPlayer146){
        StopCamera()
    } else {
    }
}


function StopCamera() returns void{ 
}


function SetCameraQuickPositionLoc(location loc168) returns void{ 
    SetCameraQuickPosition(GetLocationX(loc168), GetLocationY(loc168))
}


function SetCameraQuickPosition(real x159, real y173) returns void{ 
}


function AdjustCameraBoundsForPlayerBJ(integer adjustMethod224, player whichPlayer131, real dxWest157, real dxEast192, real dyNorth327, real dySouth219) returns void{ 
    if (GetLocalPlayer() == whichPlayer131){
        AdjustCameraBoundsBJ(adjustMethod224, dxWest157, dxEast192, dyNorth327, dySouth219)
    } else {
    }
}


function AdjustCameraBoundsBJ(integer adjustMethod201, real dxWest742, real dxEast421, real dyNorth304, real dySouth209) returns void{ 
    local real minX245
    local real minY163
    local real maxX331
    local real maxY118
    local real scale192
    minX245 = 0.
    minY163 = 0.
    maxX331 = 0.
    maxY118 = 0.
    scale192 = 0.
    if (adjustMethod201 == bj_CAMERABOUNDS_ADJUST_ADD262){
        scale192 = 1.
    } else {
        if (adjustMethod201 == bj_CAMERABOUNDS_ADJUST_SUB169){
            scale192 = (- 1)
        } else {
            return %nothing%
        }
    }
    minX245 = (GetCameraBoundMinX() - (scale192 * dxWest742))
    maxX331 = (GetCameraBoundMaxX() + (scale192 * dxEast421))
    minY163 = (GetCameraBoundMinY() - (scale192 * dySouth209))
    maxY118 = (GetCameraBoundMaxY() + (scale192 * dyNorth304))
    if (maxX331 < minX245){
        minX245 = ((minX245 + maxX331) * 0.5)
        maxX331 = minX245
    } else {
    }
    if (maxY118 < minY163){
        minY163 = ((minY163 + maxY118) * 0.5)
        maxY118 = minY163
    } else {
    }
    SetCameraBounds(minX245, minY163, minX245, maxY118, maxX331, maxY118, maxX331, minY163)
}


function SetCameraBounds(real x1141, real y1247, real x2324, real y2244, real x3136, real y3168, real x4944, real y4213) returns void{ 
}


function SetCameraBoundsToRectForPlayerBJ(player whichPlayer875, rect r268) returns void{ 
    if (GetLocalPlayer() == whichPlayer875){
        SetCameraBoundsToRect(r268)
    } else {
    }
}


function SetCameraBoundsToRect(rect r171) returns void{ 
    local real minX286
    local real minY146
    local real maxX101
    local real maxY251
    minX286 = GetRectMinX(r171)
    minY146 = GetRectMinY(r171)
    maxX101 = GetRectMaxX(r171)
    maxY251 = GetRectMaxY(r171)
    SetCameraBounds(minX286, minY146, minX286, maxY251, maxX101, maxY251, maxX101, minY146)
}


function GetEntireMapRect() returns rect{ 
    return GetWorldBounds()
}


function GetWorldBounds() returns rect{ 
}


function GetPlayableMapRect() returns rect{ 
    return bj_mapInitialPlayableArea946
}


function GetCameraBoundsMapRect() returns rect{ 
    return bj_mapInitialCameraBounds238
}


function CameraClearNoiseForPlayer(player whichPlayer381) returns void{ 
    if (GetLocalPlayer() == whichPlayer381){
        CameraSetSourceNoise(0., 0.)
        CameraSetTargetNoise(0., 0.)
    } else {
    }
}


function CameraSetSourceNoise(real mag232, real velocity796) returns void{ 
}


function CameraSetTargetNoise(real mag559, real velocity170) returns void{ 
}


function CameraSetEQNoiseForPlayer(player whichPlayer645, real magnitude289) returns void{ 
    local real richter306
    richter306 = magnitude289
    if (richter306 > 5.0){
        richter306 = 5.0
    } else {
    }
    if (richter306 < 2.0){
        richter306 = 2.0
    } else {
    }
    if (GetLocalPlayer() == whichPlayer645){
        CameraSetTargetNoiseEx((magnitude289 * 2.0), (magnitude289 * Pow(10., richter306)), true)
        CameraSetSourceNoiseEx((magnitude289 * 2.0), (magnitude289 * Pow(10., richter306)), true)
    } else {
    }
}


function Pow(real x810, real power223) returns real{ 
}


function CameraSetTargetNoiseEx(real mag277, real velocity171, boolean vertOnly112) returns void{ 
}


function CameraSetSourceNoiseEx(real mag225, real velocity269, boolean vertOnly372) returns void{ 
}


function CameraSetTargetNoiseForPlayer(player whichPlayer507, real magnitude159, real velocity222) returns void{ 
    if (GetLocalPlayer() == whichPlayer507){
        CameraSetTargetNoise(magnitude159, velocity222)
    } else {
    }
}


function CameraSetSourceNoiseForPlayer(player whichPlayer166, real magnitude128, real velocity633) returns void{ 
    if (GetLocalPlayer() == whichPlayer166){
        CameraSetSourceNoise(magnitude128, velocity633)
    } else {
    }
}


function ResetToGameCameraForPlayer(player whichPlayer218, real duration763) returns void{ 
    if (GetLocalPlayer() == whichPlayer218){
        ResetToGameCamera(duration763)
    } else {
    }
}


function ResetToGameCamera(real duration196) returns void{ 
}


function SetCinematicCameraForPlayer(player whichPlayer115, string cameraModelFile135) returns void{ 
    if (GetLocalPlayer() == whichPlayer115){
        SetCinematicCamera(cameraModelFile135)
    } else {
    }
}


function SetCinematicCamera(string cameraModelFile162) returns void{ 
}


function SmartCameraPanBJ(player whichPlayer152, location loc316, real duration298) returns void{ 
    local real dist229
    null
    if (GetLocalPlayer() == whichPlayer152){
        dist229 = DistanceBetweenPoints(loc316, GetCameraTargetPositionLoc())
        if (dist229 >= bj_SMARTPAN_TRESHOLD_SNAP331){
            PanCameraToTimed(GetLocationX(loc316), GetLocationY(loc316), 0.)
        } else {
            if (dist229 >= bj_SMARTPAN_TRESHOLD_PAN180){
                PanCameraToTimed(GetLocationX(loc316), GetLocationY(loc316), duration298)
            } else {
            }
        }
    } else {
    }
}


function GetCameraTargetPositionLoc() returns location{ 
}


function PanCameraToTimed(real x169, real y202, real duration184) returns void{ 
}


function PanCameraToTimedLocWithZForPlayer(player whichPlayer278, location loc211, real zOffset333, real duration215) returns void{ 
    if (GetLocalPlayer() == whichPlayer278){
        PanCameraToTimedWithZ(GetLocationX(loc211), GetLocationY(loc211), zOffset333, duration215)
    } else {
    }
}


function PanCameraToTimedWithZ(real x142, real y289, real zOffsetDest870, real duration166) returns void{ 
}


function PanCameraToTimedLocForPlayer(player whichPlayer265, location loc126, real duration108) returns void{ 
    if (GetLocalPlayer() == whichPlayer265){
        PanCameraToTimed(GetLocationX(loc126), GetLocationY(loc126), duration108)
    } else {
    }
}


function PanCameraToTimedForPlayer(player whichPlayer236, real x102, real y307, real duration139) returns void{ 
    if (GetLocalPlayer() == whichPlayer236){
        PanCameraToTimed(x102, y307, duration139)
    } else {
    }
}


function PanCameraToLocForPlayer(player whichPlayer300, location loc174) returns void{ 
    if (GetLocalPlayer() == whichPlayer300){
        PanCameraTo(GetLocationX(loc174), GetLocationY(loc174))
    } else {
    }
}


function PanCameraTo(real x261, real y144) returns void{ 
}


function PanCameraToForPlayer(player whichPlayer329, real x125, real y955) returns void{ 
    if (GetLocalPlayer() == whichPlayer329){
        PanCameraTo(x125, y955)
    } else {
    }
}


function RotateCameraAroundLocBJ(real degrees149, location loc164, player whichPlayer210, real duration926) returns void{ 
    if (GetLocalPlayer() == whichPlayer210){
        SetCameraRotateMode(GetLocationX(loc164), GetLocationY(loc164), (bj_DEGTORAD321 * degrees149), duration926)
    } else {
    }
}


function SetCameraRotateMode(real x343, real y194, real radiansToSweep815, real duration640) returns void{ 
}


function SetCameraPosition(real x444, real y991) returns void{ 
}


function SetCameraTargetControllerNoZForPlayer(player whichPlayer166, unit whichUnit554, real xoffset853, real yoffset263, boolean inheritOrientation455) returns void{ 
    if (GetLocalPlayer() == whichPlayer166){
        SetCameraTargetController(whichUnit554, xoffset853, yoffset263, inheritOrientation455)
    } else {
    }
}


function SetCameraTargetController(unit whichUnit293, real xoffset187, real yoffset278, boolean inheritOrientation243) returns void{ 
}


function SetCameraFieldForPlayer(player whichPlayer298, camerafield whichField398, real value861, real duration146) returns void{ 
    if (GetLocalPlayer() == whichPlayer298){
        SetCameraField(whichField398, value861, duration146)
    } else {
    }
}


function SetCameraField(camerafield whichField131, real value333, real duration268) returns void{ 
}


function CameraSetupGetFieldSwap(camerafield whichField734, camerasetup whichSetup285) returns real{ 
    return CameraSetupGetField(whichSetup285, whichField734)
}


function CameraSetupGetField(camerasetup whichSetup998, camerafield whichField122) returns real{ 
}


function CameraSetupApplyForPlayer(boolean doPan288, camerasetup whichSetup255, player whichPlayer267, real duration896) returns void{ 
    if (GetLocalPlayer() == whichPlayer267){
        CameraSetupApplyForceDuration(whichSetup255, doPan288, duration896)
    } else {
    }
}


function CameraSetupApplyForceDuration(camerasetup whichSetup196, boolean doPan125, real forceDuration357) returns void{ 
}


function GetCurrentCameraSetup() returns camerasetup{ 
    local camerasetup theCam118
    local real duration133
    theCam118 = CreateCameraSetup()
    duration133 = 0.
    CameraSetupSetField(theCam118, CAMERA_FIELD_TARGET_DISTANCE250, GetCameraField(CAMERA_FIELD_TARGET_DISTANCE250), duration133)
    CameraSetupSetField(theCam118, CAMERA_FIELD_FARZ140, GetCameraField(CAMERA_FIELD_FARZ140), duration133)
    CameraSetupSetField(theCam118, CAMERA_FIELD_ZOFFSET238, GetCameraField(CAMERA_FIELD_ZOFFSET238), duration133)
    CameraSetupSetField(theCam118, CAMERA_FIELD_ANGLE_OF_ATTACK333, (bj_RADTODEG169 * GetCameraField(CAMERA_FIELD_ANGLE_OF_ATTACK333)), duration133)
    CameraSetupSetField(theCam118, CAMERA_FIELD_FIELD_OF_VIEW332, (bj_RADTODEG169 * GetCameraField(CAMERA_FIELD_FIELD_OF_VIEW332)), duration133)
    CameraSetupSetField(theCam118, CAMERA_FIELD_ROLL287, (bj_RADTODEG169 * GetCameraField(CAMERA_FIELD_ROLL287)), duration133)
    CameraSetupSetField(theCam118, CAMERA_FIELD_ROTATION208, (bj_RADTODEG169 * GetCameraField(CAMERA_FIELD_ROTATION208)), duration133)
    CameraSetupSetDestPosition(theCam118, GetCameraTargetPositionX(), GetCameraTargetPositionY(), duration133)
    return theCam118
}


function CreateCameraSetup() returns camerasetup{ 
}


function GetCameraField(camerafield whichField206) returns real{ 
}


function CameraSetupSetField(camerasetup whichSetup217, camerafield whichField110, real value114, real duration305) returns void{ 
}


function GetCameraTargetPositionX() returns real{ 
}


function GetCameraTargetPositionY() returns real{ 
}


function CameraSetupSetDestPosition(camerasetup whichSetup292, real x221, real y159, real duration334) returns void{ 
}


function CompareRectsBJ(rect A500, rect B223) returns boolean{ 
    return ((((GetRectMinX(A500) == GetRectMinX(B223)) and (GetRectMinY(A500) == GetRectMinY(B223))) and (GetRectMaxX(A500) == GetRectMaxX(B223))) and (GetRectMaxY(A500) == GetRectMaxY(B223)))
}


function CompareLocationsBJ(location A171, location B160) returns boolean{ 
    return ((GetLocationX(A171) == GetLocationX(B160)) and (GetLocationY(A171) == GetLocationY(B160)))
}


function PlaySound(string soundName106) returns void{ 
    local sound soundHandle495
    soundHandle495 = CreateSound(soundName106, false, false, true, 12700, 12700, "")
    StartSound(soundHandle495)
    KillSoundWhenDone(soundHandle495)
}


function CreateSound(string fileName965, boolean looping315, boolean is3D100, boolean stopwhenoutofrange987, integer fadeInRate317, integer fadeOutRate114, string eaxSetting298) returns sound{ 
}


function GetTimeOfDayScalePercentBJ() returns real{ 
    return (GetTimeOfDayScale() * 100.)
}


function GetTimeOfDayScale() returns real{ 
}


function SetTimeOfDayScalePercentBJ(real scalePercent185) returns void{ 
    SetTimeOfDayScale((scalePercent185 * 0.01))
}


function SetTimeOfDayScale(real r137) returns void{ 
}


function SetTimeOfDay(real whatTime995) returns void{ 
    SetFloatGameState(GAME_STATE_TIME_OF_DAY129, whatTime995)
}


function GetFloatGameState(fgamestate whichFloatGameState197) returns real{ 
}


function GetBooleanOr(boolean valueA322, boolean valueB313) returns boolean{ 
    return (valueA322 or valueB313)
}


function GetBooleanAnd(boolean valueA938, boolean valueB100) returns boolean{ 
    return (valueA938 and valueB100)
}


function StringIdentity(string theString116) returns string{ 
    return GetLocalizedString(theString116)
}


function CommentString(string commentString979) returns void{ 
}


function DoNothing() returns void{ 
}


function PolledWait(real duration232) returns void{ 
    local timer t224
    local real timeRemaining269
    null
    null
    if (duration232 > 0.){
        t224 = CreateTimer()
        TimerStart(t224, duration232, false, null)
        loop {
            timeRemaining269 = TimerGetRemaining(t224)
            exitwhen (timeRemaining269 <= 0.)
            if (timeRemaining269 > bj_POLLED_WAIT_SKIP_THRESHOLD321){
                TriggerSleepAction((0.1 * timeRemaining269))
            } else {
                TriggerSleepAction(bj_POLLED_WAIT_INTERVAL988)
            }
        }
        DestroyTimer(t224)
    } else {
    }
}


function TimerGetRemaining(timer whichTimer205) returns real{ 
}


function SetForLoopIndexB(integer newIndex737) returns void{ 
    bj_forLoopBIndex249 = newIndex737
}


function GetForLoopIndexB() returns integer{ 
    return bj_forLoopBIndex249
}


function SetForLoopIndexA(integer newIndex290) returns void{ 
    bj_forLoopAIndex273 = newIndex290
}


function GetForLoopIndexA() returns integer{ 
    return bj_forLoopAIndex273
}


function IsTriggerQueuedBJ(trigger trig195) returns boolean{ 
    return (QueuedTriggerGetIndex(trig195) != (- 1))
}


function QueuedTriggerGetIndex(trigger trig290) returns integer{ 
    local integer index300
    index300 = 0
    loop {
        exitwhen (index300 >= bj_queuedExecTotal254)
        if (bj_queuedExecTriggers187[index300] == trig290){
            return index300
        } else {
        }
        index300 = (index300 + 1)
    }
    return (- 1)
}


function IsTriggerQueueEmptyBJ() returns boolean{ 
    return (bj_queuedExecTotal254 <= 0)
}


function QueuedTriggerCountBJ() returns integer{ 
    return bj_queuedExecTotal254
}


function QueuedTriggerClearInactiveBJ() returns void{ 
    bj_queuedExecTotal254 = IMinBJ(bj_queuedExecTotal254, 1)
}


function QueuedTriggerClearBJ() returns void{ 
    PauseTimer(bj_queuedExecTimeoutTimer257)
    bj_queuedExecTotal254 = 0
}


function QueuedTriggerRemoveByIndex(integer trigIndex117) returns boolean{ 
    local integer index174
    null
    if (trigIndex117 >= bj_queuedExecTotal254){
        return false
    } else {
    }
    bj_queuedExecTotal254 = (bj_queuedExecTotal254 - 1)
    index174 = trigIndex117
    loop {
        exitwhen (index174 >= bj_queuedExecTotal254)
        bj_queuedExecTriggers187[index174] = bj_queuedExecTriggers187[(index174 + 1)]
        bj_queuedExecUseConds312[index174] = bj_queuedExecUseConds312[(index174 + 1)]
        index174 = (index174 + 1)
    }
    return true
}


function QueuedTriggerAttemptExec() returns boolean{ 
    loop {
        exitwhen (bj_queuedExecTotal254 == 0)
        if TriggerExecuteBJ(bj_queuedExecTriggers187[0], bj_queuedExecUseConds312[0]){
            TimerStart(bj_queuedExecTimeoutTimer257, bj_QUEUED_TRIGGER_TIMEOUT264, false, null)
            return true
        } else {
        }
        QueuedTriggerRemoveByIndex(0)
    }
    return false
}


function QueuedTriggerRemoveBJ(trigger trig159) returns void{ 
    local integer index370
    local integer trigIndex141
    local boolean trigExecuted156
    null
    null
    null
    trigIndex141 = QueuedTriggerGetIndex(trig159)
    if (trigIndex141 == (- 1)){
        return %nothing%
    } else {
    }
    QueuedTriggerRemoveByIndex(trigIndex141)
    if (trigIndex141 == 0){
        PauseTimer(bj_queuedExecTimeoutTimer257)
        QueuedTriggerAttemptExec()
    } else {
    }
}


function QueuedTriggerAddBJ(trigger trig811, boolean checkConditions113) returns boolean{ 
    if (bj_queuedExecTotal254 >= bj_MAX_QUEUED_TRIGGERS126){
        return false
    } else {
    }
    bj_queuedExecTriggers187[bj_queuedExecTotal254] = trig811
    bj_queuedExecUseConds312[bj_queuedExecTotal254] = checkConditions113
    bj_queuedExecTotal254 = (bj_queuedExecTotal254 + 1)
    if (bj_queuedExecTotal254 == 1){
        QueuedTriggerAttemptExec()
    } else {
    }
    return true
}


function TriggerExecuteBJ(trigger trig681, boolean checkConditions245) returns boolean{ 
    if checkConditions245{
        if (not TriggerEvaluate(trig681)){
            return false
        } else {
        }
    } else {
    }
    TriggerExecute(trig681)
    return true
}


function QueuedTriggerCheck() returns void{ 
    local string s107
    local integer i266
    s107 = "TrigQueue Check "
    null
    i266 = 0
    loop {
        exitwhen (i266 >= bj_queuedExecTotal254)
        s107 = (((s107 + "q[") + I2S(i266)) + "]=")
        if (bj_queuedExecTriggers187[i266] == null){
            s107 = (s107 + "null ")
        } else {
            s107 = (s107 + "x ")
        }
        i266 = (i266 + 1)
    }
    s107 = (((s107 + "(") + I2S(bj_queuedExecTotal254)) + " total)")
    DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 600., s107)
}


function I2S(integer i103) returns string{ 
}


function PostTriggerExecuteBJ(trigger trig144, boolean checkConditions127) returns boolean{ 
    if checkConditions127{
        if (not TriggerEvaluate(trig144)){
            return false
        } else {
        }
    } else {
    }
    TriggerRegisterTimerEvent(trig144, 0., false)
    return true
}


function TriggerEvaluate(trigger whichTrigger137) returns boolean{ 
}


function TriggerExecute(trigger whichTrigger510) returns void{ 
}


function ConditionalTriggerExecute(trigger trig167) returns void{ 
    if TriggerEvaluate(trig167){
        TriggerExecute(trig167)
    } else {
    }
}


function RectContainsItem(item whichItem138, rect r783) returns boolean{ 
    if (whichItem138 == null){
        return false
    } else {
    }
    if IsItemOwned(whichItem138){
        return false
    } else {
    }
    return RectContainsCoords(r783, GetItemX(whichItem138), GetItemY(whichItem138))
}


function RectContainsCoords(rect r782, real x109, real y258) returns boolean{ 
    return ((((GetRectMinX(r782) <= x109) and (x109 <= GetRectMaxX(r782))) and (GetRectMinY(r782) <= y258)) and (y258 <= GetRectMaxY(r782)))
}


function RectContainsLoc(rect r245, location loc213) returns boolean{ 
    return RectContainsCoords(r245, GetLocationX(loc213), GetLocationY(loc213))
}


function RectFromCenterSizeBJ(location center299, real width133, real height127) returns rect{ 
    local real x324
    local real y831
    x324 = GetLocationX(center299)
    y831 = GetLocationY(center299)
    return Rect((x324 - (width133 * 0.5)), (y831 - (height127 * 0.5)), (x324 + (width133 * 0.5)), (y831 + (height127 * 0.5)))
}


function OffsetRectBJ(rect r137, real dx182, real dy921) returns rect{ 
    return Rect((GetRectMinX(r137) + dx182), (GetRectMinY(r137) + dy921), (GetRectMaxX(r137) + dx182), (GetRectMaxY(r137) + dy921))
}


function OffsetLocation(location loc984, real dx315, real dy322) returns location{ 
    return Location((GetLocationX(loc984) + dx315), (GetLocationY(loc984) + dy322))
}


function ModuloReal(real dividend266, real divisor158) returns real{ 
    local real modulus251
    modulus251 = (dividend266 - (I2R(R2I((dividend266 / divisor158))) * divisor158))
    if (modulus251 < 0.){
        modulus251 = (modulus251 + divisor158)
    } else {
    }
    return modulus251
}


function ModuloInteger(integer dividend116, integer divisor162) returns integer{ 
    local integer modulus223
    modulus223 = (dividend116 - ((dividend116 / divisor162) * divisor162))
    if (modulus223 < 0){
        modulus223 = (modulus223 + divisor162)
    } else {
    }
    return modulus223
}


function GetRandomLocInRect(rect whichRect661) returns location{ 
    return Location(GetRandomReal(GetRectMinX(whichRect661), GetRectMaxX(whichRect661)), GetRandomReal(GetRectMinY(whichRect661), GetRectMaxY(whichRect661)))
}


function GetRandomPercentageBJ() returns real{ 
    return GetRandomReal(0., 100.)
}


function GetRandomDirectionDeg() returns real{ 
    return GetRandomReal(0., 360.)
}


function PolarProjectionBJ(location source182, real dist319, real angle294) returns location{ 
    local real x293
    local real y239
    x293 = (GetLocationX(source182) + (dist319 * Cos((angle294 * bj_DEGTORAD321))))
    y239 = (GetLocationY(source182) + (dist319 * Sin((angle294 * bj_DEGTORAD321))))
    return Location(x293, y239)
}


function SquareRoot(real x303) returns real{ 
}


function Atan2BJ(real y182, real x140) returns real{ 
    return (Atan2(y182, x140) * bj_RADTODEG169)
}


function AtanBJ(real degrees260) returns real{ 
    return (Atan(degrees260) * bj_RADTODEG169)
}


function Atan(real x179) returns real{ 
}


function AcosBJ(real degrees206) returns real{ 
    return (Acos(degrees206) * bj_RADTODEG169)
}


function Acos(real x224) returns real{ 
}


function AsinBJ(real degrees221) returns real{ 
    return (Asin(degrees221) * bj_RADTODEG169)
}


function Asin(real y295) returns real{ 
}


function TanBJ(real degrees184) returns real{ 
    return Tan((degrees184 * bj_DEGTORAD321))
}


function Tan(real radians172) returns real{ 
}


function CosBJ(real degrees262) returns real{ 
    return Cos((degrees262 * bj_DEGTORAD321))
}


function SinBJ(real degrees893) returns real{ 
    return Sin((degrees893 * bj_DEGTORAD321))
}


function ISignBJ(integer a126) returns integer{ 
    if (a126 >= 0){
        return 1
    } else {
        return (- 1)
    }
}


function IAbsBJ(integer a109) returns integer{ 
    if (a109 >= 0){
        return a109
    } else {
        return (- a109)
    }
}


function RSignBJ(real a130) returns real{ 
    if (a130 >= 0.0){
        return 1.0
    } else {
        return (- 1.0)
    }
}


function RAbsBJ(real a234) returns real{ 
    if (a234 >= 0.){
        return a234
    } else {
        return (- a234)
    }
}


function RMinBJ(real a924, real b125) returns real{ 
    if (a924 < b125){
        return a924
    } else {
        return b125
    }
}


function BJDebugMsg(string msg275) returns void{ 
    local integer i277
    i277 = 0
    loop {
        DisplayTimedTextToPlayer(Player(i277), 0., 0., 60., msg275)
        i277 = (i277 + 1)
        exitwhen (i277 == bj_MAX_PLAYERS803)
    }
}


function iterator(group this329) returns group{ 
    bj_groupAddGroupDest242 = CreateGroup()
    ForGroup(this329, function GroupAddGroupEnum)
    return bj_groupAddGroupDest242
}


function hasNext(group this203) returns boolean{ 
    return (FirstOfGroup(this203) != null)
}


function next(group this258) returns unit{ 
    local unit u267
    u267 = FirstOfGroup(this258)
    GroupRemoveUnit(this258, u267)
    return u267
}


function close(group this182) returns void{ 
    DestroyGroup(this182)
}


function abs(real this298) returns real{ 
    if (this298 >= 0.){
        return this298
    } else {
        return (- this298)
    }
}


function squared(real this281) returns real{ 
    return (this281 * this281)
}


function sign(real this130) returns real{ 
    if (this130 > 0.0){
        return 1.0
    } else {
        if (this130 < 0.0){
            return (- 1.0)
        } else {
            return 0.0
        }
    }
}


function toInt(real this535) returns integer{ 
    return R2I(this535)
}


function toString(real this166) returns string{ 
    return R2S(this166)
}


function R2S(real r231) returns string{ 
}


function acos(real this169) returns real{ 
    return Acos(this169)
}


function asin(real this194) returns real{ 
    return Asin(this194)
}


function atan(real this105) returns real{ 
    return Atan(this105)
}


function cos(real this329) returns real{ 
    return Cos(this329)
}


function sin(real this334) returns real{ 
    return Sin(this334)
}


function abs(integer this185) returns integer{ 
    if (this185 >= 0){
        return this185
    } else {
        return (- this185)
    }
}


function squared(integer this103) returns integer{ 
    return (this103 * this103)
}


function sign(integer this183) returns integer{ 
    if (this183 > 0){
        return 1
    } else {
        if (this183 < 0){
            return (- 1)
        } else {
            return 0
        }
    }
}


function toReal(integer this297) returns real{ 
    return I2R(this297)
}


function toString(integer this212) returns string{ 
    return I2S(this212)
}


function setDebugLvl(integer value306) returns void{ 
    DEBUG_LEVEL787 = value306
}


function setDebugMsgDuration(real value111) returns void{ 
    DEBUG_MSG_DURATION310 = value111
}


function debugPrint(string msg491, integer level275) returns void{ 
    if (level275 >= DEBUG_LEVEL787){
        print(msg491)
    } else {
    }
}


function print(string msg239) returns void{ 
    local integer i615
    {
        i615 = 0
        loop {
            exitwhen (i615 > 12)
            DisplayTimedTextToPlayer(Player(i615), 0., 0., DEBUG_MSG_DURATION310, msg239)
            i615 = (i615 + 1)
        }
        null}
}


function printNote(string msg205) returns void{ 
    local integer i521
    {
        i521 = 0
        loop {
            exitwhen (i521 > 12)
            DisplayTimedTextToPlayer(Player(i521), 0., 0., DEBUG_MSG_DURATION310, ("|cffFFFF00[NOTIFICATION]|r - " + msg205))
            i521 = (i521 + 1)
        }
        null}
}


function printWarning(string msg157) returns void{ 
    local integer i492
    {
        i492 = 0
        loop {
            exitwhen (i492 > 12)
            DisplayTimedTextToPlayer(Player(i492), 0., 0., DEBUG_MSG_DURATION310, ("|cffFF8000[WARNING]|r - " + msg157))
            i492 = (i492 + 1)
        }
        null}
}


function printError(string msg230) returns void{ 
    local integer i246
    {
        i246 = 0
        loop {
            exitwhen (i246 > 12)
            DisplayTimedTextToPlayer(Player(i246), 0., 0., DEBUG_MSG_DURATION310, ("|cffFF0000[ERROR]|r - " + msg230))
            i246 = (i246 + 1)
        }
        null}
}


function printTimed(string msg101, real duration278) returns void{ 
    local integer i320
    {
        i320 = 0
        loop {
            exitwhen (i320 > 12)
            DisplayTimedTextToPlayer(Player(i320), 0., 0., duration278, msg101)
            i320 = (i320 + 1)
        }
        null}
}


function toString(real this128) returns string{ 
    return R2S(this128)
}


function toString(integer this145) returns string{ 
    return I2S(this145)
}


function toString(boolean this154) returns string{ 
    if this154{
        return "true"
    } else {
        return "false"
    }
}


function getX(unit this239) returns real{ 
    return GetUnitX(this239)
}


function getY(unit this106) returns real{ 
    return GetUnitY(this106)
}


function setX(unit this248, real x275) returns unit{ 
    SetUnitX(this248, x275)
    return this248
}


function SetUnitX(unit whichUnit704, real newX234) returns void{ 
}


function setY(unit this170, real y160) returns unit{ 
    SetUnitY(this170, y160)
    return this170
}


function SetUnitY(unit whichUnit762, real newY110) returns void{ 
}


function setXY(unit this191, real x295, real y998) returns unit{ 
    SetUnitX(this191, x295)
    SetUnitY(this191, y998)
    return this191
}


function setPos(unit this156, real x117, real y124) returns unit{ 
    SetUnitPosition(this156, x117, y124)
    return this156
}


function kill(unit this148) returns unit{ 
    KillUnit(this148)
    return this148
}


function addAbility(unit this439, integer abil392) returns unit{ 
    UnitAddAbility(this439, abil392)
    return this439
}


function removeAbility(unit this251, integer abil800) returns unit{ 
    UnitRemoveAbility(this251, abil800)
    return this251
}


function getOwner(unit this973) returns player{ 
    return GetOwningPlayer(this973)
}


function setOwner(unit this234, player p160, boolean changeColor122) returns unit{ 
    SetUnitOwner(this234, p160, changeColor122)
    return this234
}


function setScale(unit this978, real scale311) returns unit{ 
    SetUnitScale(this978, scale311, scale311, scale311)
    return this978
}


function setVertexColor(unit this481, integer r246, integer g214, integer b264, integer a813) returns unit{ 
    SetUnitVertexColor(this481, r246, g214, b264, a813)
    return this481
}


function addEffect(unit this264, string fx274, string attachment170) returns effect{ 
    return AddSpecialEffectTarget(fx274, this264, attachment170)
}


function setFacing(unit this203, real deg269) returns unit{ 
    SetUnitFacing(this203, deg269)
    return this203
}


function getFacing(unit this982) returns real{ 
    return GetUnitFacing(this982)
}


function getFlyHeight(unit this264) returns real{ 
    return GetUnitFlyHeight(this264)
}


function GetUnitFlyHeight(unit whichUnit209) returns real{ 
}


function setFlyHeight(unit this250, real height173, real rate249) returns unit{ 
    SetUnitFlyHeight(this250, height173, rate249)
    return this250
}


function hide(unit this255) returns unit{ 
    ShowUnit(this255, false)
    return this255
}


function show(unit this258) returns unit{ 
    ShowUnit(this258, true)
    return this258
}


function setUserData(unit this283, integer data311) returns unit{ 
    SetUnitUserData(this283, data311)
    return this283
}


function SetUnitUserData(unit whichUnit214, integer data279) returns void{ 
}


function getUserData(unit this671) returns integer{ 
    return GetUnitUserData(this671)
}


function GetUnitUserData(unit whichUnit208) returns integer{ 
}


function destr(multiboard this291) returns void{ 
    DestroyMultiboard(this291)
}


function isDisplayed(multiboard this116) returns boolean{ 
    return IsMultiboardDisplayed(this116)
}


function IsMultiboardDisplayed(multiboard lb172) returns boolean{ 
}


function isMinimized(multiboard this150) returns boolean{ 
    return IsMultiboardMinimized(this150)
}


function IsMultiboardMinimized(multiboard lb194) returns boolean{ 
}


function clear(multiboard this166) returns multiboard{ 
    MultiboardClear(this166)
    return this166
}


function MultiboardClear(multiboard lb498) returns void{ 
}


function display(multiboard this213, boolean show290) returns multiboard{ 
    MultiboardDisplay(this213, show290)
    return this213
}


function getColumnCount(multiboard this248) returns integer{ 
    return MultiboardGetColumnCount(this248)
}


function getItem(multiboard this200, integer row241, integer column330) returns multiboarditem{ 
    return MultiboardGetItem(this200, row241, column330)
}


function getRowCount(multiboard this101) returns integer{ 
    return MultiboardGetRowCount(this101)
}


function getTitleText(multiboard this256) returns string{ 
    return MultiboardGetTitleText(this256)
}


function MultiboardGetTitleText(multiboard lb311) returns string{ 
}


function minimalize(multiboard this188, boolean minimalize154) returns multiboard{ 
    MultiboardMinimize(this188, minimalize154)
    return this188
}


function setColumnCount(multiboard this301, integer count276) returns multiboard{ 
    MultiboardSetColumnCount(this301, count276)
    return this301
}


function setRowCount(multiboard this916, integer count292) returns multiboard{ 
    MultiboardSetRowCount(this916, count292)
    return this916
}


function setItemsIcon(multiboard this279, string path296) returns multiboard{ 
    MultiboardSetItemsIcon(this279, path296)
    return this279
}


function MultiboardSetItemsIcon(multiboard lb222, string iconPath183) returns void{ 
}


function setItemsStyle(multiboard this312, boolean showValues160, boolean showIcons222) returns multiboard{ 
    MultiboardSetItemsStyle(this312, showValues160, showIcons222)
    return this312
}


function MultiboardSetItemsStyle(multiboard lb511, boolean showValues314, boolean showIcons640) returns void{ 
}


function setItemsValue(multiboard this110, string value270) returns multiboard{ 
    MultiboardSetItemsValue(this110, value270)
    return this110
}


function MultiboardSetItemsValue(multiboard lb435, string value234) returns void{ 
}


function setItemsValueColor(multiboard this813, integer r199, integer g249, integer b294, integer a318) returns multiboard{ 
    MultiboardSetItemsValueColor(this813, r199, g249, b294, a318)
    return this813
}


function MultiboardSetItemsValueColor(multiboard lb197, integer red267, integer green436, integer blue187, integer alpha903) returns void{ 
}


function setItemsWidth(multiboard this169, real width641) returns multiboard{ 
    MultiboardSetItemsWidth(this169, width641)
    return this169
}


function MultiboardSetItemsWidth(multiboard lb132, real width843) returns void{ 
}


function setTitle(multiboard this375, string label272) returns multiboard{ 
    MultiboardSetTitleText(this375, label272)
    return this375
}


function setTitleColor(multiboard this183, integer r279, integer g207, integer b538, integer a223) returns multiboard{ 
    MultiboardSetTitleTextColor(this183, r279, g207, b538, a223)
    return this183
}


function release(multiboarditem this332) returns multiboarditem{ 
    MultiboardReleaseItem(this332)
    return this332
}


function setIcon(multiboarditem this231, string iconFileName579) returns multiboarditem{ 
    MultiboardSetItemIcon(this231, iconFileName579)
    return this231
}


function setStyle(multiboarditem this287, boolean showValue162, boolean showIcon141) returns multiboarditem{ 
    MultiboardSetItemStyle(this287, showValue162, showIcon141)
    return this287
}


function setValue(multiboarditem this329, string value168) returns multiboarditem{ 
    MultiboardSetItemValue(this329, value168)
    return this329
}


function setValueColor(multiboarditem this176, integer r179, integer g323, integer b306, integer a201) returns multiboarditem{ 
    MultiboardSetItemValueColor(this176, r179, g323, b306, a201)
    return this176
}


function setWidth(multiboarditem this138, real width313) returns multiboarditem{ 
    MultiboardSetItemWidth(this138, width313)
    return this138
}


function hasBoolean(hashtable this707, integer parentKey178, integer childKey587) returns boolean{ 
    return HaveSavedBoolean(this707, parentKey178, childKey587)
}


function hasHandle(hashtable this125, integer parentKey955, integer childKey169) returns boolean{ 
    return HaveSavedHandle(this125, parentKey955, childKey169)
}


function hasInt(hashtable this347, integer parentKey208, integer childKey289) returns boolean{ 
    return HaveSavedInteger(this347, parentKey208, childKey289)
}


function hasReal(hashtable this301, integer parentKey818, integer childKey573) returns boolean{ 
    return HaveSavedReal(this301, parentKey818, childKey573)
}


function hasString(hashtable this917, integer parentKey177, integer childKey503) returns boolean{ 
    return HaveSavedString(this917, parentKey177, childKey503)
}


function loadAbilityHandle(hashtable this361, integer parentKey163, integer childKey183) returns ability{ 
    return LoadAbilityHandle(this361, parentKey163, childKey183)
}


function loadBoolean(hashtable this298, integer parentKey299, integer childKey122) returns boolean{ 
    return LoadBoolean(this298, parentKey299, childKey122)
}


function loadBooleanExprHandle(hashtable this311, integer parentKey243, integer childKey221) returns boolexpr{ 
    return LoadBooleanExprHandle(this311, parentKey243, childKey221)
}


function loadButtonHandle(hashtable this472, integer parentKey126, integer childKey192) returns button{ 
    return LoadButtonHandle(this472, parentKey126, childKey192)
}


function loadDefeatConditionHandle(hashtable this260, integer parentKey182, integer childKey253) returns defeatcondition{ 
    return LoadDefeatConditionHandle(this260, parentKey182, childKey253)
}


function loadDestructableHandle(hashtable this671, integer parentKey376, integer childKey621) returns destructable{ 
    return LoadDestructableHandle(this671, parentKey376, childKey621)
}


function loadDialogHandle(hashtable this247, integer parentKey982, integer childKey244) returns dialog{ 
    return LoadDialogHandle(this247, parentKey982, childKey244)
}


function loadEffectHandle(hashtable this254, integer parentKey246, integer childKey307) returns effect{ 
    return LoadEffectHandle(this254, parentKey246, childKey307)
}


function loadFogModifierHandle(hashtable this697, integer parentKey801, integer childKey275) returns fogmodifier{ 
    return LoadFogModifierHandle(this697, parentKey801, childKey275)
}


function loadFogStateHandle(hashtable this184, integer parentKey235, integer childKey352) returns fogstate{ 
    return LoadFogStateHandle(this184, parentKey235, childKey352)
}


function loadForceHandle(hashtable this135, integer parentKey570, integer childKey160) returns force{ 
    return LoadForceHandle(this135, parentKey570, childKey160)
}


function loadGroupHandle(hashtable this160, integer parentKey320, integer childKey962) returns group{ 
    return LoadGroupHandle(this160, parentKey320, childKey962)
}


function loadImageHandle(hashtable this197, integer parentKey298, integer childKey211) returns image{ 
    return LoadImageHandle(this197, parentKey298, childKey211)
}


function loadInt(hashtable this143, integer parentKey310, integer childKey308) returns integer{ 
    return LoadInteger(this143, parentKey310, childKey308)
}


function loadItemHandle(hashtable this105, integer parentKey130, integer childKey294) returns item{ 
    return LoadItemHandle(this105, parentKey130, childKey294)
}


function loadItemPoolHandle(hashtable this129, integer parentKey177, integer childKey133) returns itempool{ 
    return LoadItemPoolHandle(this129, parentKey177, childKey133)
}


function loadLeaderboardHandle(hashtable this169, integer parentKey185, integer childKey478) returns leaderboard{ 
    return LoadLeaderboardHandle(this169, parentKey185, childKey478)
}


function loadFogStateHandle(hashtable this662, integer parentKey227, integer childKey749) returns fogstate{ 
    return LoadFogStateHandle(this662, parentKey227, childKey749)
}


function loadLightningHandle(hashtable this213, integer parentKey273, integer childKey179) returns lightning{ 
    return LoadLightningHandle(this213, parentKey273, childKey179)
}


function loadLocationHandle(hashtable this252, integer parentKey462, integer childKey199) returns location{ 
    return LoadLocationHandle(this252, parentKey462, childKey199)
}


function loadImageHandle(hashtable this103, integer parentKey257, integer childKey361) returns image{ 
    return LoadImageHandle(this103, parentKey257, childKey361)
}


function loadMultiboardHandle(hashtable this142, integer parentKey160, integer childKey320) returns multiboard{ 
    return LoadMultiboardHandle(this142, parentKey160, childKey320)
}


function loadFogModifierHandle(hashtable this161, integer parentKey256, integer childKey166) returns fogmodifier{ 
    return LoadFogModifierHandle(this161, parentKey256, childKey166)
}


function loadFogStateHandle(hashtable this146, integer parentKey132, integer childKey846) returns fogstate{ 
    return LoadFogStateHandle(this146, parentKey132, childKey846)
}


function loadForceHandle(hashtable this312, integer parentKey207, integer childKey284) returns force{ 
    return LoadForceHandle(this312, parentKey207, childKey284)
}


function loadItemHandle(hashtable this269, integer parentKey220, integer childKey562) returns item{ 
    return LoadItemHandle(this269, parentKey220, childKey562)
}


function loadPlayerHandle(hashtable this326, integer parentKey245, integer childKey330) returns player{ 
    return LoadPlayerHandle(this326, parentKey245, childKey330)
}


function loadQuestHandle(hashtable this223, integer parentKey167, integer childKey329) returns quest{ 
    return LoadQuestHandle(this223, parentKey167, childKey329)
}


function loadQuestItemHandle(hashtable this260, integer parentKey461, integer childKey868) returns questitem{ 
    return LoadQuestItemHandle(this260, parentKey461, childKey868)
}


function loadReal(hashtable this941, integer parentKey200, integer childKey330) returns real{ 
    return LoadReal(this941, parentKey200, childKey330)
}


function loadRectHandle(hashtable this290, integer parentKey294, integer childKey932) returns rect{ 
    return LoadRectHandle(this290, parentKey294, childKey932)
}


function loadRegionHandle(hashtable this259, integer parentKey322, integer childKey248) returns region{ 
    return LoadRegionHandle(this259, parentKey322, childKey248)
}


function loadSoundHandle(hashtable this258, integer parentKey127, integer childKey187) returns sound{ 
    return LoadSoundHandle(this258, parentKey127, childKey187)
}


function loadString(hashtable this146, integer parentKey128, integer childKey538) returns string{ 
    return LoadStr(this146, parentKey128, childKey538)
}


function loadTextTagHandle(hashtable this418, integer parentKey263, integer childKey153) returns texttag{ 
    return LoadTextTagHandle(this418, parentKey263, childKey153)
}


function loadTimerDialogHandle(hashtable this667, integer parentKey225, integer childKey196) returns timerdialog{ 
    return LoadTimerDialogHandle(this667, parentKey225, childKey196)
}


function loadTimerHandle(hashtable this307, integer parentKey286, integer childKey245) returns timer{ 
    return LoadTimerHandle(this307, parentKey286, childKey245)
}


function loadTrackableHandle(hashtable this863, integer parentKey720, integer childKey174) returns trackable{ 
    return LoadTrackableHandle(this863, parentKey720, childKey174)
}


function loadTriggerActionHandle(hashtable this161, integer parentKey146, integer childKey287) returns triggeraction{ 
    return LoadTriggerActionHandle(this161, parentKey146, childKey287)
}


function loadTriggerConditionHandle(hashtable this195, integer parentKey291, integer childKey247) returns triggercondition{ 
    return LoadTriggerConditionHandle(this195, parentKey291, childKey247)
}


function loadTriggerEventHandle(hashtable this260, integer parentKey275, integer childKey825) returns event{ 
    return LoadTriggerEventHandle(this260, parentKey275, childKey825)
}


function loadTriggerHandle(hashtable this304, integer parentKey226, integer childKey255) returns trigger{ 
    return LoadTriggerHandle(this304, parentKey226, childKey255)
}


function loadUbersplatHandle(hashtable this133, integer parentKey251, integer childKey149) returns ubersplat{ 
    return LoadUbersplatHandle(this133, parentKey251, childKey149)
}


function loadUnitHandle(hashtable this227, integer parentKey304, integer childKey290) returns unit{ 
    return LoadUnitHandle(this227, parentKey304, childKey290)
}


function loadUnitPoolHandle(hashtable this725, integer parentKey486, integer childKey167) returns unitpool{ 
    return LoadUnitPoolHandle(this725, parentKey486, childKey167)
}


function loadWidgetHandle(hashtable this237, integer parentKey272, integer childKey965) returns widget{ 
    return LoadWidgetHandle(this237, parentKey272, childKey965)
}


function saveAbilityHandle(hashtable this274, integer parentKey333, integer childKey813, ability value129) returns hashtable{ 
    SaveAbilityHandle(this274, parentKey333, childKey813, value129)
    return this274
}


function saveBoolean(hashtable this234, integer parentKey115, integer childKey309, boolean value135) returns hashtable{ 
    SaveBoolean(this234, parentKey115, childKey309, value135)
    return this234
}


function saveBooleanExprHandle(hashtable this162, integer parentKey157, integer childKey230, boolexpr value194) returns hashtable{ 
    SaveBooleanExprHandle(this162, parentKey157, childKey230, value194)
    return this162
}


function saveButtonHandle(hashtable this239, integer parentKey140, integer childKey244, button value217) returns hashtable{ 
    SaveButtonHandle(this239, parentKey140, childKey244, value217)
    return this239
}


function saveDefeatConditionHandle(hashtable this350, integer parentKey104, integer childKey288, defeatcondition value583) returns hashtable{ 
    SaveDefeatConditionHandle(this350, parentKey104, childKey288, value583)
    return this350
}


function saveDestructableHandle(hashtable this815, integer parentKey318, integer childKey849, destructable value124) returns hashtable{ 
    SaveDestructableHandle(this815, parentKey318, childKey849, value124)
    return this815
}


function saveDialogHandle(hashtable this795, integer parentKey292, integer childKey646, dialog value370) returns hashtable{ 
    SaveDialogHandle(this795, parentKey292, childKey646, value370)
    return this795
}


function saveEffectHandle(hashtable this271, integer parentKey450, integer childKey495, effect value141) returns hashtable{ 
    SaveEffectHandle(this271, parentKey450, childKey495, value141)
    return this271
}


function saveFogModifierHandle(hashtable this153, integer parentKey267, integer childKey323, fogmodifier value683) returns hashtable{ 
    SaveFogModifierHandle(this153, parentKey267, childKey323, value683)
    return this153
}


function saveFogStateHandle(hashtable this868, integer parentKey261, integer childKey271, fogstate value119) returns hashtable{ 
    SaveFogStateHandle(this868, parentKey261, childKey271, value119)
    return this868
}


function saveForceHandle(hashtable this144, integer parentKey188, integer childKey903, force value288) returns hashtable{ 
    SaveForceHandle(this144, parentKey188, childKey903, value288)
    return this144
}


function saveGroupHandle(hashtable this662, integer parentKey119, integer childKey403, group value308) returns hashtable{ 
    SaveGroupHandle(this662, parentKey119, childKey403, value308)
    return this662
}


function saveImageHandle(hashtable this267, integer parentKey922, integer childKey385, image value229) returns hashtable{ 
    SaveImageHandle(this267, parentKey922, childKey385, value229)
    return this267
}


function saveInt(hashtable this304, integer parentKey217, integer childKey311, integer value891) returns hashtable{ 
    SaveInteger(this304, parentKey217, childKey311, value891)
    return this304
}


function saveItemHandle(hashtable this352, integer parentKey279, integer childKey665, item value430) returns hashtable{ 
    SaveItemHandle(this352, parentKey279, childKey665, value430)
    return this352
}


function saveItemPoolHandle(hashtable this135, integer parentKey167, integer childKey104, itempool value203) returns hashtable{ 
    SaveItemPoolHandle(this135, parentKey167, childKey104, value203)
    return this135
}


function saveLeaderboardHandle(hashtable this250, integer parentKey267, integer childKey228, leaderboard value862) returns hashtable{ 
    SaveLeaderboardHandle(this250, parentKey267, childKey228, value862)
    return this250
}


function saveFogStateHandle(hashtable this146, integer parentKey334, integer childKey334, fogstate value101) returns hashtable{ 
    SaveFogStateHandle(this146, parentKey334, childKey334, value101)
    return this146
}


function saveLightningHandle(hashtable this275, integer parentKey231, integer childKey178, lightning value639) returns hashtable{ 
    SaveLightningHandle(this275, parentKey231, childKey178, value639)
    return this275
}


function saveLocationHandle(hashtable this103, integer parentKey676, integer childKey294, location value290) returns hashtable{ 
    SaveLocationHandle(this103, parentKey676, childKey294, value290)
    return this103
}


function saveImageHandle(hashtable this675, integer parentKey237, integer childKey259, image value522) returns hashtable{ 
    SaveImageHandle(this675, parentKey237, childKey259, value522)
    return this675
}


function saveMultiboardHandle(hashtable this314, integer parentKey242, integer childKey709, multiboard value232) returns hashtable{ 
    SaveMultiboardHandle(this314, parentKey242, childKey709, value232)
    return this314
}


function saveFogModifierHandle(hashtable this181, integer parentKey619, integer childKey235, fogmodifier value205) returns hashtable{ 
    SaveFogModifierHandle(this181, parentKey619, childKey235, value205)
    return this181
}


function saveFogStateHandle(hashtable this190, integer parentKey323, integer childKey144, fogstate value905) returns hashtable{ 
    SaveFogStateHandle(this190, parentKey323, childKey144, value905)
    return this190
}


function saveForceHandle(hashtable this478, integer parentKey256, integer childKey104, force value733) returns hashtable{ 
    SaveForceHandle(this478, parentKey256, childKey104, value733)
    return this478
}


function saveItemHandle(hashtable this331, integer parentKey184, integer childKey338, item value242) returns hashtable{ 
    SaveItemHandle(this331, parentKey184, childKey338, value242)
    return this331
}


function savePlayerHandle(hashtable this461, integer parentKey119, integer childKey132, player value313) returns hashtable{ 
    SavePlayerHandle(this461, parentKey119, childKey132, value313)
    return this461
}


function saveQuestHandle(hashtable this277, integer parentKey852, integer childKey715, quest value449) returns hashtable{ 
    SaveQuestHandle(this277, parentKey852, childKey715, value449)
    return this277
}


function saveQuestItemHandle(hashtable this333, integer parentKey636, integer childKey274, questitem value143) returns hashtable{ 
    SaveQuestItemHandle(this333, parentKey636, childKey274, value143)
    return this333
}


function saveReal(hashtable this409, integer parentKey128, integer childKey908, real value688) returns hashtable{ 
    SaveReal(this409, parentKey128, childKey908, value688)
    return this409
}


function saveRectHandle(hashtable this295, integer parentKey116, integer childKey260, rect value187) returns hashtable{ 
    SaveRectHandle(this295, parentKey116, childKey260, value187)
    return this295
}


function saveRegionHandle(hashtable this133, integer parentKey155, integer childKey321, region value183) returns hashtable{ 
    SaveRegionHandle(this133, parentKey155, childKey321, value183)
    return this133
}


function saveSoundHandle(hashtable this322, integer parentKey203, integer childKey597, sound value138) returns hashtable{ 
    SaveSoundHandle(this322, parentKey203, childKey597, value138)
    return this322
}


function saveString(hashtable this997, integer parentKey143, integer childKey904, string value335) returns hashtable{ 
    SaveStr(this997, parentKey143, childKey904, value335)
    return this997
}


function saveTextTagHandle(hashtable this284, integer parentKey190, integer childKey255, texttag value281) returns hashtable{ 
    SaveTextTagHandle(this284, parentKey190, childKey255, value281)
    return this284
}


function saveTimerDialogHandle(hashtable this167, integer parentKey215, integer childKey151, timerdialog value116) returns hashtable{ 
    SaveTimerDialogHandle(this167, parentKey215, childKey151, value116)
    return this167
}


function saveTimerHandle(hashtable this109, integer parentKey245, integer childKey147, timer value492) returns hashtable{ 
    SaveTimerHandle(this109, parentKey245, childKey147, value492)
    return this109
}


function saveTrackableHandle(hashtable this214, integer parentKey754, integer childKey311, trackable value251) returns hashtable{ 
    SaveTrackableHandle(this214, parentKey754, childKey311, value251)
    return this214
}


function saveTriggerActionHandle(hashtable this172, integer parentKey292, integer childKey281, triggeraction value380) returns hashtable{ 
    SaveTriggerActionHandle(this172, parentKey292, childKey281, value380)
    return this172
}


function saveTriggerConditionHandle(hashtable this235, integer parentKey145, integer childKey284, triggercondition value129) returns hashtable{ 
    SaveTriggerConditionHandle(this235, parentKey145, childKey284, value129)
    return this235
}


function saveTriggerEventHandle(hashtable this113, integer parentKey489, integer childKey925, event value174) returns hashtable{ 
    SaveTriggerEventHandle(this113, parentKey489, childKey925, value174)
    return this113
}


function saveTriggerHandle(hashtable this180, integer parentKey161, integer childKey234, trigger value682) returns hashtable{ 
    SaveTriggerHandle(this180, parentKey161, childKey234, value682)
    return this180
}


function saveUbersplatHandle(hashtable this163, integer parentKey909, integer childKey814, ubersplat value245) returns hashtable{ 
    SaveUbersplatHandle(this163, parentKey909, childKey814, value245)
    return this163
}


function saveUnitHandle(hashtable this911, integer parentKey979, integer childKey167, unit value165) returns hashtable{ 
    SaveUnitHandle(this911, parentKey979, childKey167, value165)
    return this911
}


function saveUnitPoolHandle(hashtable this204, integer parentKey119, integer childKey216, unitpool value128) returns hashtable{ 
    SaveUnitPoolHandle(this204, parentKey119, childKey216, value128)
    return this204
}


function saveWidgetHandle(hashtable this279, integer parentKey346, integer childKey503, widget value214) returns hashtable{ 
    SaveWidgetHandle(this279, parentKey346, childKey503, value214)
    return this279
}


function flushChild(hashtable this310, integer parentKey240) returns void{ 
    FlushChildHashtable(this310, parentKey240)
}


function flush(hashtable this506) returns void{ 
    FlushParentHashtable(this506)
}


function convertUnitTypeToInt(unittype ut183) returns integer{ 
    if (ut183 == UNIT_TYPE_HERO219){
        return 0
    } else {
        if (ut183 == UNIT_TYPE_DEAD329){
            return 1
        } else {
            if (ut183 == UNIT_TYPE_STRUCTURE100){
                return 2
            } else {
                if (ut183 == UNIT_TYPE_FLYING301){
                    return 3
                } else {
                    if (ut183 == UNIT_TYPE_STRUCTURE100){
                        return 2
                    } else {
                        if (ut183 == UNIT_TYPE_ATTACKS_FLYING160){
                            return 5
                        } else {
                            if (ut183 == UNIT_TYPE_ATTACKS_GROUND503){
                                return 6
                            } else {
                                if (ut183 == UNIT_TYPE_MELEE_ATTACKER564){
                                    return 7
                                } else {
                                    if (ut183 == UNIT_TYPE_RANGED_ATTACKER319){
                                        return 8
                                    } else {
                                        if (ut183 == UNIT_TYPE_GIANT969){
                                            return 9
                                        } else {
                                            if (ut183 == UNIT_TYPE_SUMMONED230){
                                                return 10
                                            } else {
                                                if (ut183 == UNIT_TYPE_STUNNED316){
                                                    return 11
                                                } else {
                                                    if (ut183 == UNIT_TYPE_PLAGUED923){
                                                        return 12
                                                    } else {
                                                        if (ut183 == UNIT_TYPE_SNARED122){
                                                            return 13
                                                        } else {
                                                            if (ut183 == UNIT_TYPE_UNDEAD203){
                                                                return 14
                                                            } else {
                                                                if (ut183 == UNIT_TYPE_MECHANICAL153){
                                                                    return 15
                                                                } else {
                                                                    if (ut183 == UNIT_TYPE_PEON186){
                                                                        return 16
                                                                    } else {
                                                                        if (ut183 == UNIT_TYPE_SAPPER240){
                                                                            return 17
                                                                        } else {
                                                                            if (ut183 == UNIT_TYPE_TOWNHALL406){
                                                                                return 18
                                                                            } else {
                                                                                if (ut183 == UNIT_TYPE_ANCIENT256){
                                                                                    return 19
                                                                                } else {
                                                                                    if (ut183 == UNIT_TYPE_TAUREN323){
                                                                                        return 20
                                                                                    } else {
                                                                                        if (ut183 == UNIT_TYPE_POISONED131){
                                                                                            return 21
                                                                                        } else {
                                                                                            if (ut183 == UNIT_TYPE_POLYMORPHED779){
                                                                                                return 22
                                                                                            } else {
                                                                                                if (ut183 == UNIT_TYPE_SLEEPING223){
                                                                                                    return 23
                                                                                                } else {
                                                                                                    if (ut183 == UNIT_TYPE_RESISTANT199){
                                                                                                        return 24
                                                                                                    } else {
                                                                                                        if (ut183 == UNIT_TYPE_ETHEREAL319){
                                                                                                            return 25
                                                                                                        } else {
                                                                                                            if (ut183 == UNIT_TYPE_MAGIC_IMMUNE162){
                                                                                                                return 26
                                                                                                            } else {
                                                                                                                return (- 1)
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}


function setLength(<real, real, real> this401, real length202) returns <real, real, real>{ 
    local real l213
    l213 = SquareRoot((((this401#0 * this401#0) + (this401#1 * this401#1)) + (this401#2 * this401#2)))
    if (l213 == 0.0){
        printError("vector.setLength error: The length of the vector is 0.0!")
        return <0., 0., 0.>
    } else {
    }
    l213 = (length202 / l213)
    return <(this401#0 * l213), (this401#1 * l213), (this401#2 * l213)>
}


function op_plus(<real, real, real> this428, <real, real, real> v125) returns <real, real, real>{ 
    return <(this428#0 + v125#0), (this428#1 + v125#1), (this428#2 + v125#2)>
}


function op_minus(<real, real, real> this104, <real, real, real> v601) returns <real, real, real>{ 
    return <(this104#0 - v601#0), (this104#1 - v601#1), (this104#2 - v601#2)>
}


function addVec2(<real, real, real> this264, <real, real> v731) returns <real, real, real>{ 
    return <(this264#0 + v731#0), (this264#1 + v731#1), this264#2>
}


function addReals(<real, real, real> this113, real x357, real y272, real z123) returns <real, real, real>{ 
    return <(this113#0 + x357), (this113#1 + y272), (this113#2 + z123)>
}


function sub(<real, real, real> this250, <real, real, real> v251) returns <real, real, real>{ 
    return <(this250#0 - v251#0), (this250#1 - v251#1), (this250#2 - v251#2)>
}


function subVec2(<real, real, real> this413, <real, real> v206) returns <real, real, real>{ 
    return <(this413#0 - v206#0), (this413#1 - v206#1), this413#2>
}


function scale(<real, real, real> this601, real factor148) returns <real, real, real>{ 
    return <(this601#0 * factor148), (this601#1 * factor148), (this601#2 * factor148)>
}


function scaleXY(<real, real, real> this255, real factor102) returns <real, real, real>{ 
    return <(this255#0 * factor102), (this255#1 * factor102), this255#2>
}


function cross(<real, real, real> this259, <real, real, real> v104) returns <real, real, real>{ 
    return <((this259#1 * v104#2) - (this259#2 * v104#1)), ((this259#2 * v104#0) - (this259#0 * v104#2)), ((this259#0 * v104#1) - (this259#1 * v104#0))>
}


function dot(<real, real, real> this306, <real, real, real> v269) returns real{ 
    return (((this306#0 * v269#0) + (this306#1 * v269#1)) + (this306#2 * v269#2))
}


function op_mult(<real, real, real> this286, real factor222) returns <real, real, real>{ 
    return <(this286#0 * factor222), (this286#1 * factor222), (this286#2 * factor222)>
}


function project(<real, real, real> this136, <real, real, real> direction134) returns <real, real, real>{ 
    local real l169
    l169 = (((direction134#0 * direction134#0) + (direction134#1 * direction134#1)) + (direction134#2 * direction134#2))
    if (l169 == 0.0){
        printError("vector.projectVector error: The length of the direction vector is 0.0!")
        return <0., 0., 0.>
    } else {
    }
    l169 = ((((this136#0 * direction134#0) + (this136#1 * direction134#1)) + (this136#2 * direction134#2)) / l169)
    return <(direction134#0 * l169), (direction134#1 * l169), (direction134#2 * l169)>
}


function norm(<real, real, real> this286) returns <real, real, real>{ 
    local real len462
    local real x258
    local real y379
    local real z227
    len462 = length(this286)
    x258 = 0.
    y379 = 0.
    z227 = 0.
    if (len462 != 0.0){
        x258 = (this286#0 / len462)
        y379 = (this286#1 / len462)
        z227 = (this286#2 / len462)
    } else {
    }
    return <x258, y379, z227>
}


function length(<real, real, real> this227) returns real{ 
    return SquareRoot((((this227#0 * this227#0) + (this227#1 * this227#1)) + (this227#2 * this227#2)))
}


function trim(<real, real, real> this897, real value178) returns <real, real, real>{ 
    local <real, real, real> result318
    result318 = this897
    if ((result318#0 > (- value178)) and (result318#0 < value178)){
        result318 #0 = 0.
    } else {
    }
    if ((result318#1 > (- value178)) and (result318#1 < value178)){
        result318 #1 = 0.
    } else {
    }
    if ((result318#2 > (- value178)) and (result318#2 < value178)){
        result318 #2 = 0.
    } else {
    }
    return result318
}


function toVec2(<real, real, real> this158) returns <real, real>{ 
    return <this158#0, this158#1>
}


function lengthXY(<real, real, real> this148) returns real{ 
    return SquareRoot(((this148#0 * this148#0) + (this148#1 * this148#1)))
}


function toString(<real, real, real> this151) returns string{ 
    return (((((("Vector3 [ " + toString(this151#0)) + ", ") + toString(this151#1)) + ", ") + toString(this151#2)) + " ]")
}


function add(<real, real> this291, <real, real> v160) returns <real, real>{ 
    return <(this291#0 + v160#0), (this291#1 + v160#1)>
}


function sub(<real, real> this299, <real, real> v809) returns <real, real>{ 
    return <(this299#0 - v809#0), (this299#1 - v809#1)>
}


function scale(<real, real> this274, real factor266) returns <real, real>{ 
    return <(this274#0 * factor266), (this274#1 * factor266)>
}


function norm(<real, real> this168) returns <real, real>{ 
    local real len758
    local real x250
    local real y603
    len758 = length(this168)
    x250 = 0.
    y603 = 0.
    if (len758 != 0.0){
        x250 = (this168#0 / len758)
        y603 = (this168#1 / len758)
    } else {
    }
    return <x250, y603>
}


function length(<real, real> this196) returns real{ 
    return SquareRoot(((this196#0 * this196#0) + (this196#1 * this196#1)))
}


function dot(<real, real> this214, <real, real> v130) returns real{ 
    return ((this214#0 * v130#0) + (this214#1 * v130#1))
}


function trim(<real, real> this206, real value574) returns <real, real>{ 
    local <real, real> result245
    result245 = this206
    if ((result245#0 > (- value574)) and (result245#0 < value574)){
        result245 #0 = 0.
    } else {
    }
    if ((this206#1 > (- value574)) and (this206#1 < value574)){
        result245 #1 = 0.
    } else {
    }
    return result245
}


function toString(<real, real> this102) returns string{ 
    return (((("Vector2 [ " + toString(this102#0)) + ", ") + toString(this102#1)) + " ]")
}


function op_plus(<real, real> this189, <real, real> v222) returns <real, real>{ 
    return <(this189#0 + v222#0), (this189#1 + v222#1)>
}


function op_minus(<real, real> this158, <real, real> v646) returns <real, real>{ 
    return <(this158#0 - v646#0), (this158#1 - v646#1)>
}


function op_mult(<real, real> this921, real factor248) returns <real, real>{ 
    return <(this921#0 * factor248), (this921#1 * factor248)>
}


function getPos(unit this132) returns <real, real>{ 
    return <getX(this132), getY(this132)>
}


function angleTo(<real, real> this187, <real, real> v739) returns real{ 
    return Atan2((v739#1 - this187#1), (v739#0 - this187#0))
}


function polarOffset(<real, real> this320, real angle908, real dist184) returns <real, real>{ 
    return <(this320#0 + (Cos(angle908) * dist184)), (this320#1 + (Sin(angle908) * dist184))>
}


function polarProjectionX(real x114, real dist562, real angle178) returns real{ 
    return (x114 + (dist562 * Cos((angle178 * DEGTORAD522))))
}


function polarProjectionY(real y156, real dist129, real angle361) returns real{ 
    return (y156 + (dist129 * Sin((angle361 * DEGTORAD522))))
}


function polarProjectionZ(real z175, real dist137, real angle701) returns real{ 
    return (z175 + (dist137 * Sin((angle701 * DEGTORAD522))))
}


function angleBetweenCoords(real x1146, real y1975, real x2152, real y2138) returns real{ 
    return (RADTODEG173 * Atan2((y2138 - y1975), (x2152 - x1146)))
}


function distanceBetweenCoords(real x1171, real y1328, real x2191, real y2330) returns real{ 
    return SquareRoot((((x2191 - x1171) * (x2191 - x1171)) + ((y2330 - y1328) * (y2330 - y1328))))
}


function getSlopeAngle(real z1695, real z2325, real dist333) returns real{ 
    return Atan2((z2325 - z1695), dist333)
}


function polarProjection3d(<real, real, real> pos149, real distance305, real angleGround167, real angleAir659) returns <real, real, real>{ 
    local real x102
    local real y202
    local real z234
    x102 = (pos149#0 + ((distance305 * Cos(angleGround167)) * Sin(angleAir659)))
    y202 = (pos149#1 + ((distance305 * Sin(angleGround167)) * Sin(angleAir659)))
    z234 = (pos149#2 + (distance305 * Cos(angleAir659)))
    return <x102, y202, z234>
}


function Table_loadInt(integer this342, integer parentKey249) returns integer{ 
    return loadInt(ht108, this342, parentKey249)
}


function Table_saveInt(integer this267, integer parentKey229, integer value287) returns void{ 
    saveInt(ht108, this267, parentKey229, value287)
}


function Table_hasInt(integer this474, integer parentKey219) returns boolean{ 
    return hasInt(ht108, this474, parentKey219)
}


function Table_removeInt(integer this664, integer parentKey292) returns void{ 
    RemoveSavedInteger(ht108, this664, parentKey292)
}


function RemoveSavedInteger(hashtable table361, integer parentKey541, integer childKey112) returns void{ 
}


function Table_loadReal(integer this193, integer parentKey228) returns real{ 
    return loadReal(ht108, this193, parentKey228)
}


function Table_saveReal(integer this146, integer parentKey276, real value220) returns void{ 
    saveReal(ht108, this146, parentKey276, value220)
}


function Table_hasReal(integer this487, integer parentKey226) returns boolean{ 
    return hasReal(ht108, this487, parentKey226)
}


function Table_removeReal(integer this261, integer parentKey316) returns void{ 
    RemoveSavedReal(ht108, this261, parentKey316)
}


function RemoveSavedReal(hashtable table322, integer parentKey280, integer childKey942) returns void{ 
}


function Table_removeHandle(integer this106, integer parentKey237) returns void{ 
    RemoveSavedHandle(ht108, this106, parentKey237)
}


function RemoveSavedHandle(hashtable table156, integer parentKey220, integer childKey850) returns void{ 
}


function Table_loadPlayer(integer this165, integer parentKey366) returns player{ 
    return loadPlayerHandle(ht108, this165, parentKey366)
}


function Table_savePlayer(integer this138, integer parentKey287, player value197) returns void{ 
    savePlayerHandle(ht108, this138, parentKey287, value197)
}


function Table_loadWidget(integer this156, integer parentKey218) returns widget{ 
    return loadWidgetHandle(ht108, this156, parentKey218)
}


function Table_saveWidget(integer this249, integer parentKey136, widget value898) returns void{ 
    saveWidgetHandle(ht108, this249, parentKey136, value898)
}


function Table_loadUnit(integer this201, integer parentKey315) returns unit{ 
    return loadUnitHandle(ht108, this201, parentKey315)
}


function Table_saveUnit(integer this151, integer parentKey317, unit value143) returns void{ 
    saveUnitHandle(ht108, this151, parentKey317, value143)
}


function Table_loadDestructable(integer this247, integer parentKey314) returns destructable{ 
    return loadDestructableHandle(ht108, this247, parentKey314)
}


function Table_saveDestructable(integer this138, integer parentKey281, destructable value280) returns void{ 
    saveDestructableHandle(ht108, this138, parentKey281, value280)
}


function Table_loadItem(integer this170, integer parentKey972) returns item{ 
    return loadItemHandle(ht108, this170, parentKey972)
}


function Table_saveItem(integer this287, integer parentKey299, item value324) returns void{ 
    saveItemHandle(ht108, this287, parentKey299, value324)
}


function Table_loadAbility(integer this300, integer parentKey107) returns ability{ 
    return loadAbilityHandle(ht108, this300, parentKey107)
}


function Table_saveAbility(integer this220, integer parentKey893, ability value183) returns void{ 
    saveAbilityHandle(ht108, this220, parentKey893, value183)
}


function Table_loadForce(integer this198, integer parentKey313) returns force{ 
    return loadForceHandle(ht108, this198, parentKey313)
}


function Table_saveForce(integer this227, integer parentKey268, force value952) returns void{ 
    saveForceHandle(ht108, this227, parentKey268, value952)
}


function Table_loadGroup(integer this313, integer parentKey110) returns group{ 
    return loadGroupHandle(ht108, this313, parentKey110)
}


function Table_saveGroup(integer this283, integer parentKey163, group value211) returns void{ 
    saveGroupHandle(ht108, this283, parentKey163, value211)
}


function Table_loadTrigger(integer this350, integer parentKey658) returns trigger{ 
    return loadTriggerHandle(ht108, this350, parentKey658)
}


function Table_saveTrigger(integer this184, integer parentKey337, trigger value137) returns void{ 
    saveTriggerHandle(ht108, this184, parentKey337, value137)
}


function Table_loadTimer(integer this121, integer parentKey142) returns timer{ 
    return loadTimerHandle(ht108, this121, parentKey142)
}


function Table_saveTimer(integer this181, integer parentKey306, timer value116) returns void{ 
    saveTimerHandle(ht108, this181, parentKey306, value116)
}


function Table_loadLocation(integer this329, integer parentKey118) returns location{ 
    return loadLocationHandle(ht108, this329, parentKey118)
}


function Table_saveLocation(integer this229, integer parentKey279, location value782) returns void{ 
    saveLocationHandle(ht108, this229, parentKey279, value782)
}


function Table_loadRegion(integer this239, integer parentKey156) returns region{ 
    return loadRegionHandle(ht108, this239, parentKey156)
}


function Table_saveRegion(integer this543, integer parentKey177, region value217) returns void{ 
    saveRegionHandle(ht108, this543, parentKey177, value217)
}


function Table_loadRect(integer this285, integer parentKey313) returns rect{ 
    return loadRectHandle(ht108, this285, parentKey313)
}


function Table_saveRect(integer this731, integer parentKey165, rect value973) returns void{ 
    saveRectHandle(ht108, this731, parentKey165, value973)
}


function Table_loadSound(integer this158, integer parentKey268) returns sound{ 
    return loadSoundHandle(ht108, this158, parentKey268)
}


function Table_saveSound(integer this232, integer parentKey176, sound value309) returns void{ 
    saveSoundHandle(ht108, this232, parentKey176, value309)
}


function Table_loadEffect(integer this335, integer parentKey242) returns effect{ 
    return loadEffectHandle(ht108, this335, parentKey242)
}


function Table_saveEffect(integer this305, integer parentKey186, effect value277) returns void{ 
    saveEffectHandle(ht108, this305, parentKey186, value277)
}


function Table_loadDialog(integer this236, integer parentKey159) returns dialog{ 
    return loadDialogHandle(ht108, this236, parentKey159)
}


function Table_saveDialog(integer this296, integer parentKey166, dialog value115) returns void{ 
    saveDialogHandle(ht108, this296, parentKey166, value115)
}


function Table_loadButton(integer this200, integer parentKey197) returns button{ 
    return loadButtonHandle(ht108, this200, parentKey197)
}


function Table_saveButton(integer this262, integer parentKey258, button value226) returns void{ 
    saveButtonHandle(ht108, this262, parentKey258, value226)
}


function Table_loadQuest(integer this280, integer parentKey119) returns quest{ 
    return loadQuestHandle(ht108, this280, parentKey119)
}


function Table_saveQuest(integer this192, integer parentKey323, quest value142) returns void{ 
    saveQuestHandle(ht108, this192, parentKey323, value142)
}


function Table_loadLeaderboard(integer this104, integer parentKey320) returns leaderboard{ 
    return loadLeaderboardHandle(ht108, this104, parentKey320)
}


function Table_saveLeaderboard(integer this160, integer parentKey170, leaderboard value277) returns void{ 
    saveLeaderboardHandle(ht108, this160, parentKey170, value277)
}


function Table_loadMultiboard(integer this231, integer parentKey204) returns multiboard{ 
    return loadMultiboardHandle(ht108, this231, parentKey204)
}


function Table_saveMultiboard(integer this292, integer parentKey272, multiboard value248) returns void{ 
    saveMultiboardHandle(ht108, this292, parentKey272, value248)
}


function Table_loadTrackable(integer this178, integer parentKey487) returns trackable{ 
    return loadTrackableHandle(ht108, this178, parentKey487)
}


function Table_saveTrackable(integer this624, integer parentKey260, trackable value916) returns void{ 
    saveTrackableHandle(ht108, this624, parentKey260, value916)
}


function Table_loadLightning(integer this271, integer parentKey307) returns lightning{ 
    return loadLightningHandle(ht108, this271, parentKey307)
}


function Table_saveLightning(integer this651, integer parentKey696, lightning value312) returns void{ 
    saveLightningHandle(ht108, this651, parentKey696, value312)
}


function Table_loadImage(integer this228, integer parentKey899) returns image{ 
    return loadImageHandle(ht108, this228, parentKey899)
}


function Table_saveImage(integer this121, integer parentKey270, image value307) returns void{ 
    saveImageHandle(ht108, this121, parentKey270, value307)
}


function Table_loadUbersplat(integer this195, integer parentKey994) returns ubersplat{ 
    return loadUbersplatHandle(ht108, this195, parentKey994)
}


function Table_saveUbersplat(integer this182, integer parentKey120, ubersplat value174) returns void{ 
    saveUbersplatHandle(ht108, this182, parentKey120, value174)
}


function Table_flush(integer this871) returns void{ 
    FlushChildHashtable(ht108, this871)
}


function new_Table() returns integer{ 
    local integer this253
    if (Table_firstFree631 > 0){
        this253 = Table_firstFree631
        Table_firstFree631 = Table_nextFree296[this253]
    } else {
        Table_maxIndex176 = (Table_maxIndex176 + 1)
        this253 = Table_maxIndex176
    }
    Table_nextFree296[this253] = -1
    Table_typeId367[this253] = 1
    construct_Table(this253)
    return this253
}


function construct_Table(integer this331) returns void{ 
}


function destroyTable(integer this115) returns void{ 
    Table_flush(this115)
    if (Table_nextFree296[this115] < 0){
        Table_nextFree296[this115] = Table_firstFree631
        Table_firstFree631 = this115
    } else {
        $debugPrint("Double Free of Table")
    }
}


function registerUnitInRangeSource(trigger this330, unit whichUnit188, real range314) returns event{ 
    local integer h249
    local integer u256
    h249 = GetHandleId(this330)
    u256 = GetHandleId(whichUnit188)
    Table_saveUnit(triggerData369, h249, whichUnit188)
    Table_saveTrigger(triggerData369, u256, this330)
    return TriggerRegisterUnitInRange(this330, whichUnit188, range314, null)
}


function getSource(trigger this139) returns unit{ 
    return Table_loadUnit(triggerData369, GetHandleId(this139))
}


function clearRegister(unit this257) returns void{ 
    local integer h165
    local trigger t118
    local integer th138
    h165 = GetHandleId(this257)
    t118 = Table_loadTrigger(triggerData369, h165)
    th138 = GetHandleId(t118)
    DestroyTrigger(t118)
    Table_removeHandle(triggerData369, h165)
    Table_removeHandle(triggerData369, th138)
}


function DestroyTrigger(trigger whichTrigger134) returns void{ 
}


function enable(trigger this773) returns trigger{ 
    EnableTrigger(this773)
    return this773
}


function EnableTrigger(trigger whichTrigger160) returns void{ 
}


function disable(trigger this204) returns trigger{ 
    DisableTrigger(this204)
    return this204
}


function DisableTrigger(trigger whichTrigger256) returns void{ 
}


function destr(trigger this892) returns void{ 
    DestroyTrigger(this892)
}


function reset(trigger this943) returns trigger{ 
    ResetTrigger(this943)
    return this943
}


function ResetTrigger(trigger whichTrigger120) returns void{ 
}


function addAction(trigger this227, code actionFunc266) returns trigger{ 
    TriggerAddAction(this227, actionFunc266)
    return this227
}


function addCondition(trigger this828, boolexpr condition100) returns trigger{ 
    TriggerAddCondition(this828, condition100)
    return this828
}


function TriggerAddCondition(trigger whichTrigger425, boolexpr condition267) returns triggercondition{ 
}


function evaluate(trigger this184) returns trigger{ 
    TriggerEvaluate(this184)
    return this184
}


function execute(trigger this291) returns trigger{ 
    TriggerExecute(this291)
    return this291
}


function registerAnyUnitEvent(trigger this176, playerunitevent whichEvent368) returns trigger{ 
    TriggerRegisterAnyUnitEventBJ(this176, whichEvent368)
    return this176
}


function newDummyUnit(player p197, real x240, real y688, real face933) returns unit{ 
    return Dummy_newDummy(p197, x240, y688, face933)
}


function Dummy_newDummy(player p126, real x162, real y241, real face280) returns unit{ 
    local integer q160
    local integer dum333
    local real angle291
    null
    null
    angle291 = face280
    loop {
        exitwhen (not (angle291 <= 0.0))
        angle291 = (angle291 + 360.0)
    }
    loop {
        exitwhen (not (angle291 >= 360.0))
        angle291 = (angle291 - 360.0)
    }
    q160 = RecycleQueue_get(angle291)
    if (queueSize280[q160] == 0){
        staticDummy989 = CreateUnit(p126, DUMMY_UNIT_ID197, x162, y241, angle291)
        UnitAddAbility(staticDummy989, HEIGHT_ENABLER205)
        UnitAddAbility(staticDummy989, 1097625443)
        UnitRemoveAbility(staticDummy989, HEIGHT_ENABLER205)
        SetUnitX(staticDummy989, x162)
        SetUnitY(staticDummy989, y241)
    } else {
        dum333 = Dummy_queueRemove(q160)
        staticDummy989 = u258[dum333]
        destroyDummy(dum333)
        SetUnitX(staticDummy989, x162)
        SetUnitY(staticDummy989, y241)
        SetUnitFacing(staticDummy989, angle291)
        SetUnitOwner(staticDummy989, p126, true)
    }
    return staticDummy989
}


function releaseDummyUnit(unit u833) returns void{ 
    Dummy_release(u833)
}


function Dummy_release(unit u101) returns void{ 
    new_Dummy(u101)
}


function RecycleQueue_get(real angle425) returns integer{ 
    return rqs244[R2I(((angle425 / 360.0) * ANGLE_RESOLUTION132))]
}


function RecycleQueue_initRecycleQueues() returns void{ 
    local integer i330
    local integer temp169
    {
        i330 = 0
        temp169 = ANGLE_RESOLUTION132
        loop {
            exitwhen (i330 > temp169)
            rqs244[i330] = new_RecycleQueue(((i330 - 0.5) * (360.0 / ANGLE_RESOLUTION132)))
            i330 = (i330 + 1)
        }
        null}
    prev244[first299] = last130
    next151[last130] = first299
}


function new_RecycleQueue(real angle173) returns integer{ 
    local integer this239
    if (RecycleQueue_firstFree988 > 0){
        this239 = RecycleQueue_firstFree988
        RecycleQueue_firstFree988 = RecycleQueue_nextFree286[this239]
    } else {
        RecycleQueue_maxIndex266 = (RecycleQueue_maxIndex266 + 1)
        this239 = RecycleQueue_maxIndex266
    }
    RecycleQueue_nextFree286[this239] = -1
    RecycleQueue_typeId186[this239] = 2
    construct_RecycleQueue(this239, angle173)
    return this239
}


function RecycleQueue_getFirst() returns integer{ 
    return first299
}


function RecycleQueue_getNext(integer this721) returns integer{ 
    return next151[this721]
}


function RecycleQueue_getPrev(integer this102) returns integer{ 
    return prev244[this102]
}


function construct_RecycleQueue(integer this259, real angle199) returns void{ 
    angle121[this259] = 0.
    size259 = (size259 + 1)
    if (size259 == 1){
        first299 = this259
        prev244[this259] = 0
    } else {
        prev244[this259] = last130
        next151[last130] = this259
        prev244[first299] = this259
    }
    next151[this259] = 0
    last130 = this259
    angle121[this259] = angle199
}


function destroyRecycleQueue(integer this264) returns void{ 
    size259 = (size259 - 1)
    if (this264 != first299){
        next151[prev244[this264]] = next151[this264]
    } else {
    }
    if (this264 != last130){
        prev244[next151[this264]] = prev244[this264]
    } else {
    }
    if (this264 == last130){
        last130 = prev244[this264]
    } else {
    }
    if (this264 == first299){
        first299 = next151[this264]
    } else {
    }
    if (RecycleQueue_nextFree286[this264] < 0){
        RecycleQueue_nextFree286[this264] = RecycleQueue_firstFree988
        RecycleQueue_firstFree988 = this264
    } else {
        $debugPrint("Double Free of RecycleQueue")
    }
}


function Dummy_queueInsert(integer this165, integer q240) returns void{ 
    local integer dum205
    SetUnitFacing(u258[this165], angle121[q240])
    null
    if (queueSize280[q240] == 0){
        firstDummy203[q240] = this165
    } else {
        next291[lastDummy262[q240]] = this165
    }
    lastDummy262[q240] = this165
    next291[this165] = 0
    if (queueSize280[q240] > queueSize280[next151[q240]]){
        dum205 = firstDummy203[q240]
        firstDummy203[q240] = next291[dum205]
        Dummy_queueInsert(dum205, next151[q240])
    } else {
        if (queueSize280[q240] > queueSize280[prev244[q240]]){
            dum205 = firstDummy203[q240]
            firstDummy203[q240] = next291[dum205]
            Dummy_queueInsert(dum205, prev244[q240])
        } else {
            queueSize280[q240] = (queueSize280[q240] + 1)
        }
    }
}


function Dummy_queueRemove(integer q172) returns integer{ 
    local integer d741
    null
    if (queueSize280[q172] < queueSize280[next151[q172]]){
        d741 = lastDummy262[q172]
        lastDummy262[q172] = Dummy_queueRemove(next151[q172])
        next291[d741] = lastDummy262[q172]
        SetUnitFacing(u258[lastDummy262[q172]], angle121[q172])
    } else {
        if (queueSize280[q172] < queueSize280[prev244[q172]]){
            d741 = lastDummy262[q172]
            lastDummy262[q172] = Dummy_queueRemove(prev244[q172])
            next291[d741] = lastDummy262[q172]
            SetUnitFacing(u258[lastDummy262[q172]], angle121[q172])
        } else {
            queueSize280[q172] = (queueSize280[q172] - 1)
            if (queueSize280[q172] == 0){
                lastDummy262[q172] = 0
            } else {
            }
        }
    }
    d741 = firstDummy203[q172]
    firstDummy203[q172] = next291[d741]
    next291[d741] = 0
    return d741
}


function destroyDummy(integer this255) returns void{ 
    GroupRemoveUnit(g393, u258[this255])
    ShowUnit(u258[this255], true)
    if (Dummy_nextFree113[this255] < 0){
        Dummy_nextFree113[this255] = Dummy_firstFree203
        Dummy_firstFree203 = this255
    } else {
        $debugPrint("Double Free of Dummy")
    }
}


function new_Dummy(unit u196) returns integer{ 
    local integer this734
    if (Dummy_firstFree203 > 0){
        this734 = Dummy_firstFree203
        Dummy_firstFree203 = Dummy_nextFree113[this734]
    } else {
        Dummy_maxIndex141 = (Dummy_maxIndex141 + 1)
        this734 = Dummy_maxIndex141
    }
    Dummy_nextFree113[this734] = -1
    Dummy_typeId312[this734] = 3
    construct_Dummy(this734, u196)
    return this734
}


function construct_Dummy(integer this116, unit u448) returns void{ 
    if (GetUnitTypeId(u448) != DUMMY_UNIT_ID197){
        printError("ReleaseDummy error: Method called on a unit of an incorrect type.")
    } else {
        if IsUnitInGroup(u448, g393){
            printError("ReleaseDummy error: Method called on an already released unit.")
        } else {
            if (this116 > DUMMY_STACK_LIMIT179){
                RemoveUnit(u448)
                destroyDummy(this116)
            } else {
            }
            u258[this116] = u448
            GroupAddUnit(g393, u448)
            Dummy_queueInsert(this116, RecycleQueue_get(GetUnitFacing(u448)))
            SetUnitAnimationByIndex(u448, 90)
            SetUnitScale(u448, 1., 0., 0.)
            SetUnitVertexColor(u448, 255, 255, 255, 255)
        }
    }
}


function IsUnitInGroup(unit whichUnit157, group whichGroup233) returns boolean{ 
}


function SetUnitAnimationByIndex(unit whichUnit921, integer whichAnimation215) returns void{ 
}


function destr(effect this105) returns void{ 
    DestroyEffect(this105)
}


function Fx_getOwner(integer this321) returns player{ 
    return getOwner(dummy191[this321])
}


function Fx_setOwner(integer this124, player p106) returns integer{ 
    setOwner(dummy191[this124], p106, false)
    return this124
}


function Fx_setTeamcolor(integer this208, playercolor c311) returns integer{ 
    SetUnitColor(dummy191[this208], c311)
    return this208
}


function Fx_setScale(integer this130, real value270) returns integer{ 
    setScale(dummy191[this130], value270)
    return this130
}


function Fx_getGreen(integer this276) returns integer{ 
    return green118[this276]
}


function Fx_getBlue(integer this285) returns integer{ 
    return blue232[this285]
}


function Fx_getRed(integer this283) returns integer{ 
    return red185[this283]
}


function Fx_getAlpha(integer this622) returns integer{ 
    return alpha299[this622]
}


function Fx_recolor(integer this240, integer r546, integer g302, integer b312, integer a291) returns integer{ 
    red185[this240] = r546
    green118[this240] = g302
    blue232[this240] = b312
    alpha299[this240] = a291
    setVertexColor(dummy191[this240], r546, g302, b312, a291)
    return this240
}


function Fx_flash(integer this163, string fx762) returns integer{ 
    destr(addEffect(dummy191[this163], fx762, "origin"))
    return this163
}


function Fx_getXYAngle(integer this172) returns real{ 
    return (getFacing(dummy191[this172]) * bj_DEGTORAD321)
}


function Fx_setXYAngle(integer this102, real value259) returns integer{ 
    setFacing(dummy191[this102], (value259 * bj_RADTODEG169))
    return this102
}


function Fx_setXYAngleInstant(integer this253, real value262) returns integer{ 
    local real x109
    local real y284
    x109 = Fx_getX(this253)
    y284 = Fx_getY(this253)
    destr(fx552[this253])
    RemoveUnit(dummy191[this253])
    dummy191[this253] = setPos(addAbility(removeAbility(addAbility(CreateUnit(DUMMY_PLAYER328, DUMMY_UNIT_ID197, x109, y284, (value262 * bj_RADTODEG169)), 1097691750), 1097691750), 1097625443), x109, y284)
    Fx_setFx(this253, sfxPath154[this253])
    return this253
}


function Fx_getX(integer this143) returns real{ 
    return getX(dummy191[this143])
}


function Fx_getY(integer this320) returns real{ 
    return getY(dummy191[this320])
}


function Fx_setFx(integer this148, string newpath185) returns integer{ 
    if (fx552[this148] != null){
        destr(fx552[this148])
    } else {
    }
    if (newpath185 == ""){
        fx552[this148] = null
    } else {
        fx552[this148] = addEffect(dummy191[this148], newpath185, "origin")
    }
    sfxPath154[this148] = newpath185
    return this148
}


function Fx_getZAngle(integer this257) returns real{ 
    return zAngle744[this257]
}


function Fx_setZAngle(integer this204, real value206) returns integer{ 
    local integer i261
    i261 = R2I(((value206 * bj_RADTODEG169) + 90.5))
    zAngle744[this204] = value206
    if (i261 >= 180){
        i261 = 179
    } else {
        if (i261 < 0){
            i261 = 0
        } else {
        }
    }
    SetUnitAnimationByIndex(dummy191[this204], i261)
    return this204
}


function Fx_getZ(integer this728) returns real{ 
    return getFlyHeight(dummy191[this728])
}


function Fx_setX(integer this252, real x222) returns integer{ 
    setX(dummy191[this252], x222)
    return this252
}


function Fx_setY(integer this223, real y285) returns integer{ 
    setY(dummy191[this223], y285)
    return this223
}


function Fx_setPos(integer this233, real x902, real y273) returns integer{ 
    setPos(dummy191[this233], x902, y273)
    return this233
}


function Fx_setZ(integer this329, real z165) returns integer{ 
    setFlyHeight(dummy191[this329], z165, 0.)
    return this329
}


function Fx_hiddenDestroy(integer this208) returns void{ 
    hide(dummy191[this208])
    destroyFx(this208)
}


function destroyFx(integer this255) returns void{ 
    if (fx552[this255] != null){
        destr(fx552[this255])
    } else {
    }
    new_Recyclebin(dummy191[this255])
    dummy191[this255] = null
    if (Fx_nextFree314[this255] < 0){
        Fx_nextFree314[this255] = Fx_firstFree174
        Fx_firstFree174 = this255
    } else {
        $debugPrint("Double Free of Fx")
    }
}


function new_Fx(real x150, real y910, real facing752) returns integer{ 
    local integer this874
    if (Fx_firstFree174 > 0){
        this874 = Fx_firstFree174
        Fx_firstFree174 = Fx_nextFree314[this874]
    } else {
        Fx_maxIndex113 = (Fx_maxIndex113 + 1)
        this874 = Fx_maxIndex113
    }
    Fx_nextFree314[this874] = -1
    Fx_typeId134[this874] = 4
    construct_Fx(this874, x150, y910, facing752)
    return this874
}


function construct_Fx(integer this214, real x457, real y199, real facing605) returns void{ 
    dummy191[this214] = null
    fx552[this214] = null
    zAngle744[this214] = 0.
    red185[this214] = 255
    green118[this214] = 255
    blue232[this214] = 255
    alpha299[this214] = 255
    dummy191[this214] = newDummyUnit(DUMMY_PLAYER328, x457, y199, (facing605 * bj_RADTODEG169))
}


function new_Fx(real x100, real y247, real facing260, string fxpath494) returns integer{ 
    local integer this255
    if (Fx_firstFree174 > 0){
        this255 = Fx_firstFree174
        Fx_firstFree174 = Fx_nextFree314[this255]
    } else {
        Fx_maxIndex113 = (Fx_maxIndex113 + 1)
        this255 = Fx_maxIndex113
    }
    Fx_nextFree314[this255] = -1
    Fx_typeId134[this255] = 4
    construct_Fx(this255, x100, y247, facing260, fxpath494)
    return this255
}


function construct_Fx(integer this147, real x183, real y283, real facing314, string fxpath189) returns void{ 
    dummy191[this147] = null
    fx552[this147] = null
    zAngle744[this147] = 0.
    red185[this147] = 255
    green118[this147] = 255
    blue232[this147] = 255
    alpha299[this147] = 255
    dummy191[this147] = newDummyUnit(DUMMY_PLAYER328, x183, y283, (facing314 * bj_RADTODEG169))
    Fx_setFx(this147, fxpath189)
}


function new_Recyclebin(unit u916) returns integer{ 
    local integer this117
    if (Recyclebin_firstFree326 > 0){
        this117 = Recyclebin_firstFree326
        Recyclebin_firstFree326 = Recyclebin_nextFree150[this117]
    } else {
        Recyclebin_maxIndex215 = (Recyclebin_maxIndex215 + 1)
        this117 = Recyclebin_maxIndex215
    }
    Recyclebin_nextFree150[this117] = -1
    Recyclebin_typeId844[this117] = 5
    construct_Recyclebin(this117, u916)
    return this117
}


function recycle() returns void{ 
    local integer rb184
    rb184 = list324[readindex332]
    loop {
        exitwhen (not (count118 > 0))
        releaseDummyUnit(u303[rb184])
        u303[rb184] = null
        count118 = (count118 - 1)
        destroyRecyclebin(rb184)
        rb184 = next301[rb184]
    }
    list324[readindex332] = 0
    writeindex315 = readindex332
    if (readindex332 > R2I(((MIN_RECYCLE_DELAY243 / RECYCLE_INTERVAL325) + 1.0))){
        readindex332 = 0
    } else {
    }
    if (count118 != 0){
        TimerStart(recycler246, RECYCLE_INTERVAL325, false, function recycle)
    } else {
    }
}


function destroyRecyclebin(integer this738) returns void{ 
    if (Recyclebin_nextFree150[this738] < 0){
        Recyclebin_nextFree150[this738] = Recyclebin_firstFree326
        Recyclebin_firstFree326 = this738
    } else {
        $debugPrint("Double Free of Recyclebin")
    }
}


function construct_Recyclebin(integer this313, unit u106) returns void{ 
    if (count118 == 0){
        TimerStart(recycler246, RECYCLE_INTERVAL325, false, function recycle)
    } else {
    }
    count118 = (count118 + 1)
    u303[this313] = u106
    SetUnitOwner(u106, DUMMY_PLAYER328, false)
    next301[this313] = list324[writeindex315]
    list324[writeindex315] = this313
}


function getTerrainNormal(real x131, real y332, real sampleRadius333) returns <real, real, real>{ 
    local real zx283
    local real zy320
    local real sampleRadius2330
    MoveLocation(tempLoc256, (x131 - sampleRadius333), y332)
    zx283 = GetLocationZ(tempLoc256)
    MoveLocation(tempLoc256, (x131 + sampleRadius333), y332)
    zx283 = (zx283 - GetLocationZ(tempLoc256))
    MoveLocation(tempLoc256, x131, (y332 - sampleRadius333))
    zy320 = GetLocationZ(tempLoc256)
    MoveLocation(tempLoc256, x131, (y332 + sampleRadius333))
    zy320 = (zy320 - GetLocationZ(tempLoc256))
    sampleRadius2330 = (2. * sampleRadius333)
    return <(zx283 * sampleRadius2330), (zy320 * sampleRadius2330), (sampleRadius2330 * sampleRadius2330)>
}


function MoveLocation(location whichLocation139, real newX194, real newY984) returns void{ 
}


function getTerrainZ(real x928, real y567) returns real{ 
    MoveLocation(tempLoc256, x928, y567)
    return GetLocationZ(tempLoc256)
}


function isTerrainDeepWater(real x292, real y291) returns boolean{ 
    return ((not IsTerrainPathable(x292, y291, PATHING_TYPE_FLOATABILITY160)) and IsTerrainPathable(x292, y291, PATHING_TYPE_WALKABILITY514))
}


function isTerrainShallowWater(real x179, real y565) returns boolean{ 
    return (((not IsTerrainPathable(x179, y565, PATHING_TYPE_FLOATABILITY160)) and (not IsTerrainPathable(x179, y565, PATHING_TYPE_WALKABILITY514))) and IsTerrainPathable(x179, y565, PATHING_TYPE_BUILDABILITY276))
}


function isTerrainLand(real x624, real y232) returns boolean{ 
    return IsTerrainPathable(x624, y232, PATHING_TYPE_FLOATABILITY160)
}


function isTerrainPlatform(real x125, real y271) returns boolean{ 
    return (((not IsTerrainPathable(x125, y271, PATHING_TYPE_FLOATABILITY160)) and (not IsTerrainPathable(x125, y271, PATHING_TYPE_WALKABILITY514))) and (not IsTerrainPathable(x125, y271, PATHING_TYPE_BUILDABILITY276)))
}


function hideItem() returns void{ 
    if IsItemVisible(GetEnumItem()){
        hid289[hidMax310] = GetEnumItem()
        SetItemVisible(hid289[hidMax310], false)
        hidMax310 = (hidMax310 + 1)
    } else {
    }
}


function isTerrainWalkable(real x297, real y160) returns boolean{ 
    MoveRectTo(find288, x297, y160)
    EnumItemsInRect(find288, null, function hideItem)
    SetItemPosition(dItem204, x297, y160)
    X223 = GetItemX(dItem204)
    Y218 = GetItemY(dItem204)
    SetItemVisible(dItem204, false)
    loop {
        exitwhen (not (hidMax310 > 0))
        hidMax310 = (hidMax310 - 1)
        SetItemVisible(hid289[hidMax310], true)
        hid289[hidMax310] = null
    }
    return (((((X223 - x297) * (X223 - x297)) + ((Y218 - y160) * (Y218 - y160))) <= (MAX_RANGE201 * MAX_RANGE201)) and (not IsTerrainPathable(x297, y160, PATHING_TYPE_WALKABILITY514)))
}


function MoveRectTo(rect whichRect206, real newCenterX834, real newCenterY189) returns void{ 
}


function foo() returns void{ 
    local unit u171
    local real r117
    local real x182
    local real y238
    u171 = gg_unit_h000_0002188
    r117 = ((GetUnitFacing(u171) / 180.) * bj_PI432)
    x182 = GetUnitX(u171)
    y238 = GetUnitY(u171)
    if (zdif155 < 4.){
        SetUnitX(u171, (x182 - (zdif155 * Cos(r117))))
        SetUnitY(u171, (y238 - (zdif155 * Sin(r117))))
    } else {
    }
    SetUnitX(u171, (x182 - ((zdif155 * .4) * Cos(r117))))
    SetUnitY(u171, (y238 - ((zdif155 * .4) * Sin(r117))))
    lastx109 = GetUnitX(u171)
    lasty115 = GetUnitY(u171)
    e207 = getTerrainZ(lastx109, lasty115)
    zdif155 = (e207 - lastz222)
    print(toString(zdif155))
    lastz222 = e207
}


function config() returns void{ 
    SetMapName("TRIGSTR_017")
    SetMapDescription("TRIGSTR_019")
    SetPlayers(1)
    SetTeams(1)
    SetGamePlacement(MAP_PLACEMENT_USE_MAP_SETTINGS711)
    DefineStartLocation(0, 0.0, 0.0)
    InitCustomPlayerSlots()
    SetPlayerSlotAvailable(Player(0), MAP_CONTROL_USER306)
    InitGenericPlayerSlots()
}


function SetMapName(string name179) returns void{ 
}


function SetMapDescription(string description228) returns void{ 
}


function SetGamePlacement(placement whichPlacementType297) returns void{ 
}


function DefineStartLocation(integer whichStartLoc205, real x291, real y171) returns void{ 
}


function InitCustomPlayerSlots() returns void{ 
    SetPlayerStartLocation(Player(0), 0)
    SetPlayerColor(Player(0), ConvertPlayerColor(0))
    SetPlayerRacePreference(Player(0), RACE_PREF_HUMAN466)
    SetPlayerRaceSelectable(Player(0), true)
    SetPlayerController(Player(0), MAP_CONTROL_USER306)
}


function main() returns void{ 
    initGlobals()
    SetCameraBounds(((- 7424.0) + GetCameraMargin(CAMERA_MARGIN_LEFT275)), ((- 7680.0) + GetCameraMargin(CAMERA_MARGIN_BOTTOM187)), (7424.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT231)), (7168.0 - GetCameraMargin(CAMERA_MARGIN_TOP125)), ((- 7424.0) + GetCameraMargin(CAMERA_MARGIN_LEFT275)), (7168.0 - GetCameraMargin(CAMERA_MARGIN_TOP125)), (7424.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT231)), ((- 7680.0) + GetCameraMargin(CAMERA_MARGIN_BOTTOM187)))
    SetDayNightModels("Environment\DNC\DNCLordaeron\DNCLordaeronTerrain\DNCLordaeronTerrain.mdl", "Environment\DNC\DNCLordaeron\DNCLordaeronUnit\DNCLordaeronUnit.mdl")
    SetTerrainFogEx(0, 700.0, 5000.0, 0.500, 0.502, 0.502, 0.502)
    SetWaterBaseColor(222, 222, 222, 255)
    NewSoundEnvironment("Default")
    SetAmbientDaySound("VillageDay")
    SetAmbientNightSound("VillageNight")
    SetMapMusic("Music", true, 0)
    CreateAllUnits()
    InitBlizzard()
    InitGlobals()
    InitCustomTriggers()
    RunInitializationTriggers()
    init_PrintingHelper()
    init_Maths()
    init_Table()
    init_Trigger()
    init_Basics()
    init_Dummy()
    init_Fx()
    init_Terrain()
    init_Test()
}


function SetDayNightModels(string terrainDNCFile141, string unitDNCFile287) returns void{ 
}


function NewSoundEnvironment(string environmentName181) returns void{ 
}


function CreateAllUnits() returns void{ 
    CreatePlayerBuildings()
    CreatePlayerUnits()
}


function InitGlobals() returns void{ 
}


function InitCustomTriggers() returns void{ 
    null
    InitTrig_Untitled_Trigger_002()
    InitTrig_Untitled_Trigger_001()
}


function RunInitializationTriggers() returns void{ 
    ConditionalTriggerExecute(gg_trg_Melee_Initialization350)
    ConditionalTriggerExecute(gg_trg_Untitled_Trigger_001187)
}


function InitCustomTeams() returns void{ 
    SetPlayerTeam(Player(0), 0)
}


function SetPlayerStartLocation(player whichPlayer148, integer startLocIndex939) returns void{ 
}


function ConvertPlayerColor(integer i161) returns playercolor{ 
}


function SetPlayerRacePreference(player whichPlayer106, racepreference whichRacePreference153) returns void{ 
}


function SetPlayerRaceSelectable(player whichPlayer795, boolean value173) returns void{ 
}


function SetPlayerController(player whichPlayer260, mapcontrol controlType105) returns void{ 
}


function InitTrig_Untitled_Trigger_002() returns void{ 
    gg_trg_Untitled_Trigger_002422 = CreateTrigger()
    TriggerAddAction(gg_trg_Untitled_Trigger_002422, function Trig_Untitled_Trigger_002_Actions)
}


function InitTrig_Untitled_Trigger_001() returns void{ 
    gg_trg_Untitled_Trigger_001187 = CreateTrigger()
    TriggerAddAction(gg_trg_Untitled_Trigger_001187, function Trig_Untitled_Trigger_001_Actions)
}


function Trig_Untitled_Trigger_001_Actions() returns void{ 
    CreateFogModifierRectBJ(true, Player(0), FOG_OF_WAR_VISIBLE657, GetPlayableMapRect())
}


function Trig_Untitled_Trigger_002_Actions() returns void{ 
    ShowUnitHide(gg_unit_h000_0002188)
}


function CreatePlayerBuildings() returns void{ 
    CreateBuildingsForPlayer0()
}


function CreatePlayerUnits() returns void{ 
    CreateUnitsForPlayer0()
}


function CreateUnitsForPlayer0() returns void{ 
    local player p121
    local unit u122
    local integer unitID124
    local trigger t138
    local real life207
    p121 = Player(0)
    null
    null
    null
    null
    u122 = CreateUnit(p121, 1752196449, 2557.4, 2082.0, 176.753)
    gg_unit_h000_0002188 = CreateUnit(p121, 1747988528, (- 4.0), 0.7, 39.607)
    u122 = CreateUnit(p121, 1751543663, (- 4650.7), 2759.9, 314.263)
    u122 = CreateUnit(p121, 1751543663, (- 4503.7), 2609.7, 272.370)
}


function CreateBuildingsForPlayer0() returns void{ 
    local player p280
    local unit u165
    local integer unitID236
    local trigger t612
    local real life257
    p280 = Player(0)
    null
    null
    null
    null
    u165 = CreateUnit(p280, 1668312692, (- 1280.0), 2816.0, 270.000)
    u165 = CreateUnit(p280, 1668312692, 3840.0, 2816.0, 270.000)
}


function init_PrintingHelper() returns void{ 
    DEBUG_LEVEL787 = 1
    DEBUG_MSG_DURATION310 = 60.
}


function init_Maths() returns void{ 
    PI370 = 3.14159265
    DEGTORAD522 = 0.01745329
    RADTODEG173 = 57.2957795
}


function init_Table() returns void{ 
    ht108 = InitHashtable()
}


function init_Trigger() returns void{ 
    triggerData369 = new_Table()
}


function init_Terrain() returns void{ 
    MAX_RANGE201 = 10.
    DUMMY_ITEM_ID254 = 2003790951
    tempLoc256 = Location(0., 0.)
    dItem204 = null
    find288 = null
    hidMax310 = 0
    X223 = 0.
    Y218 = 0.
    find288 = Rect(0., 0., 128., 128.)
    dItem204 = CreateItem(DUMMY_ITEM_ID254, 0., 0.)
    SetItemVisible(dItem204, false)
}


function init_Fx() returns void{ 
    MIN_RECYCLE_DELAY243 = 4.0
    RECYCLE_INTERVAL325 = 0.5
    recycler246 = CreateTimer()
    readindex332 = 0
    writeindex315 = 0
    count118 = 0
}


function init_Test() returns void{ 
    local trigger t277
    zz289 = 336.
    lastx109 = 0.
    lasty115 = 0.
    e207 = 0.
    zdif155 = 0.
    lastz222 = 0.
    lastx109 = GetUnitX(gg_unit_h000_0002188)
    lasty115 = GetUnitY(gg_unit_h000_0002188)
    lastz222 = getTerrainZ(lastx109, lasty115)
    t277 = CreateTrigger()
    TriggerRegisterTimerEvent(t277, 0.0325, true)
    addAction(t277, function foo)
}


function init_Dummy() returns void{ 
    local integer i290
    local integer q838
    ANGLE_RESOLUTION132 = 12
    INITIAL_DUMMY_COUNT896 = 36
    DUMMY_STACK_LIMIT179 = 240
    first299 = 0
    last130 = 0
    size259 = 0
    g393 = CreateGroup()
    RecycleQueue_initRecycleQueues()
    i290 = INITIAL_DUMMY_COUNT896
    q838 = rqs244[0]
    if (i290 > DUMMY_STACK_LIMIT179){
        printWarning("dummy error: INITIAL_DUMMY_COUNT can not be larger than DUMMY_STACK_LIMIT.")
        i290 = DUMMY_STACK_LIMIT179
    } else {
    }
    loop {
        exitwhen (not (i290 > 0))
        staticDummy989 = CreateUnit(Player(15), DUMMY_UNIT_ID197, 0.0, 0.0, angle121[q838])
        UnitAddAbility(staticDummy989, HEIGHT_ENABLER205)
        UnitAddAbility(staticDummy989, 1097625443)
        UnitRemoveAbility(staticDummy989, HEIGHT_ENABLER205)
        new_Dummy(staticDummy989)
        i290 = (i290 - 1)
        q838 = next151[q838]
    }
}


function init_Basics() returns void{ 
    DUMMY_UNIT_ID197 = 1697656880
    HEIGHT_ENABLER205 = 1097691750
    TREE_RECOGNITION226 = 1097163124
    ANIMATION_PERIOD314 = 0.031250000
    MAX_COLLISION_SIZE202 = 197.0
    DUMMY_PLAYER328 = Player(15)
}


